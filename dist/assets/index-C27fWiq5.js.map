{"version":3,"file":"index-C27fWiq5.js","sources":["../../node_modules/react-dom/client.js","../../src/services/api.ts","../../src/hooks/useSelectedRecipes.ts","../../src/components/RecipeCard.tsx","../../src/components/Pagination.tsx","../../src/App.tsx","../../src/components/Root.tsx","../../src/pages/RecipesPage.tsx","../../src/hooks/useDebounce.ts","../../src/pages/RecipeDetailsPage.tsx","../../src/pages/SelectedRecipesPage.tsx","../../src/main.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import axios from 'axios'\nimport { RecipeResponse } from '../types/recipe'\n\nconst BASE_URL = 'https://www.themealdb.com/api/json/v1/1'\n\nexport const api = {\n\tasync searchRecipes(query: string): Promise<RecipeResponse> {\n\t\tconst response = await axios.get(`${BASE_URL}/search.php?s=${query}`)\n\t\treturn response.data\n\t},\n\n\tasync getRecipeById(id: string): Promise<RecipeResponse> {\n\t\tconst response = await axios.get(`${BASE_URL}/lookup.php?i=${id}`)\n\t\treturn response.data\n\t},\n\n\tasync getRecipesByCategory(category: string): Promise<RecipeResponse> {\n\t\tconst response = await axios.get(`${BASE_URL}/filter.php?c=${category}`)\n\t\treturn response.data\n\t},\n\n\tasync getAllCategories(): Promise<{ meals: { strCategory: string }[] }> {\n\t\tconst response = await axios.get(`${BASE_URL}/categories.php`)\n\t\treturn response.data\n\t},\n\n\tasync getRandomMeal(): Promise<RecipeResponse> {\n\t\tconst response = await axios.get(`${BASE_URL}/random.php`)\n\t\treturn response.data\n\t},\n\n\tasync getRecipesByArea(area: string): Promise<RecipeResponse> {\n\t\tconst response = await axios.get(`${BASE_URL}/filter.php?a=${area}`)\n\t\treturn response.data\n\t},\n\n\tasync getRecipesByIngredient(ingredient: string): Promise<RecipeResponse> {\n\t\tconst response = await axios.get(\n\t\t\t`${BASE_URL}/filter.php?i=${ingredient}`\n\t\t)\n\t\treturn response.data\n\t},\n\n\tasync getAllAreas(): Promise<{ meals: { strArea: string }[] }> {\n\t\tconst response = await axios.get(`${BASE_URL}/list.php?a=list`)\n\t\treturn response.data\n\t},\n\n\tasync getAllIngredients(): Promise<{ meals: { strIngredient: string }[] }> {\n\t\tconst response = await axios.get(`${BASE_URL}/list.php?i=list`)\n\t\treturn response.data\n\t},\n\n\tgetSmallImageUrl(imageUrl: string): string {\n\t\treturn imageUrl.replace(\n\t\t\t'/images/media/meals/',\n\t\t\t'/images/media/meals/preview/'\n\t\t)\n\t},\n}\n","import { create } from 'zustand'\nimport { Recipe } from '../types/recipe'\n\ninterface SelectedRecipesStore {\n\tselectedRecipes: Recipe[]\n\taddRecipe: (recipe: Recipe) => void\n\tremoveRecipe: (recipe: Recipe) => void\n\tgetIngredients: () => { name: string; measure: string }[]\n}\n\nexport const useSelectedRecipes = create<SelectedRecipesStore>()(\n\t(set, get) => ({\n\t\tselectedRecipes: [],\n\n\t\taddRecipe: (recipe) =>\n\t\t\tset((state) => ({\n\t\t\t\tselectedRecipes: [...state.selectedRecipes, recipe],\n\t\t\t})),\n\n\t\tremoveRecipe: (recipe) =>\n\t\t\tset((state) => ({\n\t\t\t\tselectedRecipes: state.selectedRecipes.filter(\n\t\t\t\t\t(r) => r.idMeal !== recipe.idMeal\n\t\t\t\t),\n\t\t\t})),\n\n\t\tgetIngredients: () => {\n\t\t\tconst { selectedRecipes } = get()\n\t\t\tconst ingredientsMap = new Map<string, string>()\n\n\t\t\tselectedRecipes.forEach((recipe) => {\n\t\t\t\tObject.entries(recipe)\n\t\t\t\t\t.filter(\n\t\t\t\t\t\t([key, value]) =>\n\t\t\t\t\t\t\tkey.startsWith('strIngredient') && value\n\t\t\t\t\t)\n\t\t\t\t\t.forEach(([key, value]) => {\n\t\t\t\t\t\tconst measureKey = `strMeasure${key.slice(13)}`\n\t\t\t\t\t\tconst measure = recipe[\n\t\t\t\t\t\t\tmeasureKey as keyof Recipe\n\t\t\t\t\t\t] as string\n\t\t\t\t\t\tingredientsMap.set(value as string, measure)\n\t\t\t\t\t})\n\t\t\t})\n\n\t\t\treturn Array.from(ingredientsMap.entries()).map(\n\t\t\t\t([name, measure]) => ({\n\t\t\t\t\tname,\n\t\t\t\t\tmeasure,\n\t\t\t\t})\n\t\t\t)\n\t\t},\n\t})\n)\n","import {\n\tBox,\n\tImage,\n\tVStack,\n\tButton,\n\tuseToast,\n\tHStack,\n\tBadge,\n} from '@chakra-ui/react'\nimport { Recipe } from '../types/recipe'\nimport { useSelectedRecipes } from '../hooks/useSelectedRecipes'\nimport { Link } from '@tanstack/react-router'\n\ninterface RecipeCardProps {\n\trecipe: Recipe\n\tonSelect?: (recipe: Recipe) => void\n}\n\nexport const RecipeCard = ({ recipe, onSelect }: RecipeCardProps) => {\n\tconst { addRecipe, selectedRecipes } = useSelectedRecipes()\n\tconst toast = useToast()\n\n\tconst isSelected = selectedRecipes.some((r) => r.idMeal === recipe.idMeal)\n\n\tconst handleSelect = () => {\n\t\tif (onSelect) {\n\t\t\tonSelect(recipe)\n\t\t} else {\n\t\t\taddRecipe(recipe)\n\t\t\ttoast({\n\t\t\t\ttitle: 'Рецепт додано',\n\t\t\t\tdescription: `${recipe.strMeal} додано до вибраних рецептів`,\n\t\t\t\tstatus: 'success',\n\t\t\t\tduration: 3000,\n\t\t\t\tisClosable: true,\n\t\t\t})\n\t\t}\n\t}\n\n\treturn (\n\t\t<Box\n\t\t\tborderWidth='1px'\n\t\t\tborderRadius='lg'\n\t\t\toverflow='hidden'\n\t\t\ttransition='all 0.2s'\n\t\t\t_hover={{ transform: 'translateY(-4px)', shadow: 'lg' }}>\n\t\t\t<Link to='/recipe/$recipeId' params={{ recipeId: recipe.idMeal }}>\n\t\t\t\t<Image\n\t\t\t\t\tsrc={recipe.strMealThumb}\n\t\t\t\t\talt={recipe.strMeal}\n\t\t\t\t\theight='200px'\n\t\t\t\t\twidth='100%'\n\t\t\t\t\tobjectFit='cover'\n\t\t\t\t\tcursor='pointer'\n\t\t\t\t/>\n\t\t\t</Link>\n\n\t\t\t<VStack p={4} align='start' spacing={2}>\n\t\t\t\t<Link\n\t\t\t\t\tto='/recipe/$recipeId'\n\t\t\t\t\tparams={{ recipeId: recipe.idMeal }}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tfontSize: '1.25rem',\n\t\t\t\t\t\tfontWeight: 'bold',\n\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\ttextDecoration: 'none',\n\t\t\t\t\t}}>\n\t\t\t\t\t{recipe.strMeal}\n\t\t\t\t</Link>\n\n\t\t\t\t<HStack spacing={2}>\n\t\t\t\t\t<Badge colorScheme='blue'>{recipe.strCategory}</Badge>\n\t\t\t\t\t<Badge colorScheme='green'>{recipe.strArea}</Badge>\n\t\t\t\t</HStack>\n\n\t\t\t\t<Button\n\t\t\t\t\tcolorScheme={isSelected ? 'red' : 'blue'}\n\t\t\t\t\tonClick={handleSelect}\n\t\t\t\t\twidth='100%'>\n\t\t\t\t\t{isSelected ? 'Вибрано' : 'Вибрати'}\n\t\t\t\t</Button>\n\t\t\t</VStack>\n\t\t</Box>\n\t)\n}\n","import { Box, Button, HStack } from '@chakra-ui/react'\nimport { ChevronLeftIcon, ChevronRightIcon } from '@chakra-ui/icons'\n\ninterface PaginationProps {\n\tcurrentPage: number\n\ttotalPages: number\n\tonPageChange: (page: number) => void\n}\n\nexport const Pagination = ({\n\tcurrentPage,\n\ttotalPages,\n\tonPageChange,\n}: PaginationProps) => {\n\tconst getPageNumbers = () => {\n\t\tconst pages = []\n\t\tconst maxVisiblePages = 7\n\n\t\tif (totalPages <= maxVisiblePages) {\n\t\t\tfor (let i = 1; i <= totalPages; i++) {\n\t\t\t\tpages.push(i)\n\t\t\t}\n\t\t} else {\n\t\t\tif (currentPage <= 4) {\n\t\t\t\tfor (let i = 1; i <= 7; i++) {\n\t\t\t\t\tpages.push(i)\n\t\t\t\t}\n\t\t\t\tpages.push('...', totalPages)\n\t\t\t} else if (currentPage >= totalPages - 3) {\n\t\t\t\tpages.push(1, '...')\n\t\t\t\tfor (let i = totalPages - 6; i <= totalPages; i++) {\n\t\t\t\t\tpages.push(i)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tpages.push(1, '...')\n\t\t\t\tfor (let i = currentPage - 2; i <= currentPage + 2; i++) {\n\t\t\t\t\tpages.push(i)\n\t\t\t\t}\n\t\t\t\tpages.push('...', totalPages)\n\t\t\t}\n\t\t}\n\n\t\treturn pages\n\t}\n\n\treturn (\n\t\t<HStack spacing={2} justify='center' mt={4}>\n\t\t\t<Button\n\t\t\t\tonClick={() => onPageChange(currentPage - 1)}\n\t\t\t\tisDisabled={currentPage === 1}\n\t\t\t\tleftIcon={<ChevronLeftIcon />}>\n\t\t\t\tПопередня\n\t\t\t</Button>\n\n\t\t\t{getPageNumbers().map((page, index) => (\n\t\t\t\t<Box key={index}>\n\t\t\t\t\t{page === '...' ? (\n\t\t\t\t\t\t<Box px={2}>...</Box>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={() => onPageChange(page as number)}\n\t\t\t\t\t\t\tvariant={currentPage === page ? 'solid' : 'outline'}\n\t\t\t\t\t\t\tcolorScheme={\n\t\t\t\t\t\t\t\tcurrentPage === page ? 'blue' : 'gray'\n\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t{page}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)}\n\t\t\t\t</Box>\n\t\t\t))}\n\n\t\t\t<Button\n\t\t\t\tonClick={() => onPageChange(currentPage + 1)}\n\t\t\t\tisDisabled={currentPage === totalPages}\n\t\t\t\trightIcon={<ChevronRightIcon />}>\n\t\t\t\tНаступна\n\t\t\t</Button>\n\t\t</HStack>\n\t)\n}\n","import { ChakraProvider } from '@chakra-ui/react'\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\nimport {\n\tRouterProvider,\n\tcreateRouter,\n\tcreateRootRoute,\n\tcreateRoute,\n} from '@tanstack/react-router'\nimport { RecipesPage } from './pages/RecipesPage'\nimport { RecipeDetailsPage } from './pages/RecipeDetailsPage'\nimport { SelectedRecipesPage } from './pages/SelectedRecipesPage'\nimport { Root } from './components/Root'\n\nconst queryClient = new QueryClient()\n\nconst rootRoute = createRootRoute({\n\tcomponent: Root,\n})\n\nconst recipesRoute = createRoute({\n\tgetParentRoute: () => rootRoute,\n\tpath: '/',\n\tcomponent: RecipesPage,\n})\n\nconst recipeDetailsRoute = createRoute({\n\tgetParentRoute: () => rootRoute,\n\tpath: '/recipe/$recipeId',\n\tcomponent: RecipeDetailsPage,\n})\n\nconst selectedRecipesRoute = createRoute({\n\tgetParentRoute: () => rootRoute,\n\tpath: '/selected',\n\tcomponent: SelectedRecipesPage,\n})\n\nconst routeTree = rootRoute.addChildren([\n\trecipesRoute,\n\trecipeDetailsRoute,\n\tselectedRecipesRoute,\n])\n\nconst router = createRouter({\n\trouteTree,\n})\n\ndeclare module '@tanstack/react-router' {\n\tinterface Register {\n\t\trouter: typeof router\n\t}\n}\n\nfunction App() {\n\treturn (\n\t\t<QueryClientProvider client={queryClient}>\n\t\t\t<ChakraProvider>\n\t\t\t\t<RouterProvider router={router} />\n\t\t\t</ChakraProvider>\n\t\t</QueryClientProvider>\n\t)\n}\n\nexport default App\n","import { Box, Flex } from '@chakra-ui/react'\nimport { Link, Outlet } from '@tanstack/react-router'\n\nexport const Root = () => {\n\treturn (\n\t\t<Box minH='100vh'>\n\t\t\t<Flex\n\t\t\t\tas='nav'\n\t\t\t\talign='center'\n\t\t\t\tjustify='space-between'\n\t\t\t\twrap='wrap'\n\t\t\t\tpadding='1rem'\n\t\t\t\tbg='blue.500'\n\t\t\t\tcolor='white'>\n\t\t\t\t<Flex align='center' mr={5}>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto='/'\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tfontSize: '1.5rem',\n\t\t\t\t\t\t\tfontWeight: 'bold',\n\t\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\t\ttextDecoration: 'none',\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\tРецепти\n\t\t\t\t\t</Link>\n\t\t\t\t</Flex>\n\t\t\t\t<Flex>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto='/'\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tmarginRight: '1rem',\n\t\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\t\ttextDecoration: 'none',\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\tВсі рецепти\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto='/selected'\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\t\ttextDecoration: 'none',\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\tВибрані рецепти\n\t\t\t\t\t</Link>\n\t\t\t\t</Flex>\n\t\t\t</Flex>\n\n\t\t\t<Outlet />\n\t\t</Box>\n\t)\n}\n","import { useState, useMemo } from 'react'\nimport {\n\tBox,\n\tContainer,\n\tGrid,\n\tInput,\n\tSelect,\n\tVStack,\n\tHeading,\n} from '@chakra-ui/react'\nimport { useQuery } from '@tanstack/react-query'\nimport { api } from '../services/api'\nimport { RecipeCard } from '../components/RecipeCard'\nimport { useDebounce } from '../hooks/useDebounce'\nimport { Pagination } from '../components/Pagination'\n\nconst ITEMS_PER_PAGE = 12\n\nexport const RecipesPage = () => {\n\tconst [searchQuery, setSearchQuery] = useState('')\n\tconst [selectedArea, setSelectedArea] = useState('')\n\tconst [selectedIngredient, setSelectedIngredient] = useState('')\n\tconst [currentPage, setCurrentPage] = useState(1)\n\tconst debouncedSearch = useDebounce(searchQuery, 500)\n\n\tconst { data: areasData } = useQuery({\n\t\tqueryKey: ['areas'],\n\t\tqueryFn: api.getAllAreas,\n\t})\n\n\tconst { data: ingredientsData } = useQuery({\n\t\tqueryKey: ['ingredients'],\n\t\tqueryFn: api.getAllIngredients,\n\t})\n\n\tconst { data: recipesData } = useQuery({\n\t\tqueryKey: [\n\t\t\t'recipes',\n\t\t\tdebouncedSearch,\n\t\t\tselectedArea,\n\t\t\tselectedIngredient,\n\t\t],\n\t\tqueryFn: async () => {\n\t\t\tif (debouncedSearch) {\n\t\t\t\treturn api.searchRecipes(debouncedSearch)\n\t\t\t}\n\t\t\tif (selectedArea) {\n\t\t\t\treturn api.getRecipesByArea(selectedArea)\n\t\t\t}\n\t\t\tif (selectedIngredient) {\n\t\t\t\treturn api.getRecipesByIngredient(selectedIngredient)\n\t\t\t}\n\t\t\t// Random meals\n\t\t\tconst randomMeals = await Promise.all(\n\t\t\t\tArray(14)\n\t\t\t\t\t.fill(null)\n\t\t\t\t\t.map(() => api.getRandomMeal())\n\t\t\t)\n\t\t\treturn {\n\t\t\t\tmeals: randomMeals.flatMap((meal) => meal.meals || []),\n\t\t\t}\n\t\t},\n\t})\n\n\tconst recipes = useMemo(() => {\n\t\treturn recipesData?.meals || []\n\t}, [recipesData])\n\n\tconst totalPages = Math.ceil(recipes.length / ITEMS_PER_PAGE)\n\tconst paginatedRecipes = useMemo(() => {\n\t\treturn recipes.slice(\n\t\t\t(currentPage - 1) * ITEMS_PER_PAGE,\n\t\t\tcurrentPage * ITEMS_PER_PAGE\n\t\t)\n\t}, [recipes, currentPage])\n\n\tconst handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetSearchQuery(e.target.value)\n\t\tsetSelectedArea('')\n\t\tsetSelectedIngredient('')\n\t\tsetCurrentPage(1)\n\t}\n\n\tconst handleAreaChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tsetSelectedArea(e.target.value)\n\t\tsetSearchQuery('')\n\t\tsetSelectedIngredient('')\n\t\tsetCurrentPage(1)\n\t}\n\n\tconst handleIngredientChange = (\n\t\te: React.ChangeEvent<HTMLSelectElement>\n\t) => {\n\t\tsetSelectedIngredient(e.target.value)\n\t\tsetSearchQuery('')\n\t\tsetSelectedArea('')\n\t\tsetCurrentPage(1)\n\t}\n\n\treturn (\n\t\t<Container maxW='container.xl' py={8}>\n\t\t\t<VStack spacing={8}>\n\t\t\t\t<Heading>Рецепти</Heading>\n\n\t\t\t\t<Box width='100%'>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tplaceholder='Пошук рецептів...'\n\t\t\t\t\t\tvalue={searchQuery}\n\t\t\t\t\t\tonChange={handleSearch}\n\t\t\t\t\t\tsize='lg'\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\n\t\t\t\t<Grid templateColumns='repeat(2, 1fr)' gap={4} width='100%'>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tplaceholder='Виберіть кухню'\n\t\t\t\t\t\tvalue={selectedArea}\n\t\t\t\t\t\tonChange={handleAreaChange}>\n\t\t\t\t\t\t{areasData?.meals?.map((area) => (\n\t\t\t\t\t\t\t<option key={area.strArea} value={area.strArea}>\n\t\t\t\t\t\t\t\t{area.strArea}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Select>\n\n\t\t\t\t\t<Select\n\t\t\t\t\t\tplaceholder='Виберіть інгредієнт'\n\t\t\t\t\t\tvalue={selectedIngredient}\n\t\t\t\t\t\tonChange={handleIngredientChange}>\n\t\t\t\t\t\t{ingredientsData?.meals?.map((ingredient) => (\n\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\tkey={ingredient.strIngredient}\n\t\t\t\t\t\t\t\tvalue={ingredient.strIngredient}>\n\t\t\t\t\t\t\t\t{ingredient.strIngredient}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Select>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid\n\t\t\t\t\ttemplateColumns={{\n\t\t\t\t\t\tbase: '1fr',\n\t\t\t\t\t\tmd: 'repeat(2, 1fr)',\n\t\t\t\t\t\tlg: 'repeat(3, 1fr)',\n\t\t\t\t\t}}\n\t\t\t\t\tgap={6}\n\t\t\t\t\twidth='100%'>\n\t\t\t\t\t{paginatedRecipes.map((recipe) => (\n\t\t\t\t\t\t<RecipeCard key={recipe.idMeal} recipe={recipe} />\n\t\t\t\t\t))}\n\t\t\t\t</Grid>\n\n\t\t\t\t{totalPages > 1 && (\n\t\t\t\t\t<Pagination\n\t\t\t\t\t\tcurrentPage={currentPage}\n\t\t\t\t\t\ttotalPages={totalPages}\n\t\t\t\t\t\tonPageChange={setCurrentPage}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</VStack>\n\t\t</Container>\n\t)\n}\n","import { useEffect, useState } from 'react'\n\nexport function useDebounce<T>(value: T, delay: number): T {\n\tconst [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n\tuseEffect(() => {\n\t\tconst timer = setTimeout(() => {\n\t\t\tsetDebouncedValue(value)\n\t\t}, delay)\n\n\t\treturn () => {\n\t\t\tclearTimeout(timer)\n\t\t}\n\t}, [value, delay])\n\n\treturn debouncedValue\n}\n","import { useParams } from '@tanstack/react-router'\nimport {\n\tContainer,\n\tVStack,\n\tHeading,\n\tImage,\n\tText,\n\tGrid,\n\tBox,\n\tList,\n\tListItem,\n\tuseToast,\n} from '@chakra-ui/react'\nimport { useQuery } from '@tanstack/react-query'\nimport { api } from '../services/api'\nimport { useSelectedRecipes } from '../hooks/useSelectedRecipes'\nimport { Recipe } from '../types/recipe'\n\nexport const RecipeDetailsPage = () => {\n\tconst { recipeId } = useParams({ from: '/recipe/$recipeId' })\n\tconst { addRecipe, removeRecipe, selectedRecipes } = useSelectedRecipes()\n\tconst toast = useToast()\n\n\tconst { data: recipeData } = useQuery({\n\t\tqueryKey: ['recipe', recipeId],\n\t\tqueryFn: () => api.getRecipeById(recipeId),\n\t})\n\n\tconst recipe = recipeData?.meals?.[0]\n\tconst isSelected = selectedRecipes.some((r) => r.idMeal === recipe?.idMeal)\n\n\tif (!recipe) {\n\t\treturn (\n\t\t\t<Container maxW='container.xl' py={8}>\n\t\t\t\t<Heading>Рецепт не знайдено</Heading>\n\t\t\t</Container>\n\t\t)\n\t}\n\n\tconst ingredients = Object.entries(recipe)\n\t\t.filter(([key, value]) => key.startsWith('strIngredient') && value)\n\t\t.map(([key, value]) => {\n\t\t\tconst measureKey = `strMeasure${key.slice(13)}` as keyof Recipe\n\t\t\treturn {\n\t\t\t\tingredient: value,\n\t\t\t\tmeasure: recipe[measureKey],\n\t\t\t}\n\t\t})\n\n\tconst handleToggleSelect = () => {\n\t\tif (isSelected) {\n\t\t\tremoveRecipe(recipe)\n\t\t\ttoast({\n\t\t\t\ttitle: 'Рецепт видалено',\n\t\t\t\tdescription: `${recipe.strMeal} видалено з вибраних рецептів`,\n\t\t\t\tstatus: 'info',\n\t\t\t\tduration: 3000,\n\t\t\t\tisClosable: true,\n\t\t\t})\n\t\t} else {\n\t\t\taddRecipe(recipe)\n\t\t\ttoast({\n\t\t\t\ttitle: 'Рецепт додано',\n\t\t\t\tdescription: `${recipe.strMeal} додано до вибраних рецептів`,\n\t\t\t\tstatus: 'success',\n\t\t\t\tduration: 3000,\n\t\t\t\tisClosable: true,\n\t\t\t})\n\t\t}\n\t}\n\n\treturn (\n\t\t<Container maxW='container.xl' py={8}>\n\t\t\t<VStack spacing={8} align='stretch'>\n\t\t\t\t<Grid templateColumns={{ base: '1fr', md: '1fr 1fr' }} gap={8}>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\tsrc={recipe.strMealThumb}\n\t\t\t\t\t\t\talt={recipe.strMeal}\n\t\t\t\t\t\t\tborderRadius='lg'\n\t\t\t\t\t\t\twidth='100%'\n\t\t\t\t\t\t\tobjectFit='cover'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Box>\n\n\t\t\t\t\t<VStack align='start' spacing={4}>\n\t\t\t\t\t\t<Heading>{recipe.strMeal}</Heading>\n\t\t\t\t\t\t<Text color='gray.600'>\n\t\t\t\t\t\t\tКатегорія: {recipe.strCategory}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Text color='gray.600'>Кухня: {recipe.strArea}</Text>\n\t\t\t\t\t\t<Text color='gray.600'>\n\t\t\t\t\t\t\tІнструкції: {recipe.strInstructions}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tas='button'\n\t\t\t\t\t\t\tonClick={handleToggleSelect}\n\t\t\t\t\t\t\tpx={4}\n\t\t\t\t\t\t\tpy={2}\n\t\t\t\t\t\t\tbg={isSelected ? 'red.500' : 'blue.500'}\n\t\t\t\t\t\t\tcolor='white'\n\t\t\t\t\t\t\tborderRadius='md'\n\t\t\t\t\t\t\t_hover={{\n\t\t\t\t\t\t\t\tbg: isSelected ? 'red.600' : 'blue.600',\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{isSelected\n\t\t\t\t\t\t\t\t? 'Видалити з вибраних'\n\t\t\t\t\t\t\t\t: 'Додати до вибраних'}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</VStack>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Box>\n\t\t\t\t\t<Heading size='md' mb={4}>\n\t\t\t\t\t\tІнгредієнти\n\t\t\t\t\t</Heading>\n\t\t\t\t\t<List spacing={2}>\n\t\t\t\t\t\t{ingredients.map((item, index) => (\n\t\t\t\t\t\t\t<ListItem key={index}>\n\t\t\t\t\t\t\t\t{item.measure} {item.ingredient}\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</List>\n\t\t\t\t</Box>\n\t\t\t</VStack>\n\t\t</Container>\n\t)\n}\n","import {\n\tContainer,\n\tVStack,\n\tHeading,\n\tGrid,\n\tBox,\n\tText,\n\tList,\n\tListItem,\n\tButton,\n\tuseToast,\n\tDivider,\n} from '@chakra-ui/react'\nimport { useSelectedRecipes } from '../hooks/useSelectedRecipes'\nimport { RecipeCard } from '../components/RecipeCard'\n\nexport const SelectedRecipesPage = () => {\n\tconst { selectedRecipes, removeRecipe, getIngredients } =\n\t\tuseSelectedRecipes()\n\tconst toast = useToast()\n\n\tconst handleRemove = (recipe: Recipe) => {\n\t\tremoveRecipe(recipe)\n\t\ttoast({\n\t\t\ttitle: 'Рецепт видалено',\n\t\t\tdescription: `${recipe.strMeal} видалено з вибраних рецептів`,\n\t\t\tstatus: 'info',\n\t\t\tduration: 3000,\n\t\t\tisClosable: true,\n\t\t})\n\t}\n\n\tif (selectedRecipes.length === 0) {\n\t\treturn (\n\t\t\t<Container maxW='container.xl' py={8}>\n\t\t\t\t<VStack spacing={4}>\n\t\t\t\t\t<Heading>Мої вибрані рецепти</Heading>\n\t\t\t\t\t<Text>У вас поки немає вибраних рецептів</Text>\n\t\t\t\t</VStack>\n\t\t\t</Container>\n\t\t)\n\t}\n\n\treturn (\n\t\t<Container maxW='container.xl' py={8}>\n\t\t\t<VStack spacing={8} align='stretch'>\n\t\t\t\t<Heading>Мої вибрані рецепти</Heading>\n\n\t\t\t\t<Grid\n\t\t\t\t\ttemplateColumns={{\n\t\t\t\t\t\tbase: '1fr',\n\t\t\t\t\t\tmd: 'repeat(2, 1fr)',\n\t\t\t\t\t\tlg: 'repeat(3, 1fr)',\n\t\t\t\t\t\txl: 'repeat(4, 1fr)',\n\t\t\t\t\t}}\n\t\t\t\t\tgap={6}>\n\t\t\t\t\t{selectedRecipes.map((recipe) => (\n\t\t\t\t\t\t<RecipeCard\n\t\t\t\t\t\t\tkey={recipe.idMeal}\n\t\t\t\t\t\t\trecipe={recipe}\n\t\t\t\t\t\t\tonSelect={handleRemove}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</Grid>\n\n\t\t\t\t<Divider />\n\n\t\t\t\t<Box>\n\t\t\t\t\t<Heading size='md' mb={4}>\n\t\t\t\t\t\tСписок інгредієнтів:\n\t\t\t\t\t</Heading>\n\t\t\t\t\t<List spacing={2}>\n\t\t\t\t\t\t{getIngredients().map((ingredient, index) => (\n\t\t\t\t\t\t\t<ListItem key={index}>\n\t\t\t\t\t\t\t\t• {ingredient.name} - {ingredient.measure}\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</List>\n\t\t\t\t</Box>\n\n\t\t\t\t<Divider />\n\n\t\t\t\t<Box>\n\t\t\t\t\t<Heading size='md' mb={4}>\n\t\t\t\t\t\tІнструкції по приготуванню:\n\t\t\t\t\t</Heading>\n\t\t\t\t\t{selectedRecipes.map((recipe, index) => (\n\t\t\t\t\t\t<Box key={recipe.idMeal} mb={6}>\n\t\t\t\t\t\t\t<Heading size='sm' mb={2}>\n\t\t\t\t\t\t\t\t{recipe.strMeal}\n\t\t\t\t\t\t\t</Heading>\n\t\t\t\t\t\t\t<Text whiteSpace='pre-line'>\n\t\t\t\t\t\t\t\t{recipe.strInstructions}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t))}\n\t\t\t\t</Box>\n\t\t\t</VStack>\n\t\t</Container>\n\t)\n}\n","import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport './index.css'\nimport App from './App.tsx'\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n)\n"],"names":["m","require$$0","createRoot","hydrateRoot","BASE_URL","api","async","query","axios","get","data","id","category","area","ingredient","getSmallImageUrl","imageUrl","replace","useSelectedRecipes","create","set","selectedRecipes","addRecipe","recipe","state","removeRecipe","filter","r","idMeal","getIngredients","ingredientsMap","Map","forEach","Object","entries","key","value","startsWith","measureKey","slice","measure","Array","from","map","name","RecipeCard","onSelect","toast","useToast","isSelected","some","jsxRuntimeExports","jsxs","Box","borderWidth","borderRadius","overflow","transition","_hover","transform","shadow","children","jsx","Link","to","params","recipeId","Image","src","strMealThumb","alt","strMeal","height","width","objectFit","cursor","VStack","p","align","spacing","style","fontSize","fontWeight","textDecoration","HStack","Badge","colorScheme","strCategory","strArea","Button","onClick","title","description","status","duration","isClosable","Pagination","currentPage","totalPages","onPageChange","justify","mt","isDisabled","leftIcon","ChevronLeftIcon","pages","i","push","getPageNumbers","page","index","px","variant","rightIcon","ChevronRightIcon","queryClient","QueryClient","rootRoute","createRootRoute","component","minH","Flex","as","wrap","padding","bg","color","mr","marginRight","Outlet","recipesRoute","createRoute","getParentRoute","path","searchQuery","setSearchQuery","useState","selectedArea","setSelectedArea","selectedIngredient","setSelectedIngredient","setCurrentPage","debouncedSearch","delay","debouncedValue","setDebouncedValue","useEffect","timer","setTimeout","clearTimeout","useDebounce","areasData","useQuery","queryKey","queryFn","getAllAreas","ingredientsData","getAllIngredients","recipesData","searchRecipes","getRecipesByArea","getRecipesByIngredient","meals","Promise","all","fill","getRandomMeal","flatMap","meal","recipes","useMemo","Math","ceil","length","paginatedRecipes","Container","maxW","py","Heading","Input","placeholder","onChange","e","target","size","Grid","templateColumns","gap","Select","_a","_b","strIngredient","base","md","lg","recipeDetailsRoute","useParams","recipeData","getRecipeById","ingredients","Text","strInstructions","mb","List","item","ListItem","selectedRecipesRoute","handleRemove","xl","Divider","whiteSpace","router","createRouter","routeTree","addChildren","App","QueryClientProvider","client","ChakraProvider","RouterProvider","document","getElementById","render","StrictMode"],"mappings":"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","x_google_ignoreList":[0]}