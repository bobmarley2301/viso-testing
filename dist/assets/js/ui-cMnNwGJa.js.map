{"version":3,"file":"ui-cMnNwGJa.js","sources":["../../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../../node_modules/framer-motion/dist/es/motion/index.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../../../node_modules/framer-motion/dist/es/utils/clamp.mjs","../../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../../../node_modules/framer-motion/dist/es/value/types/utils.mjs","../../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../../node_modules/framer-motion/dist/es/utils/noop.mjs","../../../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../../../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../../../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../../node_modules/framer-motion/dist/es/utils/pipe.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../../node_modules/framer-motion/dist/es/utils/errors.mjs","../../../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../../../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../../../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../../../node_modules/framer-motion/dist/es/easing/ease.mjs","../../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../../../node_modules/framer-motion/dist/es/easing/circ.mjs","../../../node_modules/framer-motion/dist/es/easing/back.mjs","../../../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../../../node_modules/framer-motion/dist/es/utils/mix.mjs","../../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../../../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../../../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../../../node_modules/framer-motion/dist/es/utils/progress.mjs","../../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../../../node_modules/framer-motion/dist/es/utils/memo.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../../../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../../node_modules/framer-motion/dist/es/utils/array.mjs","../../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../../../node_modules/framer-motion/dist/es/value/index.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../../node_modules/framer-motion/dist/es/debug/record.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../../node_modules/framer-motion/dist/es/render/store.mjs","../../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../../../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../../../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../../../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../../../node_modules/framer-motion/dist/es/components/LazyMotion/index.mjs","../../../node_modules/framer-motion/dist/es/render/dom/features-animation.mjs","../../../node_modules/@chakra-ui/icons/dist/esm/Search.mjs","../../../node_modules/@chakra-ui/icons/dist/esm/ChevronLeft.mjs","../../../node_modules/@chakra-ui/icons/dist/esm/ChevronRight.mjs","../../../node_modules/@chakra-ui/icons/dist/esm/Star.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","const noop = (any) => any;\n\nexport { noop };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n};\n\nexport { MotionGlobalConfig };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.18.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.18.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.18.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import * as React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { loadFeatures } from '../../motion/features/load-features.mjs';\n\n/**\n * Used in conjunction with the `m` component to reduce bundle size.\n *\n * `m` is a version of the `motion` component that only loads functionality\n * critical for the initial render.\n *\n * `LazyMotion` can then be used to either synchronously or asynchronously\n * load animation and gesture support.\n *\n * ```jsx\n * // Synchronous loading\n * import { LazyMotion, m, domAnimation } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={domAnimation}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n *\n * // Asynchronous loading\n * import { LazyMotion, m } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={() => import('./path/to/domAnimation')}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction LazyMotion({ children, features, strict = false }) {\n    const [, setIsLoaded] = useState(!isLazyBundle(features));\n    const loadedRenderer = useRef(undefined);\n    /**\n     * If this is a synchronous load, load features immediately\n     */\n    if (!isLazyBundle(features)) {\n        const { renderer, ...loadedFeatures } = features;\n        loadedRenderer.current = renderer;\n        loadFeatures(loadedFeatures);\n    }\n    useEffect(() => {\n        if (isLazyBundle(features)) {\n            features().then(({ renderer, ...loadedFeatures }) => {\n                loadFeatures(loadedFeatures);\n                loadedRenderer.current = renderer;\n                setIsLoaded(true);\n            });\n        }\n    }, []);\n    return (React.createElement(LazyContext.Provider, { value: { renderer: loadedRenderer.current, strict } }, children));\n}\nfunction isLazyBundle(features) {\n    return typeof features === \"function\";\n}\n\nexport { LazyMotion };\n","import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\nexport { domAnimation };\n","import { createIcon } from '@chakra-ui/react';\n\nconst SearchIcon = createIcon({\n  d: \"M23.384,21.619,16.855,15.09a9.284,9.284,0,1,0-1.768,1.768l6.529,6.529a1.266,1.266,0,0,0,1.768,0A1.251,1.251,0,0,0,23.384,21.619ZM2.75,9.5a6.75,6.75,0,1,1,6.75,6.75A6.758,6.758,0,0,1,2.75,9.5Z\",\n  displayName: \"SearchIcon\"\n});\n\nexport { SearchIcon };\n","import { createIcon } from '@chakra-ui/react';\n\nconst ChevronLeftIcon = createIcon({\n  d: \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\",\n  displayName: \"ChevronLeftIcon\"\n});\n\nexport { ChevronLeftIcon };\n","import { createIcon } from '@chakra-ui/react';\n\nconst ChevronRightIcon = createIcon({\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\",\n  displayName: \"ChevronRightIcon\"\n});\n\nexport { ChevronRightIcon };\n","import { createIcon } from '@chakra-ui/react';\n\nconst StarIcon = createIcon({\n  d: \"M23.555,8.729a1.505,1.505,0,0,0-1.406-.98H16.062a.5.5,0,0,1-.472-.334L13.405,1.222a1.5,1.5,0,0,0-2.81,0l-.005.016L8.41,7.415a.5.5,0,0,1-.471.334H1.85A1.5,1.5,0,0,0,.887,10.4l5.184,4.3a.5.5,0,0,1,.155.543L4.048,21.774a1.5,1.5,0,0,0,2.31,1.684l5.346-3.92a.5.5,0,0,1,.591,0l5.344,3.919a1.5,1.5,0,0,0,2.312-1.683l-2.178-6.535a.5.5,0,0,1,.155-.543l5.194-4.306A1.5,1.5,0,0,0,23.555,8.729Z\",\n  displayName: \"StarIcon\"\n});\n\nexport { StarIcon };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","loadFeatures","features","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React.createElement","createElement","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","length","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","i","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","useConstant","init","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","noop","any","Queue","constructor","this","order","scheduled","add","process","push","remove","index","splice","delete","clear","stepsOrder","schedule","frame","cancel","cancelFrame","frameData","steps","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","callback","keepAlive","immediate","addToCurrentFrame","queue","createRenderStep","processStep","stepId","processBatch","performance","now","createRenderBatcher","requestAnimationFrame","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","pendingCancel","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","MotionGlobalConfig","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionOverride","makeTargetAnimatable","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","useIsPresent","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","context2","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig","useIsMounted","PopChildMeasure","React.Component","childRef","sizeRef","offsetHeight","offsetWidth","offsetTop","offsetLeft","PopChild","dataset","motionPopId","head","appendChild","sheet","insertRule","removeChild","React.cloneElement","cloneElement","PresenceChild","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","childId","isComplete","_","React.useEffect","getChildKey","AnimatePresence","exitBeforeEnter","forceRender","forcedRenderCount","setForcedRenderCount","useState","useForceUpdate","filteredChildren","filtered","Children","isValidElement","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","updateChildLookup","React.Fragment","presentKeys","targetKeys","numPresent","component","insertionIndex","exitingComponent","onExit","leftOverKeys","childKey","leftOverKey","presentChild","presentChildKey","Fragment","LazyMotion","setIsLoaded","isLazyBundle","loadedRenderer","loadedFeatures","domAnimation","SearchIcon","createIcon","displayName","ChevronLeftIcon","ChevronRightIcon","StarIcon"],"mappings":"uDAKA,MAAMA,EAAsBC,EAAAA,cAAc,CACtCC,mBAAqBC,GAAMA,EAC3BC,UAAU,EACVC,cAAe,UCNbC,EAAgBL,EAAaA,cAAC,ICG9BM,EAAkBN,EAAaA,cAAC,MCLhCO,EAAgC,oBAAbC,SCGnBC,EAA4BF,EAAYG,EAAAA,gBAAkBC,EAASA,UCDnEC,EAAcZ,EAAaA,cAAC,CAAEa,QAAQ,ICCtCC,EAAeC,GAAQA,EAAIC,QAAQ,kBAAmB,SAASC,cCA/DC,EAA+B,QAAUJ,EADjB,kBCF9B,SAASK,EAAYC,GACT,OAAAA,GACW,iBAARA,GACPC,OAAOC,UAAUC,eAAeC,KAAKJ,EAAK,UAClD,CCDA,SAASK,EAAeC,GACpB,MAAoB,iBAANA,GAAkBC,MAAMC,QAAQF,EAClD,CCLA,SAASG,EAAoBH,GACzB,OAAc,OAANA,GACS,iBAANA,GACY,mBAAZA,EAAEI,KACjB,CCJA,MAAMC,EAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,EAAe,CAAC,aAAcD,GCLpC,SAASE,EAAsBC,GAC3B,OAAQL,EAAoBK,EAAMC,UAC9BH,EAAaI,MAAMC,GAASZ,EAAeS,EAAMG,KACzD,CACA,SAASC,EAAcJ,GACnB,OAAOK,QAAQN,EAAsBC,IAAUA,EAAMM,SACzD,CCNA,SAASC,EAAuBP,GACtB,MAAAQ,QAAEA,UAASP,GCFrB,SAAgCD,EAAOS,GAC/B,GAAAV,EAAsBC,GAAQ,CACxB,MAAAQ,QAAEA,EAASP,QAAAA,GAAYD,EACtB,MAAA,CACHQ,SAAqB,IAAZA,GAAqBjB,EAAeiB,GACvCA,OACA,EACNP,QAASV,EAAeU,GAAWA,OAAU,EAEzD,CACI,OAAyB,IAAlBD,EAAMU,QAAoBD,EAAU,CAAE,CACjD,CDTiCE,CAAuBX,EAAOY,EAAAA,WAAWzC,IACtE,OAAO0C,WAAQ,KAAO,CAAEL,UAASP,aAAY,CAACa,EAA0BN,GAAUM,EAA0Bb,IAChH,CACA,SAASa,EAA0BC,GAC/B,OAAOtB,MAAMC,QAAQqB,GAAQA,EAAKC,KAAK,KAAOD,CAClD,CEVA,MAAME,EAAe,CACjBC,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJC,KAAM,CAAC,QACPC,KAAM,CAAC,OAAQ,gBACfC,MAAO,CAAC,cACRC,MAAO,CAAC,aAAc,eAAgB,cACtCC,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCC,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3CC,OAAQ,CAAC,SAAU,aAEjBC,EAAqB,CAAE,EAC7B,IAAA,MAAWC,MAAOX,EACdU,EAAmBC,IAAO,CACtBC,UAAY7B,GAAUiB,EAAaW,IAAK1B,MAAMC,KAAWH,EAAMG,MCrBvE,SAAS2B,EAAaC,GAClB,IAAA,MAAWH,KAAOG,EACdJ,EAAmBC,GAAO,IACnBD,EAAmBC,MACnBG,EAASH,GAGxB,CCPA,MAAMI,EAAqBlE,EAAaA,cAAC,ICGnCmE,EAA2BnE,EAAaA,cAAC,ICLzCoE,EAAwBC,OAAOC,IAAI,yBCuBzC,SAASC,GAAwBC,kBAAAA,EAAAA,oBAAmBC,YAAqBC,EAAWC,eAAAA,EAAAC,UAAgBA,IAChGJ,GAAqBR,EAAaQ,GA2C5B,MAAAK,EAAsBC,EAAUA,YA1C7B,SAAgB5C,EAAO6C,GAKxBC,IAAAA,EACJ,MAAMC,EAAiB,IAChBnC,EAAAA,WAAW/C,MACXmC,EACHgD,SAAUC,EAAYjD,KAEpB/B,SAAEA,GAAa8E,EACftC,EAAUF,EAAuBP,GACjCkD,EAAcT,EAAezC,EAAO/B,GACtC,IAACA,GAAYI,EAAW,CAOxBoC,EAAQ0C,cCtCpB,SAA0BT,EAAWQ,EAAalD,EAAOuC,GACrD,MAAQY,cAAeC,GAAWxC,EAAAA,WAAWzC,GACvCkF,EAAczC,EAAUA,WAAClC,GACzB4E,EAAkB1C,EAAUA,WAACxC,GAC7BmF,EAAsB3C,EAAAA,WAAW/C,GAAqBK,cACtDsF,EAAmBC,EAAAA,SAIzBlB,EAAsBA,GAAuBc,EAAYK,UACpDF,EAAiBG,SAAWpB,IACZiB,EAAAG,QAAUpB,EAAoBG,EAAW,CACtDQ,cACAE,SACApD,QACAsD,kBACAM,wBAAuBN,IACW,IAA5BA,EAAgB9C,QAEtB+C,yBAGR,MAAMJ,EAAgBK,EAAiBG,QACvCE,EAAAA,oBAAmB,KACEV,GAAAA,EAAcW,OAAO9D,EAAOsD,EAAe,IAM1D,MAAAS,EAAeN,EAAMA,OAACpD,QAAQL,EAAMhB,KAAkCgF,OAAOC,kBAgC5E,OA/BP1F,GAA0B,KACjB4E,IAELA,EAAce,SAWVH,EAAaJ,SAAWR,EAAcgB,gBACtChB,EAAcgB,eAAeC,iBACzC,IAEI3F,EAAAA,WAAU,KACD0E,IAELA,EAAckB,kBACTN,EAAaJ,SAAWR,EAAcgB,gBACvChB,EAAcgB,eAAeC,iBAE7BL,EAAaJ,UACbI,EAAaJ,SAAU,EAEvBK,OAAOC,iBAAkB,GACrC,IAEWd,CACX,CDzBoCmB,CAAiB5B,EAAWQ,EAAaH,EAAgBR,GAK3E,MAAAgC,EAA2B3D,EAAUA,WAACqB,GACtCuC,EAAW5D,EAAAA,WAAWlC,GAAaC,OACrC8B,EAAQ0C,gBACRL,EAAgBrC,EAAQ0C,cAAcrB,aAEtCiB,EAAgByB,EAAUlC,EAAmBiC,GAE7D,CAKQ,OAAQE,EAAmBC,cAACvG,EAAcwG,SAAU,CAAEC,MAAOnE,GACzDqC,GAAiBrC,EAAQ0C,cAAiBsB,EAAAA,cAAoB3B,EAAe,CAAEK,cAAe1C,EAAQ0C,iBAAkBJ,IAAqB,KAC7IP,EAAUE,EAAW1C,EE1DjC,SAAsBkD,EAAaC,EAAeN,GAC9C,OAAOgC,EAAAA,aAAaC,IAChBA,GAAY5B,EAAY6B,OAAS7B,EAAY6B,MAAMD,GAC/C3B,IACA2B,EACM3B,EAAc4B,MAAMD,GACpB3B,EAAc6B,WAEpBnC,IAC2B,mBAAhBA,EACPA,EAAYiC,GAEP7F,EAAY4D,KACjBA,EAAYc,QAAUmB,GAEtC,GAOI,CAAC3B,GACL,CFmCwC8B,CAAa/B,EAAazC,EAAQ0C,cAAeN,GAAcK,EAAajF,EAAUwC,EAAQ0C,eACtI,IAGW,OADPR,EAAoBT,GAAyBQ,EACtCC,CACX,CACA,SAASM,GAAYD,SAAEA,IACnB,MAAMkC,EAAgBtE,EAAAA,WAAWoB,GAAoBmD,GACrD,OAAOD,QAA8B,IAAblC,EAClBkC,EAAgB,IAAMlC,EACtBA,CACV,CG5DA,SAASoC,EAAkBC,GACvB,SAASC,EAAO5C,EAAW6C,EAA8B,IACrD,OAAOlD,EAAsBgD,EAAa3C,EAAW6C,GAC7D,CACQ,GAAiB,oBAAVC,MACA,OAAAF,EAML,MAAAG,MAAqBC,IACpB,OAAA,IAAIF,MAAMF,EAAQ,CAMrBK,IAAK,CAACC,EAAShE,KAIN6D,EAAeI,IAAIjE,IACpB6D,EAAeK,IAAIlE,EAAK0D,EAAO1D,IAE5B6D,EAAeE,IAAI/D,KAGtC,CCxCA,MAAMmE,EAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,EAAetD,GACpB,MAKqB,iBAAdA,IAIHA,EAAUuD,SAAS,SAOvBF,EAAqBG,QAAQxD,IAAa,GAItC,QAAQyD,KAAKzD,GAIrB,CC3BA,MAAM0D,EAAkB,CAAE,ECG1B,MAAMC,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAIC,IAAIF,GCtB/B,SAASG,EAAoB5E,GAAOF,OAAAA,EAAAA,SAAQsB,IACxC,OAAQsD,EAAeT,IAAIjE,IACvBA,EAAI6E,WAAW,YACb/E,QAAuB,IAAbsB,OACLoD,EAAgBxE,IAAgB,YAARA,EACvC,CCRA,MAAM8E,EAAiB9B,GAAUvE,QAAQuE,GAASA,EAAM+B,aCElDC,EAAiB,CACnBC,EAAG,aACHC,EAAG,aACHC,EAAG,aACHC,qBAAsB,eAEpBC,EAAgBZ,EAAmBa,OCRzC,MAAMC,EAAyBC,GAAWxF,GAAuB,iBAARA,GAAoBA,EAAI6E,WAAWW,GACtFC,EAAoBF,EAAsB,MAC1CG,EAAqBH,EAAsB,UCC3CI,EAAiB,CAAC3C,EAAO4C,IACpBA,GAAyB,iBAAV5C,EAChB4C,EAAKC,UAAU7C,GACfA,ECNJ8C,EAAQ,CAACC,EAAKC,EAAKpI,IAAMqI,KAAKF,IAAIE,KAAKD,IAAIpI,EAAGmI,GAAMC,GCEpDE,EAAS,CACX3B,KAAO3G,GAAmB,iBAANA,EACpBuI,MAAOC,WACPP,UAAYjI,GAAMA,GAEhByI,EAAQ,IACPH,EACHL,UAAYjI,GAAMkI,EAAM,EAAG,EAAGlI,IAE5B0I,EAAQ,IACPJ,EACHK,QAAS,GCPPC,EAAY5I,GAAMqI,KAAKQ,MAAU,IAAJ7I,GAAc,IAC3C8I,EAAa,uBACbC,EAAa,8FACbC,EAAmB,+FACzB,SAASC,EAASjJ,GACd,MAAoB,iBAANA,CAClB,CCVA,MAAMkJ,EAAkBC,IAAU,CAC9BxC,KAAO3G,GAAMiJ,EAASjJ,IAAMA,EAAEoJ,SAASD,IAAiC,IAAxBnJ,EAAEqJ,MAAM,KAAK3B,OAC7Da,MAAOC,WACPP,UAAYjI,GAAM,GAAGA,IAAImJ,MAEvBG,EAAUJ,EAAe,OACzBK,EAAUL,EAAe,KACzBM,GAAKN,EAAe,MACpBO,GAAKP,EAAe,MACpBQ,GAAKR,EAAe,MACpBS,GAAqB,IACpBJ,EACHhB,MAAQvI,GAAMuJ,EAAQhB,MAAMvI,GAAK,IACjCiI,UAAYjI,GAAMuJ,EAAQtB,UAAc,IAAJjI,ICblC4J,GAAM,IACLtB,EACHL,UAAWI,KAAKQ,OCAdgB,GAAmB,CAErBC,YAAaN,GACbO,eAAgBP,GAChBQ,iBAAkBR,GAClBS,kBAAmBT,GACnBU,gBAAiBV,GACjBW,aAAcX,GACdY,OAAQZ,GACRa,oBAAqBb,GACrBc,qBAAsBd,GACtBe,wBAAyBf,GACzBgB,uBAAwBhB,GAExBiB,MAAOjB,GACPkB,SAAUlB,GACVmB,OAAQnB,GACRoB,UAAWpB,GACXqB,KAAMrB,GACNsB,IAAKtB,GACLuB,MAAOvB,GACPwB,OAAQxB,GACRyB,KAAMzB,GAEN0B,QAAS1B,GACT2B,WAAY3B,GACZ4B,aAAc5B,GACd6B,cAAe7B,GACf8B,YAAa9B,GACb+B,OAAQ/B,GACRgC,UAAWhC,GACXiC,YAAajC,GACbkC,aAAclC,GACdmC,WAAYnC,GAEZoC,OAAQtC,EACRuC,QAASvC,EACTwC,QAASxC,EACTyC,QAASzC,EACTZ,QACAsD,OAAQtD,EACRuD,OAAQvD,EACRwD,OAAQxD,EACRyD,KAAM7C,EACN8C,MAAO9C,EACP+C,MAAO/C,EACPgD,SAAU9C,GACV+C,WAAY/C,GACZgD,WAAYhD,GACZiD,WAAYjD,GACZnC,EAAGmC,GACHlC,EAAGkC,GACHjC,EAAGiC,GACHkD,YAAalD,GACbhC,qBAAsBgC,GACtBmD,QAASlE,EACTmE,QAASjD,GACTkD,QAASlD,GACTmD,QAAStD,GAETuD,OAAQnD,GAERoD,YAAavE,EACbwE,cAAexE,EACfyE,WAAYtD,IC9DhB,SAASuD,GAAgBC,EAAOC,EAAcC,EAASC,GACnD,MAAMC,MAAEA,EAAAC,KAAOA,EAAMxF,UAAAA,EAAAyF,gBAAWA,GAAoBN,EAEpD,IAAIO,GAAe,EACfC,GAAqB,EAErBC,GAAkB,EAOtB,IAAA,MAAWzL,KAAOiL,EAAc,CACtB,MAAAjI,EAAQiI,EAAajL,GAIvB,GAAAyF,EAAkBzF,GAAM,CACxBqL,EAAKrL,GAAOgD,EACZ,QACZ,CAEc,MAAA0I,EAAYjE,GAAiBzH,GAC7B2L,EAAchG,EAAe3C,EAAO0I,GACtC,GAAAhH,EAAeT,IAAIjE,GAAM,CAKzB,GAHAuL,GAAe,EACf1F,EAAU7F,GAAO2L,GAEZF,EACD,SAEAzI,KAAW0I,EAAUnF,SAAW,KACdkF,GAAA,EAClC,MACiBzL,EAAI6E,WAAW,WAEC2G,GAAA,EACrBF,EAAgBtL,GAAO2L,GAGvBP,EAAMpL,GAAO2L,CAEzB,CAiBI,GAhBKV,EAAapF,YACV0F,GAAgBJ,EAChBC,EAAMvF,UTtClB,SAAwBA,GAAW+F,2BAAEA,GAA6B,qBAAMC,GAAqB,GAASC,EAAoBX,GAEtH,IAAIY,EAAkB,GAKtB,IAAA,IAASC,EAAI,EAAGA,EAAI3G,EAAe2G,IAAK,CAC9B,MAAAhM,EAAMyE,EAAmBuH,QACR,IAAnBnG,EAAU7F,KAEV+L,GAAmB,GADG/G,EAAehF,IAAQA,KACN6F,EAAU7F,OAE7D,CAaW,OAZH4L,IAA+B/F,EAAUV,IACtB4G,GAAA,iBAEvBA,EAAkBA,EAAgBE,OAG9Bd,EACAY,EAAkBZ,EAAkBtF,EAAWiG,EAAqB,GAAKC,GAEpEF,GAAsBC,IACTC,EAAA,QAEfA,CACX,CSW8BG,CAAelB,EAAMnF,UAAWqF,EAASO,EAAiBN,GAEvEC,EAAMvF,YAKXuF,EAAMvF,UAAY,SAOtB2F,EAAoB,CACpB,MAAMhB,QAAEA,EAAU,MAAAC,QAAOA,EAAU,MAAOC,QAAAA,EAAU,GAAOY,EAC3DF,EAAME,gBAAkB,GAAGd,KAAWC,KAAWC,GACzD,CACA,CCvEA,MAAMyB,GAAwB,KAAO,CACjCf,MAAO,CAAE,EACTvF,UAAW,CAAE,EACbyF,gBAAiB,CAAE,EACnBD,KAAM,CAAE,ICEZ,SAASe,GAAkBC,EAAQC,EAAQlO,GACvC,IAAA,MAAW4B,KAAOsM,EACTxH,EAAcwH,EAAOtM,KAAU4E,EAAoB5E,EAAK5B,KAClDiO,EAAArM,GAAOsM,EAAOtM,GAGjC,CAQA,SAASuM,GAASnO,EAAOkD,EAAajF,GAC5B,MACA+O,EAAQ,CAAE,EAMhB,OAFkBgB,GAAAhB,EALAhN,EAAMgN,OAAS,CAAE,EAKChN,GACpCb,OAAOiP,OAAOpB,EAdlB,UAAgCD,kBAAEA,GAAqB7J,EAAajF,GACzD4C,OAAAA,EAAOA,SAAC,KACX,MAAM+L,EDfuB,CACjCI,MAAO,CAAE,EACTvF,UAAW,CAAE,EACbyF,gBAAiB,CAAE,EACnBD,KAAM,CAAE,GCaJ,OADAN,GAAgBC,EAAO1J,EAAa,CAAEsK,4BAA6BvP,GAAY8O,GACxE5N,OAAOiP,OAAO,CAAE,EAAExB,EAAMK,KAAML,EAAMI,MAAK,GACjD,CAAC9J,GACR,CAQyBmL,CAAuBrO,EAAOkD,EAAajF,IACzD+B,EAAMsO,gBAAkBtO,EAAMsO,gBAAgBtB,GAASA,CAClE,CACA,SAASuB,GAAavO,EAAOkD,EAAajF,GAEtC,MAAMuQ,EAAY,CAAE,EACdxB,EAAQmB,GAASnO,EAAOkD,EAAajF,GAoBpC,OAnBH+B,EAAMoB,OAA+B,IAAvBpB,EAAMyO,eAEpBD,EAAUE,WAAY,EAEtB1B,EAAM2B,WACF3B,EAAM4B,iBACF5B,EAAM6B,mBACF,OAEN7B,EAAA8B,aACa,IAAf9O,EAAMoB,KACA,OACA,QAAsB,MAAfpB,EAAMoB,KAAe,IAAM,WAEzB,IAAnBpB,EAAM+O,WACL/O,EAAMgP,OAAShP,EAAMiP,YAAcjP,EAAMkP,YAC1CV,EAAUO,SAAW,GAEzBP,EAAUxB,MAAQA,EACXwB,CACX,CChDA,MAAMW,OAAuB5I,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,kBACA,SACA,UACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,kBACA,eACA,aAUJ,SAAS6I,GAAkBxN,GACvB,OAAQA,EAAI6E,WAAW,UAClB7E,EAAI6E,WAAW,SAAmB,cAAR7E,GAC3BA,EAAI6E,WAAW,WACf7E,EAAI6E,WAAW,UACf7E,EAAI6E,WAAW,UACf7E,EAAI6E,WAAW,aACf0I,GAAiBtJ,IAAIjE,EAC7B,CCrDA,IAAIyN,GAAiBzN,IAASwN,GAAkBxN,GAoBhD,KAnBiC0N,GAyBLC,QAAQ,0BAA0BpH,WArB1CkH,GAACzN,GAAQA,EAAI6E,WAAW,OAAS2I,GAAkBxN,GAAO0N,GAAY1N,GAsB1F,CAAA,MACO4N,IAEP,CA7BA,IAAiCF,GCDjC,SAASG,GAAWC,EAAQC,EAAQtF,GACzB,MAAkB,iBAAXqF,EACRA,EACA1G,GAAGvB,UAAUkI,EAAStF,EAAOqF,EACvC,CCJA,MAAME,GAAW,CACbD,OAAQ,oBACRE,MAAO,oBAELC,GAAY,CACdH,OAAQ,mBACRE,MAAO,mBCDX,SAASE,GAAcnD,GAAOoD,MAAEA,EAAAC,MAAOA,EAAAC,UAAOA,EAAA9D,QAAWA,EAAAC,QAASA,EAAA8D,WAASA,EAAAC,YAAYA,EAAc,EAAAC,WAAGA,EAAa,KAElHC,GAAUxD,EAASyD,EAAUxD,GAM5B,GALgBJ,GAAAC,EAAO0D,EAAQxD,EAASC,GAKpCwD,EAIA,YAHI3D,EAAMI,MAAMwD,UACN5D,EAAA6D,MAAMD,QAAU5D,EAAMI,MAAMwD,UAI1C5D,EAAM6D,MAAQ7D,EAAMI,MACpBJ,EAAMI,MAAQ,CAAE,EAChB,MAAMyD,MAAEA,EAAAzD,MAAOA,EAAO0D,WAAAA,GAAe9D,EAKjC6D,EAAMhJ,YACFiJ,IACA1D,EAAMvF,UAAYgJ,EAAMhJ,kBACrBgJ,EAAMhJ,WAGbiJ,SACa,IAAZtE,QAAqC,IAAZC,GAAyBW,EAAMvF,aACnDuF,EAAAE,gBFzBd,SAAgCwD,EAAYtE,EAASC,GAG1C,MAAA,GAFWoD,GAAWrD,EAASsE,EAAW7J,EAAG6J,EAAWzG,UAC7CwF,GAAWpD,EAASqE,EAAW5J,EAAG4J,EAAWvG,SAEnE,CEqBgCwG,CAAuBD,OAAwB,IAAZtE,EAAwBA,EAAU,QAAiB,IAAZC,EAAwBA,EAAU,UAG1H,IAAV2D,IACAS,EAAM5J,EAAImJ,QACA,IAAVC,IACAQ,EAAM3J,EAAImJ,QACI,IAAdC,IACAO,EAAMvI,MAAQgI,QAEC,IAAfC,GD7BR,SAAsBM,EAAOvJ,EAAQ0J,EAAU,EAAGjB,EAAS,EAAGkB,GAAc,GAExEJ,EAAMN,WAAa,EAGb,MAAAW,EAAOD,EAAcjB,GAAWE,GAEtCW,EAAMK,EAAKnB,QAAU3G,GAAGvB,WAAWkI,GAE7B,MAAAQ,EAAanH,GAAGvB,UAAUP,GAC1BkJ,EAAcpH,GAAGvB,UAAUmJ,GACjCH,EAAMK,EAAKjB,OAAS,GAAGM,KAAcC,GACzC,CCkBQW,CAAaN,EAAON,EAAYC,EAAaC,GAAY,EAEjE,CC/CA,MAAMW,GAAuB,KAAO,CPDhChE,MAAO,CAAE,EACTvF,UAAW,CAAE,EACbyF,gBAAiB,CAAE,EACnBD,KAAM,CAAE,EOARwD,MAAO,CAAE,ICJPF,GAAYU,GAAuB,iBAARA,GAA0C,QAAtBA,EAAIlS,cCMzD,SAASmS,GAAYlR,EAAOkD,EAAaiO,EAAWzO,GAC1C,MAAA0O,EAAcvQ,EAAAA,SAAQ,KACxB,MAAM+L,EFNsB,CPDhCI,MAAO,CAAE,EACTvF,UAAW,CAAE,EACbyF,gBAAiB,CAAE,EACnBD,KAAM,CAAE,EOARwD,MAAO,CAAE,GEME,OADOV,GAAAnD,EAAO1J,EAAa,CAAEsK,4BAA4B,GAAS+C,GAAS7N,GAAY1C,EAAM+M,mBAC7F,IACAH,EAAM6D,MACTzD,MAAO,IAAKJ,EAAMI,OACrB,GACF,CAAC9J,IACJ,GAAIlD,EAAMgN,MAAO,CACb,MAAMqE,EAAY,CAAE,EACFrD,GAAAqD,EAAWrR,EAAMgN,MAAOhN,GAC1CoR,EAAYpE,MAAQ,IAAKqE,KAAcD,EAAYpE,MAC3D,CACW,OAAAoE,CACX,CCdA,SAASE,GAAgBC,GAAqB,GAwBnC,MAvBW,CAAC7O,EAAW1C,EAAOd,GAAO2N,gBAAgB5O,KACxD,MAGMmT,GAHiBpL,EAAetD,GAChCwO,GACA3C,IAC6BvO,EAAO6M,EAAc5O,EAAUyE,GAC5D8O,EPoBd,SAAqBxR,EAAOyR,EAAOF,GAC/B,MAAMC,EAAgB,CAAE,EACxB,IAAA,MAAW5P,KAAO5B,EAQF,WAAR4B,GAA4C,iBAAjB5B,EAAM0R,SAEjCrC,GAAczN,KACU,IAAvB2P,GAA+BnC,GAAkBxN,KAChD6P,IAAUrC,GAAkBxN,IAE7B5B,EAAiB,WAAK4B,EAAI6E,WAAW,aACxB+K,EAAA5P,GAAO5B,EAAM4B,IAG5B,OAAA4P,CACX,COzC8BG,CAAY3R,EAA4B,iBAAd0C,EAAwB6O,GAClEK,EAAe,IACdJ,KACAJ,EACHlS,QAOE2S,SAAEA,GAAa7R,EACf8R,EAAmBjR,EAAAA,SAAQ,IAAO6F,EAAcmL,GAAYA,EAASlM,MAAQkM,GAAW,CAACA,IACxFnN,OAAAA,EAAAA,cAAchC,EAAW,IACzBkP,EACHC,SAAUC,GACb,CAGT,CChCA,SAASC,GAAWC,GAAShF,MAAEA,OAAOC,GAAQgF,EAAWC,GAC9C/S,OAAAiP,OAAO4D,EAAQhF,MAAOA,EAAOkF,GAAcA,EAAWC,oBAAoBF,IAEjF,IAAA,MAAWrQ,KAAOqL,EACd+E,EAAQhF,MAAMoF,YAAYxQ,EAAKqL,EAAKrL,GAE5C,CCHA,MAAMyQ,OAA0B9L,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAAS+L,GAAUN,EAASO,EAAaC,EAAYN,GACtCH,GAAAC,EAASO,OAAa,EAAWL,GACjC,IAAA,MAAAtQ,KAAO2Q,EAAY9B,MAC1BuB,EAAQS,aAAcJ,GAAoBxM,IAAIjE,GAA0BA,EAAnBhD,EAAYgD,GAAY2Q,EAAY9B,MAAM7O,GAEvG,CCNA,SAAS8Q,GAA4B1S,EAAO2S,GAClC,MAAA3F,MAAEA,GAAUhN,EACZ4S,EAAY,CAAE,EACpB,IAAA,MAAWhR,KAAOoL,GACVtG,EAAcsG,EAAMpL,KACnB+Q,EAAU3F,OAAStG,EAAciM,EAAU3F,MAAMpL,KAClD4E,EAAoB5E,EAAK5B,MACf4S,EAAAhR,GAAOoL,EAAMpL,IAGxB,OAAAgR,CACX,CCVA,SAASF,GAA4B1S,EAAO2S,GAClC,MAAAC,EAAYC,GAA8B7S,EAAO2S,GACvD,IAAA,MAAW/Q,KAAO5B,EACV,GAAA0G,EAAc1G,EAAM4B,KAAS8E,EAAciM,EAAU/Q,IAAO,CAIlDgR,OAHQvM,EAAmBH,QAAQtE,GACvC,OAASA,EAAIkR,OAAO,GAAGC,cAAgBnR,EAAIoR,UAAU,GACrDpR,GACiB5B,EAAM4B,EACzC,CAEW,OAAAgR,CACX,CCfA,SAASK,GAAwBjT,EAAOkT,EAAY5N,EAAQ6N,EAAgB,CAAE,EAAEC,EAAkB,IAsBvF,MAlBmB,mBAAfF,IACPA,EAAaA,OAAsB,IAAX5N,EAAuBA,EAAStF,EAAMsF,OAAQ6N,EAAeC,IAM/D,iBAAfF,IACPA,EAAalT,EAAMM,UAAYN,EAAMM,SAAS4S,IAOxB,mBAAfA,IACPA,EAAaA,OAAsB,IAAX5N,EAAuBA,EAAStF,EAAMsF,OAAQ6N,EAAeC,IAElFF,CACX,CCdA,SAASG,GAAYC,GACX,MAAApU,EAAMuE,EAAMA,OAAC,MAInB,OAHoB,OAAhBvE,EAAIyE,UACJzE,EAAIyE,QAAU2P,KAEXpU,EAAIyE,OACf,CCfA,MAAM4P,GAAqB/T,GAChBC,MAAMC,QAAQF,GCOzB,SAASgU,GAAmB5O,GACxB,MAAM6O,EAAiB/M,EAAc9B,GAASA,EAAMe,MAAQf,EAC5D,OCRmBpF,EDQEiU,ECPdpT,QAAQb,GAAkB,iBAANA,GAAkBA,EAAEkU,KAAOlU,EAAEmU,SDQlDF,EAAeE,UACfF,ECVY,IAACjU,CDWvB,CEMA,MAAMoU,GAAsBC,GAAW,CAAC7T,EAAO/B,KACrC,MAAAwC,EAAUG,EAAUA,WAACzC,GACrBmF,EAAkB1C,EAAUA,WAACxC,GAC7B0V,EAAO,IAbjB,UAAqBpB,4BAAAA,EAAAA,kBAA6BqB,UAAmBC,GAAYhU,EAAOS,EAAS6C,GAC7F,MAAMsJ,EAAQ,CACVC,aAAcoH,GAAiBjU,EAAOS,EAAS6C,EAAiBoP,GAChEH,YAAawB,KAKV,OAHHC,IACApH,EAAM7H,MAASD,GAAakP,EAAQhU,EAAO8E,EAAU8H,IAElDA,CACX,CAIuBsH,CAAUL,EAAQ7T,EAAOS,EAAS6C,GACrD,OAAOrF,EAAW6V,IAAST,GAAYS,EAAI,EAE/C,SAASG,GAAiBjU,EAAOS,EAAS6C,EAAiB6Q,GACvD,MAAMzC,EAAS,CAAE,EACX0C,EAAeD,EAAmBnU,EAAO,IAC/C,IAAA,MAAW4B,KAAOwS,EACd1C,EAAO9P,GAAO4R,GAAmBY,EAAaxS,IAE9C,IAAApB,QAAEA,EAASP,QAAAA,GAAYD,EACrB,MAAAqU,EAA0BtU,EAAsBC,GAChDsU,EAAkBlU,EAAcJ,GAClCS,GACA6T,IACCD,IACiB,IAAlBrU,EAAMU,eACU,IAAZF,IACAA,EAAUC,EAAQD,cACN,IAAZP,IACAA,EAAUQ,EAAQR,UAE1B,IAAIsU,IAA4BjR,IACE,IAA5BA,EAAgB9C,QAEtB+T,EAA4BA,IAAyC,IAAZ/T,EACnD,MAAAgU,EAAeD,EAA4BtU,EAAUO,EAC3D,GAAIgU,GACwB,kBAAjBA,IACN7U,EAAoB6U,GAAe,EACvB/U,MAAMC,QAAQ8U,GAAgBA,EAAe,CAACA,IACtDC,SAASvB,IACJ,MAAAwB,EAAWzB,GAAwBjT,EAAOkT,GAChD,IAAKwB,EACD,OACJ,MAAMC,cAAEA,EAAAC,WAAeA,KAAe3G,GAAWyG,EACjD,IAAA,MAAW9S,KAAOqM,EAAQ,CAClB,IAAA4G,EAAc5G,EAAOrM,GACrB,GAAAnC,MAAMC,QAAQmV,GAAc,CAQ5BA,EAAcA,EAHAN,EACRM,EAAY3N,OAAS,EACrB,EAE1B,CACoC,OAAhB2N,IACAnD,EAAO9P,GAAOiT,EAElC,CACY,IAAA,MAAWjT,KAAO+S,EACPjD,EAAA9P,GAAO+S,EAAc/S,EAAG,GAE/C,CACW,OAAA8P,CACX,CC9EA,MAAMoD,GAAQC,GAAQA,ECAtB,MAAMC,GACF,WAAAC,GACIC,KAAKC,MAAQ,GACRD,KAAAE,cAAgB7O,GAC7B,CACI,GAAA8O,CAAIC,GACA,IAAKJ,KAAKE,UAAUvP,IAAIyP,GAGb,OAFFJ,KAAAE,UAAUC,IAAIC,GACdJ,KAAAC,MAAMI,KAAKD,IACT,CAEnB,CACI,MAAAE,CAAOF,GACH,MAAMG,EAAQP,KAAKC,MAAMjP,QAAQoP,IACf,IAAdG,IACKP,KAAAC,MAAMO,OAAOD,EAAO,GACpBP,KAAAE,UAAUO,OAAOL,GAElC,CACI,KAAAM,GACIV,KAAKC,MAAMjO,OAAS,EACpBgO,KAAKE,UAAUQ,OACvB,ECpBA,MAAMC,GAAa,CACf,UACA,OACA,SACA,YACA,SACA,cCLJ,MAAQC,SAAUC,GAAOC,OAAQC,GAAarJ,MAAOsJ,GAAAC,MAAWA,IDQhE,SAA6BC,EAAmBC,GAC5C,IAAIC,GAAe,EACfC,GAAoB,EACxB,MAAM3J,EAAQ,CACV4J,MAAO,EACPC,UAAW,EACXC,cAAc,GAEZP,EAAQN,GAAWc,QAAO,CAACC,EAAKhV,KAClCgV,EAAIhV,GDIZ,SAA0B0U,GAKlB,IAAAO,EAAY,IAAI7B,GAChB8B,EAAY,IAAI9B,GAChB+B,EAAW,EAKXL,GAAe,EACfM,GAAiB,EAIf,MAAAC,MAAkBC,QAClBC,EAAO,CAITrB,SAAU,CAACsB,EAAUC,GAAY,EAAOC,GAAY,KAChD,MAAMC,EAAoBD,GAAaZ,EACjCc,EAAQD,EAAoBV,EAAYC,EAOvC,OANHO,GACAJ,EAAY5B,IAAI+B,GAChBI,EAAMnC,IAAI+B,IAAaG,GAAqBb,IAE5CK,EAAWF,EAAU1B,MAAMjO,QAExBkQ,CAAA,EAKXpB,OAASoB,IACLN,EAAUtB,OAAO4B,GACjBH,EAAYtB,OAAOyB,EAAQ,EAK/B9B,QAAUY,IAMN,GAAIQ,EACiBM,GAAA,MADrB,CAUA,GANeN,GAAA,GACdG,EAAWC,GAAa,CAACA,EAAWD,GAErCC,EAAUlB,QAEVmB,EAAWF,EAAU1B,MAAMjO,OACvB6P,EACA,IAAA,IAASnJ,EAAI,EAAGA,EAAImJ,EAAUnJ,IAAK,CACzB,MAAAwJ,EAAWP,EAAU1B,MAAMvH,GACjCwJ,EAASlB,GACLe,EAAYpR,IAAIuR,KAChBD,EAAKrB,SAASsB,GACAd,IAEtC,CAE2BI,GAAA,EACXM,IACiBA,GAAA,EACjBG,EAAK7B,QAAQY,GApB7B,CAqBA,GAGW,OAAAiB,CACX,CCjFmBM,EAAiB,IAAOnB,GAAe,IAC3CM,IACR,IACGc,EAAeC,GAAWxB,EAAMwB,GAAQrC,QAAQ1I,GAChDgL,EAAe,KACX,MAAAnB,EAAYoB,YAAYC,MACfxB,GAAA,EACf1J,EAAM4J,MAAQD,EACR,IAAO,GACP1O,KAAKD,IAAIC,KAAKF,IAAI8O,EAAY7J,EAAM6J,UAnB/B,IAmBuD,GAClE7J,EAAM6J,UAAYA,EAClB7J,EAAM8J,cAAe,EACrBb,GAAWpB,QAAQiD,GACnB9K,EAAM8J,cAAe,EACjBJ,GAAgBD,IACIE,GAAA,EACpBH,EAAkBwB,GAC9B,EAmBI,MAAO,CAAE9B,SAVQD,GAAWc,QAAO,CAACC,EAAKhV,KAC/B,MAAAuV,EAAOhB,EAAMvU,GAMZ,OALPgV,EAAIhV,GAAO,CAAC0T,EAAS+B,GAAY,EAAOC,GAAY,KAC3ChB,IATMA,GAAA,EACKC,GAAA,EACf3J,EAAM8J,cACPN,EAAkBwB,IAQXT,EAAKrB,SAASR,EAAS+B,EAAWC,IAEtCV,CAAA,GACR,IAEgBZ,OADHV,GAAYO,GAAWpB,SAAS7S,GAAQuU,EAAMvU,GAAKoU,OAAOV,KAC/C1I,QAAOuJ,MAAAA,EACtC,CCtD2E4B,CAAqD,oBAA1BC,sBAAwCA,sBAAwBlD,IAAM,GCKtKmD,GAAkB,CACpBxV,eAAgBmR,GAAmB,CAC/BlB,+BACAqB,kBAAmB/C,GACnBgD,QAAS,CAAChU,EAAO8E,GAAYyN,cAAa1F,mBACtCkJ,GAAMmC,MAAK,KACH,IACY3F,EAAA7B,WAEJ,mBADG5L,EAASqT,QAEVrT,EAASqT,UACTrT,EAASsT,uBACvC,OACuBC,GAEH9F,EAAY7B,WAAa,CACrB7J,EAAG,EACHC,EAAG,EACHmD,MAAO,EACPE,OAAQ,EAEhC,KAEY4L,GAAM7R,QAAO,KACK6L,GAAAwC,EAAa1F,EAAc,CAAEW,4BAA4B,GAAS+C,GAASzL,EAASwT,SAAUtY,EAAM+M,mBAClHuF,GAAUxN,EAAUyN,EAAW,GAClC,KC9BPgG,GAAmB,CACrB9V,eAAgBmR,GAAmB,CACvClB,4BAAQA,GACAqB,kBAAmBhG,MCP3B,SAASyK,GAAYvK,EAAQwK,EAAWC,EAAS5L,EAAU,CAAE6L,SAAS,IAElE,OADO1K,EAAA2K,iBAAiBH,EAAWC,EAAS5L,GACrC,IAAMmB,EAAO4K,oBAAoBJ,EAAWC,EACvD,CCHA,MAAMI,GAAoBC,GACI,UAAtBA,EAAMC,YACyB,iBAAjBD,EAAME,QAAuBF,EAAME,QAAU,GAWhC,IAApBF,EAAMG,UCXrB,SAASC,GAAiBJ,EAAOK,EAAY,QAClC,MAAA,CACHC,MAAO,CACHxS,EAAGkS,EAAMK,EAAY,KACrBtS,EAAGiS,EAAMK,EAAY,MAGjC,CCNA,SAASE,GAAgBrL,EAAQwK,EAAWC,EAAS5L,GACjD,OAAO0L,GAAYvK,EAAQwK,EDMR,CAACC,GACZK,GAAUD,GAAiBC,IAAUL,EAAQK,EAAOI,GAAiBJ,ICPvCQ,CAAeb,GAAU5L,EACnE,CCEA,MAAM0M,GAAmB,CAACC,EAAGC,IAAOla,GAAMka,EAAED,EAAEja,IACxCma,GAAO,IAAIC,IAAiBA,EAAajD,OAAO6C,ICRtD,SAASK,GAAW1Z,GAChB,IAAI2Z,EAAO,KACX,MAAO,KACH,MAAMC,EAAW,KACND,EAAA,IAAA,EAEX,OAAa,OAATA,IACOA,EAAA3Z,EACA4Z,EAEJ,CAEf,CACA,MAAMC,GAAuBH,GAAW,kBAClCI,GAAqBJ,GAAW,gBACtC,SAASK,GAAc9Y,GACnB,IAAI0Y,GAAO,EACX,GAAa,MAAT1Y,EACA0Y,EAAOG,UACf,GACsB,MAAT7Y,EACL0Y,EAAOE,SAEN,CACD,MAAMG,EAAiBH,KACjBI,EAAeH,KACjBE,GAAkBC,EAClBN,EAAO,KACaK,IACFC,GAAA,GAKdD,GACgBA,IAChBC,GACcA,IAE9B,CACW,OAAAN,CACX,CACA,SAASO,KAGC,MAAAC,EAAkBJ,IAAc,GACtC,OAAKI,IAEYA,KACV,EACX,CClDA,MAAMC,GACF,WAAAtF,CAAYuF,GACRtF,KAAKuF,WAAY,EACjBvF,KAAKsF,KAAOA,CACpB,CACI,MAAA1W,GAAS,ECCb,SAAS4W,GAAcF,EAAMG,GACnB,MAAAlC,EAAY,WAAakC,EAAW,QAAU,SAC9CC,EAAe,WAAaD,EAAW,QAAU,OAYvD,OAAOrB,GAAgBkB,EAAK7W,QAAS8U,GAXjB,CAACM,EAAO8B,KACpB,GAAsB,UAAtB9B,EAAMC,aAA2BqB,KACjC,OACE,MAAAra,EAAQwa,EAAKM,WACfN,EAAKrW,gBAAkBnE,EAAM+a,YACxBP,EAAArW,eAAe6W,UAAU,aAAcL,GAE5C3a,EAAM4a,IACN7E,GAAMjS,QAAO,IAAM9D,EAAM4a,GAAc7B,EAAO8B,IAC1D,GAEiE,CACzDlC,SAAU6B,EAAKM,WAAWF,IAElC,CChBA,MAAMK,GAAgB,CAAC7X,EAAQ8X,MACtBA,IAGI9X,IAAW8X,GAITD,GAAc7X,EAAQ8X,EAAMC,gBCL3C,SAASC,GAA0Bjb,EAAMuY,GACrC,IAAKA,EACD,OACJ,MAAM2C,EAAwB,IAAIC,aAAa,UAAYnb,GACnDuY,EAAA2C,EAAuBlC,GAAiBkC,GACpD,CCVA,MAAME,OAAwBC,QAMxBC,OAAgBD,QAChBE,GAAwBC,IAC1B,MAAMvE,EAAWmE,GAAkB5V,IAAIgW,EAAM1N,QAC7CmJ,GAAYA,EAASuE,EAAK,EAExBC,GAA4BC,IAC9BA,EAAQpH,QAAQiH,GAAoB,EAqBxC,SAASI,GAAoB9J,EAASlF,EAASsK,GACrC,MAAA2E,EApBV,UAAkCC,KAAEA,KAASlP,IACzC,MAAMmP,EAAaD,GAAQ1d,SAItBmd,GAAU5V,IAAIoW,IACLR,GAAA3V,IAAImW,EAAY,IAExB,MAAAC,EAAgBT,GAAU9V,IAAIsW,GAC9Bra,EAAMua,KAAKC,UAAUtP,GAQ3B,OAHKoP,EAActa,KACDsa,EAAAta,GAAO,IAAIya,qBAAqBT,GAA0B,CAAEI,UAASlP,KAEhFoP,EAActa,EACzB,CAEsC0a,CAAyBxP,GAG3D,OAFkByO,GAAAzV,IAAIkM,EAASoF,GAC/B2E,EAA0BQ,QAAQvK,GAC3B,KACHuJ,GAAkB5F,OAAO3D,GACzB+J,EAA0BS,UAAUxK,EAAO,CAEnD,CC3CA,MAAMyK,GAAiB,CACnBvc,KAAM,EACNwc,IAAK,GCAT,MAAMC,GAAoB,CACtBlb,OAAQ,CACJ8Y,QDAR,cAA4BA,GACxB,WAAAtF,GACI2H,SAASC,WACT3H,KAAK4H,gBAAiB,EACtB5H,KAAK6H,UAAW,CACxB,CACI,aAAAC,GACI9H,KAAKlQ,UACL,MAAMiY,SAAEA,EAAW,CAAE,GAAK/H,KAAKsF,KAAKM,YAC9BkB,KAAEA,EAAMjR,OAAQmS,SAAYC,EAAS,OAAAC,KAAQA,GAASH,EACtDnQ,EAAU,CACZkP,KAAMA,EAAOA,EAAKrY,aAAU,EAC5BuZ,aACAG,UAA6B,iBAAXF,EAAsBA,EAASV,GAAeU,IA+BpE,OAAOrB,GAAoB5G,KAAKsF,KAAK7W,QAASmJ,GA7BhB6O,IACpB,MAAA2B,eAAEA,GAAmB3B,EAI3B,GAAIzG,KAAK6H,WAAaO,EAClB,OAMJ,GALApI,KAAK6H,SAAWO,EAKZF,IAASE,GAAkBpI,KAAK4H,eAChC,OAEKQ,IACLpI,KAAK4H,gBAAiB,GAEtB5H,KAAKsF,KAAKrW,gBACV+Q,KAAKsF,KAAKrW,eAAe6W,UAAU,cAAesC,GAMtD,MAAMC,gBAAEA,EAAiBC,gBAAAA,GAAoBtI,KAAKsF,KAAKM,WACjD1D,EAAWkG,EAAiBC,EAAkBC,EACpDpG,GAAYA,EAASuE,EAAK,GAGtC,CACI,KAAA5W,GACImQ,KAAK8H,eACb,CACI,MAAAlZ,GACI,GAAoC,oBAAzBuY,qBACP,OACJ,MAAMrc,MAAEA,EAAA2S,UAAOA,GAAcuC,KAAKsF,KACR,CAAC,SAAU,SAAU,QAAQta,KAO/D,UAAkC+c,SAAEA,EAAW,KAAQA,SAAUQ,EAAe,IAAO,IACnF,OAAQtd,GAAS8c,EAAS9c,KAAUsd,EAAatd,EACrD,CAToEud,CAAyB1d,EAAO2S,KAExFuC,KAAK8H,eAEjB,CACI,OAAAhY,GAAU,ICxDVzD,IAAK,CACDgZ,QHMR,cAA2BA,GACvB,WAAAtF,GACI2H,SAASC,WACT3H,KAAKyI,qBAAuB7I,GAC5BI,KAAK0I,mBAAqB9I,GAC1BI,KAAK2I,0BAA4B/I,GAC5BI,KAAA4I,kBAAoB,CAACC,EAAYC,KAClC,GAAI9I,KAAK+I,WACL,OACJ/I,KAAK0I,qBACC,MAAA5d,EAAQkV,KAAKsF,KAAKM,WAgBlBoD,EAA0B5E,GAAgBtV,OAAQ,aAfhC,CAACma,EAAUC,KAC3B,IAAClJ,KAAKmJ,gBACN,OACJ,MAAMrP,MAAEA,EAAOsP,YAAAA,EAAAC,gBAAaA,GAAoBrJ,KAAKsF,KAAKM,WAC1D/E,GAAMjS,QAAO,KAKRya,GACItD,GAAc/F,KAAKsF,KAAK7W,QAASwa,EAASlQ,QAEzCe,GAASA,EAAMmP,EAAUC,GADzBE,GAAeA,EAAYH,EAAUC,EACL,GACzC,GAEiF,CAAEzF,UAAW3Y,EAAMgP,OAAShP,EAAmB,eAC/Hwe,EAA8BlF,GAAgBtV,OAAQ,iBAAiB,CAACya,EAAaC,IAAexJ,KAAKyJ,YAAYF,EAAaC,IAAa,CAAE/F,UAAW3Y,EAAMse,aAAete,EAAuB,mBACzMkV,KAAA0I,mBAAqBjE,GAAKuE,EAAyBM,GACnDtJ,KAAA0J,WAAWb,EAAYC,EAAS,EAEzC9I,KAAK2J,qBAAuB,KAClB,MAmBAC,EAAwBtG,GAAYtD,KAAKsF,KAAK7W,QAAS,WAnBtCob,IACf,GAAqB,UAArBA,EAAand,KAAmBsT,KAAK+I,WACrC,OAWJ/I,KAAK0I,qBACL1I,KAAK0I,mBAAqBpF,GAAYtD,KAAKsF,KAAK7W,QAAS,SAXpCqb,IACM,UAAnBA,EAAWpd,KAAoBsT,KAAKmJ,iBAEdjD,GAAA,MAAM,CAACrC,EAAO8B,KACpC,MAAM7L,MAAEA,GAAUkG,KAAKsF,KAAKM,WACxB9L,GACA+G,GAAMjS,QAAO,IAAMkL,EAAM+J,EAAO8B,IAC5D,GACqB,IAIqBO,GAAA,QAAQ,CAACrC,EAAO8B,KACjC3F,KAAA0J,WAAW7F,EAAO8B,EAAI,GAC9B,IAQCoE,EAAqBzG,GAAYtD,KAAKsF,KAAK7W,QAAS,QALvC,KACVuR,KAAK+I,YAEgB7C,GAAA,UAAU,CAACqD,EAAaC,IAAexJ,KAAKyJ,YAAYF,EAAaC,IAAW,IAGzGxJ,KAAA2I,0BAA4BlE,GAAKmF,EAAuBG,EAAkB,CAE3F,CACI,UAAAL,CAAW7F,EAAO8B,GACd3F,KAAK+I,YAAa,EAClB,MAAMhP,WAAEA,EAAYC,SAAAA,GAAagG,KAAKsF,KAAKM,WAIvC5L,GAAYgG,KAAKsF,KAAKrW,gBACtB+Q,KAAKsF,KAAKrW,eAAe6W,UAAU,YAAY,GAE/C/L,GACA8G,GAAMjS,QAAO,IAAMmL,EAAW8J,EAAO8B,IAEjD,CACI,aAAAwD,GACInJ,KAAK0I,qBACL1I,KAAK+I,YAAa,EAKlB,OAJc/I,KAAKsF,KAAKM,WACd5L,UAAYgG,KAAKsF,KAAKrW,gBAC5B+Q,KAAKsF,KAAKrW,eAAe6W,UAAU,YAAY,IAE3CX,IAChB,CACI,WAAAsE,CAAY5F,EAAO8B,GACX,IAAC3F,KAAKmJ,gBACN,OACJ,MAAMC,YAAEA,GAAgBpJ,KAAKsF,KAAKM,WAC9BwD,GACAvI,GAAMjS,QAAO,IAAMwa,EAAYvF,EAAO8B,IAElD,CACI,KAAA9V,GACU,MAAA/E,EAAQkV,KAAKsF,KAAKM,WAClBoE,EAAwB5F,GAAgBtZ,EAAMue,gBAAkBva,OAASkR,KAAKsF,KAAK7W,QAAS,cAAeuR,KAAK4I,kBAAmB,CAAEnF,UAAW3Y,EAAMiP,YAAcjP,EAAsB,kBAC1Lmf,EAAsB3G,GAAYtD,KAAKsF,KAAK7W,QAAS,QAASuR,KAAK2J,sBACpE3J,KAAAyI,qBAAuBhE,GAAKuF,EAAuBC,EAChE,CACI,OAAAna,GACIkQ,KAAKyI,uBACLzI,KAAK0I,qBACL1I,KAAK2I,2BACb,IGzGIxc,MAAO,CACHkZ,QCTR,cAA2BA,GACvB,WAAAtF,GACI2H,SAASC,WACT3H,KAAKyF,UAAW,CACxB,CACI,OAAAyE,GACI,IAAIC,GAAiB,EAOjB,IACAA,EAAiBnK,KAAKsF,KAAK7W,QAAQ2b,QAAQ,iBACvD,OACejH,GACcgH,GAAA,CAC7B,CACaA,GAAmBnK,KAAKsF,KAAKrW,iBAElC+Q,KAAKsF,KAAKrW,eAAe6W,UAAU,cAAc,GACjD9F,KAAKyF,UAAW,EACxB,CACI,MAAA4E,GACSrK,KAAKyF,UAAazF,KAAKsF,KAAKrW,iBAEjC+Q,KAAKsF,KAAKrW,eAAe6W,UAAU,cAAc,GACjD9F,KAAKyF,UAAW,EACxB,CACI,KAAA5V,GACSmQ,KAAAlQ,QAAU2U,GAAKnB,GAAYtD,KAAKsF,KAAK7W,QAAS,SAAS,IAAMuR,KAAKkK,YAAY5G,GAAYtD,KAAKsF,KAAK7W,QAAS,QAAQ,IAAMuR,KAAKqK,WAC7I,CACI,OAAAva,GAAU,IDtBV1D,MAAO,CACHiZ,QLQR,cAA2BA,GACvB,KAAAxV,GACSmQ,KAAAlQ,QAAU2U,GAAKe,GAAcxF,KAAKsF,MAAM,GAAOE,GAAcxF,KAAKsF,MAAM,GACrF,CACI,OAAAxV,GAAU,KO5Bd,SAASwa,GAAeC,EAAMC,GACtB,IAACjgB,MAAMC,QAAQggB,GACR,OAAA,EACX,MAAMC,EAAaD,EAAKxY,OACxB,GAAIyY,IAAeF,EAAKvY,OACb,OAAA,EACX,IAAA,IAAS0G,EAAI,EAAGA,EAAI+R,EAAY/R,IAC5B,GAAI8R,EAAK9R,KAAO6R,EAAK7R,GACV,OAAA,EAER,OAAA,CACX,CCOA,SAASgS,GAAezc,EAAe+P,EAAY5N,GACzC,MAAAtF,EAAQmD,EAAc2X,WAC5B,OAAO7H,GAAwBjT,EAAOkT,OAAuB,IAAX5N,EAAuBA,EAAStF,EAAMsF,OAf5F,SAAoBnC,GAChB,MAAMQ,EAAU,CAAE,EAEX,OADOR,EAAAuO,OAAO+C,SAAQ,CAAC7P,EAAOhD,IAAS+B,EAAQ/B,GAAOgD,EAAMe,QAC5DhC,CACX,CAWoGkc,CAAW1c,GAP/G,SAAqBA,GACjB,MAAM2c,EAAW,CAAE,EAEZ,OADO3c,EAAAuO,OAAO+C,SAAQ,CAAC7P,EAAOhD,IAASke,EAASle,GAAOgD,EAAM+B,gBAC7DmZ,CACX,CAG+HnZ,CAAYxD,GAC3I,CClBA,IAAI4c,GAAYjL,GCGhB,MAAMkL,GAAyBC,GAAsB,IAAVA,EACrCC,GAAyBC,GAAiBA,EAAe,ICPzDC,IACO,ECDPC,GAAsBC,GAAW7gB,MAAMC,QAAQ4gB,IAAgC,iBAAdA,EAAO,GCE9E,SAASC,GAAuBD,GAC5B,OAAOjgB,SAASigB,GACO,iBAAXA,GAAuBE,GAAqBF,IACpDD,GAAmBC,IAClB7gB,MAAMC,QAAQ4gB,IAAWA,EAAOG,MAAMF,IAC/C,CACA,MAAMG,GAAsB,EAAEjH,EAAGC,EAAGiH,EAAGC,KAAO,gBAAgBnH,MAAMC,MAAMiH,MAAMC,KAC1EJ,GAAuB,CACzBK,OAAQ,SACRC,KAAM,OACNC,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXC,OAAQR,GAAoB,CAAC,EAAG,IAAM,IAAM,IAC5CS,QAAST,GAAoB,CAAC,IAAM,EAAG,EAAG,MAC1CU,OAAQV,GAAoB,CAAC,IAAM,IAAM,WACzCW,QAASX,GAAoB,CAAC,IAAM,KAAM,IAAM,OAEpD,SAASY,GAAwBhB,GAC7B,GAAKA,EAEL,OAAOD,GAAmBC,GACpBI,GAAoBJ,GACpB7gB,MAAMC,QAAQ4gB,GACVA,EAAOiB,IAAID,IACXd,GAAqBF,EACnC,CCRA,MAAMkB,GAAa,CAACC,EAAGC,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAMD,GAAK,EAAME,EAAK,EAAMD,IAAOD,EAAI,EAAMC,GACrGD,EAoBJ,SAASG,GAAYC,EAAKC,EAAKC,EAAKC,GAE5B,GAAAH,IAAQC,GAAOC,IAAQC,EAChB,OAAAlN,GACL,MAAAmN,EAAYC,GArBtB,SAAyBrb,EAAGsb,EAAYC,EAAYP,EAAKE,GACjD,IAAAM,EACAC,EACA1U,EAAI,EACL,GACY0U,EAAAH,GAAcC,EAAaD,GAAc,EACpDE,EAAWb,GAAWc,EAAUT,EAAKE,GAAOlb,EACxCwb,EAAW,EACED,EAAAE,EAGAH,EAAAG,QAEZza,KAAK0a,IAAIF,GAfO,QAgBnBzU,EAfuB,IAgBtB,OAAA0U,CACX,CAK6BE,CAAgBN,EAAI,EAAG,EAAGL,EAAKE,GAExD,OAAQN,GAAY,IAANA,GAAiB,IAANA,EAAUA,EAAID,GAAWS,EAASR,GAAIK,EAAKE,EACxE,CC9CA,MAAMjB,GAASa,GAAY,IAAM,EAAG,EAAG,GACjCZ,GAAUY,GAAY,EAAG,EAAG,IAAM,GAClCX,GAAYW,GAAY,IAAM,EAAG,IAAM,GCFvCa,GAAgBnC,GAAYtiB,GAAMA,GAAK,GAAMsiB,EAAO,EAAItiB,GAAK,GAAK,EAAIsiB,EAAO,GAAK,EAAItiB,KAAO,ECA7F0kB,GAAiBpC,GAAYtiB,GAAM,EAAIsiB,EAAO,EAAItiB,GCClDkjB,GAAUljB,GAAM,EAAI6J,KAAK8a,IAAI9a,KAAK+a,KAAK5kB,IACvCmjB,GAAUuB,GAAcxB,IACxB2B,GAAYJ,GAAavB,ICDzBG,GAAUO,GAAY,IAAM,KAAM,IAAM,KACxCR,GAASsB,GAAcrB,IACvByB,GAAYL,GAAarB,ICEzB2B,GAAe,CACjBlC,OAAQ/L,GACRiM,UACAE,aACAD,WACAE,UACA2B,aACA1B,WACAC,UACA0B,aACAzB,WACA2B,WCjBgBhlB,IAAOA,GAAK,GAAK,EAAI,GAAMojB,GAAOpjB,GAAK,IAAO,EAAI6J,KAAKob,IAAI,GAAG,IAAOjlB,EAAI,MDmBvFklB,GAA8BhQ,IAC5B,GAAAzT,MAAMC,QAAQwT,GAAa,CAEjB6M,GAAsB,IAAtB7M,EAAWhM,QACrB,MAAOic,EAAIC,EAAIC,EAAIC,GAAMpQ,EACzB,OAAO0O,GAAYuB,EAAIC,EAAIC,EAAIC,EACvC,CAAA,MACmC,iBAAfpQ,EAGL6P,GAAa7P,GAEjBA,CAAA,EE3BLqQ,GAAgB,CAAC/b,EAAMgc,IAAchkB,GAChCa,QAASoI,EAASjJ,IAAMgJ,EAAiBrC,KAAK3G,IAAMA,EAAEiH,WAAWe,IACnEgc,GAAYrkB,OAAOC,UAAUC,eAAeC,KAAKE,EAAGgkB,IAEvDC,GAAa,CAACC,EAAOC,EAAOC,IAAWpkB,IACrC,IAACiJ,EAASjJ,GACH,OAAAA,EACL,MAACia,EAAGC,EAAGiH,EAAG1Y,GAASzI,EAAEqkB,MAAMvb,GAC1B,MAAA,CACHob,CAACA,GAAQ1b,WAAWyR,GACpBkK,CAACA,GAAQ3b,WAAW0R,GACpBkK,CAACA,GAAQ5b,WAAW2Y,GACpB1Y,WAAiB,IAAVA,EAAsBD,WAAWC,GAAS,EACpD,ECbC6b,GAAU,IACThc,EACHL,UAAYjI,GAAMqI,KAAKQ,MAHN,CAAC7I,GAAMkI,EAAM,EAAG,IAAKlI,GAGTukB,CAAavkB,KAExCwkB,GAAO,CACT7d,KAAMod,GAAc,MAAO,OAC3Bxb,MAAO0b,GAAW,MAAO,QAAS,QAClChc,UAAW,EAAGwc,MAAKC,QAAOC,OAAMlc,MAAOmc,EAAU,KAAQ,QACrDN,GAAQrc,UAAUwc,GAClB,KACAH,GAAQrc,UAAUyc,GAClB,KACAJ,GAAQrc,UAAU0c,GAClB,KACA/b,EAASH,EAAMR,UAAU2c,IACzB,KCYR,MAAMC,GAAM,CACRle,KAAMod,GAAc,KACpBxb,MAhCJ,SAAkBvI,GACd,IAAI8kB,EAAI,GACJC,EAAI,GACJ7K,EAAI,GACJD,EAAI,GAmBD,OAjBHja,EAAE0H,OAAS,GACPod,EAAA9kB,EAAEwT,UAAU,EAAG,GACfuR,EAAA/kB,EAAEwT,UAAU,EAAG,GACf0G,EAAAla,EAAEwT,UAAU,EAAG,GACfyG,EAAAja,EAAEwT,UAAU,EAAG,KAIfsR,EAAA9kB,EAAEwT,UAAU,EAAG,GACfuR,EAAA/kB,EAAEwT,UAAU,EAAG,GACf0G,EAAAla,EAAEwT,UAAU,EAAG,GACfyG,EAAAja,EAAEwT,UAAU,EAAG,GACdsR,GAAAA,EACAC,GAAAA,EACA7K,GAAAA,EACAD,GAAAA,GAEF,CACHwK,IAAKO,SAASF,EAAG,IACjBJ,MAAOM,SAASD,EAAG,IACnBJ,KAAMK,SAAS9K,EAAG,IAClBzR,MAAOwR,EAAI+K,SAAS/K,EAAG,IAAM,IAAM,EAE3C,EAIIhS,UAAWuc,GAAKvc,WC/Bdgd,GAAO,CACTte,KAAMod,GAAc,MAAO,OAC3Bxb,MAAO0b,GAAW,MAAO,aAAc,aACvChc,UAAW,EAAGid,MAAKC,aAAYC,YAAW3c,MAAOmc,EAAU,KAC/C,QACJvc,KAAKQ,MAAMqc,GACX,KACA3b,EAAQtB,UAAUW,EAASuc,IAC3B,KACA5b,EAAQtB,UAAUW,EAASwc,IAC3B,KACAxc,EAASH,EAAMR,UAAU2c,IACzB,KCZNS,GAAQ,CACV1e,KAAO3G,GAAMwkB,GAAK7d,KAAK3G,IAAM6kB,GAAIle,KAAK3G,IAAMilB,GAAKte,KAAK3G,GACtDuI,MAAQvI,GACAwkB,GAAK7d,KAAK3G,GACHwkB,GAAKjc,MAAMvI,GAEbilB,GAAKte,KAAK3G,GACRilB,GAAK1c,MAAMvI,GAGX6kB,GAAItc,MAAMvI,GAGzBiI,UAAYjI,GACDiJ,EAASjJ,GACVA,EACAA,EAAEH,eAAe,OACb2kB,GAAKvc,UAAUjI,GACfilB,GAAKhd,UAAUjI,ICF3BkU,GAAM,CAACoR,EAAMC,EAAIC,KAAcA,EAAWF,EAAOE,EAAWD,EAAKD,ECpBvE,SAASG,GAASjnB,EAAGknB,EAAGzD,GAKpB,OAJIA,EAAI,IACCA,GAAA,GACLA,EAAI,IACCA,GAAA,GACLA,EAAI,EAAI,EACDzjB,EAAc,GAATknB,EAAIlnB,GAASyjB,EACzBA,EAAI,GACGyD,EACPzD,EAAI,EAAI,EACDzjB,GAAKknB,EAAIlnB,IAAM,EAAI,EAAIyjB,GAAK,EAChCzjB,CACX,CCHA,MAAMmnB,GAAiB,CAACL,EAAMC,EAAIvlB,KAC9B,MAAM4lB,EAAWN,EAAOA,EACjB,OAAAjd,KAAKwd,KAAKxd,KAAKD,IAAI,EAAGpI,GAAKulB,EAAKA,EAAKK,GAAYA,GAAS,EAE/DE,GAAa,CAACjB,GAAKL,GAAMS,IAE/B,SAASc,GAAOV,GACN,MAAArd,GAFYhI,EAEQqlB,EAFFS,GAAWE,MAAMhe,GAASA,EAAKrB,KAAK3G,MAA3C,IAACA,EAId,IAAAimB,EAAQje,EAAKO,MAAM8c,GAKhB,OAJHrd,IAASid,KAETgB,EDRR,UAAoBf,IAAEA,EAAAC,WAAKA,YAAYC,EAAW3c,MAAAA,IACvCyc,GAAA,IAEME,GAAA,IACb,IAAIX,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GALcQ,GAAA,IAQT,CACK,MAAAO,EAAIN,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrC3mB,EAAI,EAAI4mB,EAAYM,EAC1BjB,EAAMgB,GAASjnB,EAAGknB,EAAGR,EAAM,EAAI,GACvBR,EAAAe,GAASjnB,EAAGknB,EAAGR,GACvBP,EAAOc,GAASjnB,EAAGknB,EAAGR,EAAM,EAAI,EACxC,MAVQT,EAAMC,EAAQC,EAAOS,EAWlB,MAAA,CACHX,IAAKpc,KAAKQ,MAAY,IAAN4b,GAChBC,MAAOrc,KAAKQ,MAAc,IAAR6b,GAClBC,KAAMtc,KAAKQ,MAAa,IAAP8b,GACjBlc,MAAAA,EAER,CCjBgByd,CAAWD,IAEhBA,CACX,CACA,MAAME,GAAW,CAACb,EAAMC,KACd,MAAAa,EAAWL,GAAOT,GAClBe,EAASN,GAAOR,GAChBe,EAAU,IAAKF,GACrB,OAAQpmB,IACJsmB,EAAQ7B,IAAMkB,GAAeS,EAAS3B,IAAK4B,EAAO5B,IAAKzkB,GACvDsmB,EAAQ5B,MAAQiB,GAAeS,EAAS1B,MAAO2B,EAAO3B,MAAO1kB,GAC7DsmB,EAAQ3B,KAAOgB,GAAeS,EAASzB,KAAM0B,EAAO1B,KAAM3kB,GAC1DsmB,EAAQ7d,MAAQyL,GAAIkS,EAAS3d,MAAO4d,EAAO5d,MAAOzI,GAC3CwkB,GAAKvc,UAAUqe,GACzB,ECtBL,MAAMC,GAAkB,CACpBC,M1EZqB,gF0EarBC,SAAU,OACV7e,MAAO,OACPW,MAAO+M,IAELoR,GAAiB,CACnBF,MAAOzd,EACP0d,SAAU,SACV7e,MAAO,OACPW,MAAO8c,GAAM9c,OAEXoe,GAAkB,CACpBH,MAAO1d,EACP2d,SAAU,UACV7e,MAAO,OACPW,MAAOD,EAAOC,OAElB,SAASqe,GAASvL,GAAMmL,MAAEA,WAAOC,EAAU7e,MAAAA,EAAAW,MAAOA,IAC9C,MAAMuX,EAAUzE,EAAKwL,UAAUxC,MAAMmC,GAChC1G,IAEAzE,EAAA,MAAQoL,GAAY3G,EAAQpY,OACjC2T,EAAKwL,UAAYxL,EAAKwL,UAAUvnB,QAAQknB,EAAO5e,GAC/CyT,EAAKnJ,OAAO6D,QAAQ+J,EAAQiC,IAAIxZ,IACpC,CACA,SAASue,GAAoB1hB,GACnB,MAAA2hB,EAAgB3hB,EAAM4hB,WACtB3L,EAAO,CACTjW,MAAO2hB,EACPF,UAAWE,EACX7U,OAAQ,GACR+U,QAAS,EACTC,UAAW,EACXC,WAAY,GAMT,OAJH9L,EAAKjW,MAAMqB,SAAS,WACpBmgB,GAASvL,EAAMkL,IACnBK,GAASvL,EAAMqL,IACfE,GAASvL,EAAMsL,IACRtL,CACX,CACA,SAAS+L,GAAkBpnB,GAChB,OAAA8mB,GAAoB9mB,GAAGkS,MAClC,CACA,SAASmV,GAAkB3Y,GACvB,MAAMwD,OAAEA,EAAQgV,UAAAA,EAAAD,QAAWA,YAASJ,GAAcC,GAAoBpY,GAChE4Y,EAAYpV,EAAOxK,OACzB,OAAQ1H,IACJ,IAAIunB,EAASV,EACb,IAAA,IAASzY,EAAI,EAAGA,EAAIkZ,EAAWlZ,IAEvBmZ,EADAnZ,EAAI6Y,EACKM,EAAOjoB,QAAQinB,GAAgB3e,MAAO5H,EAAEoO,IAE5CA,EAAI6Y,EAAUC,EACVK,EAAOjoB,QAAQonB,GAAe9e,MAAOyd,GAAMpd,UAAUjI,EAAEoO,KAGvDmZ,EAAOjoB,QAAQqnB,GAAgB/e,MAAOgB,EAAS5I,EAAEoO,KAG3D,OAAAmZ,CAAA,CAEf,CACA,MAAMC,GAAwBxnB,GAAmB,iBAANA,EAAiB,EAAIA,EAMhE,MAAMynB,GAAU,CACZ9gB,KA/EJ,SAAc3G,GACV,IAAIgQ,EAAI0X,EACR,OAAQC,MAAM3nB,IACViJ,EAASjJ,MACwB,QAA9BgQ,EAAKhQ,EAAEqkB,MAAMvb,UAAgC,IAAPkH,OAAgB,EAASA,EAAGtI,SAAW,KAC3C,QAA9BggB,EAAK1nB,EAAEqkB,MAAMtb,UAAgC,IAAP2e,OAAgB,EAASA,EAAGhgB,SAAW,GAChF,CACZ,EAyEIa,MAAO6e,GACPC,qBACJO,kBATA,SAA2B5nB,GACjB,MAAA6nB,EAAST,GAAkBpnB,GAEjC,OADoBqnB,GAAkBrnB,EAC/B8nB,CAAYD,EAAO9F,IAAIyF,IAClC,GC5EMO,GAAe,CAAC7X,EAAQzB,IAAYjQ,GAAM,GAAGA,EAAI,EAAIiQ,EAASyB,IACpE,SAAS8X,GAAS9X,EAAQzB,GAClB,MAAkB,iBAAXyB,EACClQ,GAAMkU,GAAIhE,EAAQzB,EAAQzO,GAE7BqlB,GAAM1e,KAAKuJ,GACTiW,GAASjW,EAAQzB,GAGjByB,EAAOjJ,WAAW,QACnB8gB,GAAa7X,EAAQzB,GACrBwZ,GAAW/X,EAAQzB,EAEjC,CACA,MAAMyZ,GAAW,CAAC5C,EAAMC,KACd,MAAAgC,EAAS,IAAIjC,GACbgC,EAAYC,EAAO7f,OACnBygB,EAAa7C,EAAKvD,KAAI,CAACqG,EAAUha,IAAM4Z,GAASI,EAAU7C,EAAGnX,MACnE,OAAQpO,IACJ,IAAA,IAASoO,EAAI,EAAGA,EAAIkZ,EAAWlZ,IAC3BmZ,EAAOnZ,GAAK+Z,EAAW/Z,GAAGpO,GAEvB,OAAAunB,CAAA,CACV,EAECc,GAAY,CAACnY,EAAQzB,KACvB,MAAM8Y,EAAS,IAAKrX,KAAWzB,GACzB0Z,EAAa,CAAE,EACrB,IAAA,MAAW/lB,KAAOmlB,OACM,IAAhBrX,EAAO9N,SAAsC,IAAhBqM,EAAOrM,KACzB+lB,EAAA/lB,GAAO4lB,GAAS9X,EAAO9N,GAAMqM,EAAOrM,KAGvD,OAAQpC,IACJ,IAAA,MAAWoC,KAAO+lB,EACdZ,EAAOnlB,GAAO+lB,EAAW/lB,GAAKpC,GAE3B,OAAAunB,CAAA,CACV,EAECU,GAAa,CAAC/X,EAAQzB,KAClB,MAAA6Z,EAAWb,GAAQJ,kBAAkB5Y,GACrC8Z,EAAczB,GAAoB5W,GAClCsY,EAAc1B,GAAoBrY,GAIxC,OAHuB8Z,EAAYtB,UAAYuB,EAAYvB,SACvDsB,EAAYrB,YAAcsB,EAAYtB,WACtCqB,EAAYpB,YAAcqB,EAAYrB,WAE/BhN,GAAK+N,GAASK,EAAYrW,OAAQsW,EAAYtW,QAASoW,GAIvDP,GAAa7X,EAAQzB,EACpC,EChDM+W,GAAW,CAACF,EAAMC,EAAIngB,KACxB,MAAMqjB,EAAmBlD,EAAKD,EAC9B,OAA4B,IAArBmD,EAAyB,GAAKrjB,EAAQkgB,GAAQmD,CAAA,ECJnDC,GAAY,CAACpD,EAAMC,IAAQ/mB,GAAM0V,GAAIoR,EAAMC,EAAI/mB,GAgBrD,SAASmqB,GAAapB,EAAQjG,EAAMsH,GAChC,MAAMC,EAAS,GACTC,EAAeF,IAhBJ,iBADO5oB,EAiB+BunB,EAAO,IAfnDmB,GAEW,iBAAN1oB,EACLqlB,GAAM1e,KAAK3G,GAAKmmB,GAAW8B,GAE7BhoB,MAAMC,QAAQF,GACZkoB,GAEW,iBAANloB,EACLqoB,GAEJK,IAbX,IAA4B1oB,EAkBlB,MAAA+oB,EAAYxB,EAAO7f,OAAS,EAClC,IAAA,IAAS0G,EAAI,EAAGA,EAAI2a,EAAW3a,IAAK,CAC5B,IAAA4a,EAAQF,EAAavB,EAAOnZ,GAAImZ,EAAOnZ,EAAI,IAC/C,GAAIkT,EAAM,CACA,MAAA2H,EAAiBhpB,MAAMC,QAAQohB,GAAQA,EAAKlT,IAAMkH,GAAOgM,EACvD0H,EAAA7O,GAAK8O,EAAgBD,EACzC,CACQH,EAAO9S,KAAKiT,EACpB,CACW,OAAAH,CACX,CAoBA,SAASK,GAAYC,EAAO5B,GAAUrf,MAAOkhB,GAAU,EAAM9H,KAAAA,EAAM0H,MAAAA,GAAU,IACzE,MAAMK,EAAcF,EAAMzhB,OAM1B,GALU6Y,GAAA8I,IAAgB9B,EAAO7f,QAKb,IAAhB2hB,EACO,MAAA,IAAM9B,EAAO,GAEpB4B,EAAM,GAAKA,EAAME,EAAc,KAC/BF,EAAQ,IAAIA,GAAOG,UACnB/B,EAAS,IAAIA,GAAQ+B,WAEzB,MAAMT,EAASF,GAAapB,EAAQjG,EAAM0H,GACpCD,EAAYF,EAAOnhB,OACnB6hB,EAAgBvpB,IAClB,IAAIoO,EAAI,EACR,GAAI2a,EAAY,EACZ,KAAO3a,EAAI+a,EAAMzhB,OAAS,KAClB1H,EAAImpB,EAAM/a,EAAI,IADOA,KAK3B,MAAAob,EAAkBhE,GAAS2D,EAAM/a,GAAI+a,EAAM/a,EAAI,GAAIpO,GAClD,OAAA6oB,EAAOza,GAAGob,EAAe,EAEpC,OAAOJ,EACAppB,GAAMupB,EAAarhB,EAAMihB,EAAM,GAAIA,EAAME,EAAc,GAAIrpB,IAC5DupB,CACV,CCvFA,SAASE,GAAcC,GACb,MAAAvZ,EAAS,CAAC,GAET,OCFX,SAAoBA,EAAQwZ,GACxB,MAAMxhB,EAAMgI,EAAOA,EAAOzI,OAAS,GACnC,IAAA,IAAS0G,EAAI,EAAGA,GAAKub,EAAWvb,IAAK,CACjC,MAAMwb,EAAiBpE,GAAS,EAAGmE,EAAWvb,GAC9C+B,EAAO4F,KAAK7B,GAAI/L,EAAK,EAAGyhB,GAChC,CACA,CDLeC,CAAA1Z,EAAQuZ,EAAIhiB,OAAS,GACzByI,CACX,CEIA,SAAS2Z,IAAUC,SAAEA,EAAW,IAAKD,UAAWE,QAAgBC,EAAO3I,KAAAA,EAAO,cAKpE,MAAA4I,ECfY,CAAC5I,GACZrhB,MAAMC,QAAQohB,IAA4B,iBAAZA,EAAK,GDclB6I,CAAc7I,GAChCA,EAAKS,IAAI2B,IACTA,GAA2BpC,GAK3BlU,EAAQ,CACVgd,MAAM,EACNhlB,MAAO4kB,EAAe,IAKpBK,EE7BV,SAA8Bla,EAAQ4Z,GAClC,OAAO5Z,EAAO4R,KAAKuI,GAAMA,EAAIP,GACjC,CF2B0BQ,CAGtBN,GAASA,EAAMviB,SAAWsiB,EAAetiB,OACnCuiB,EACAR,GAAcO,GAAiBD,GAC/BS,EAAoBtB,GAAYmB,EAAeL,EAAgB,CACjE1I,KAAMrhB,MAAMC,QAAQgqB,GACdA,GA9BShY,EA+BK8X,EA/BGlJ,EA+BaoJ,EA9BjChY,EAAO6P,KAAI,IAAMjB,GAAUW,KAAWvL,OAAO,EAAGhE,EAAOxK,OAAS,MAD3E,IAAuBwK,EAAQ4O,EAiCpB,MAAA,CACH2J,mBAAoBV,EACpB9J,KAAOgC,IACG7U,EAAAhI,MAAQolB,EAAkBvI,GAChC7U,EAAMgd,KAAOnI,GAAK8H,EACX3c,GAGnB,CG1CA,SAASsd,GAAkBpK,EAAUqK,GAC1B,OAAAA,EAAgBrK,GAAY,IAAOqK,GAAiB,CAC/D,CCLA,SAASC,GAAsBC,EAAc5I,EAAG9d,GAC5C,MAAM2mB,EAAQziB,KAAKD,IAAI6Z,EAFI,EAEwB,GACnD,OAAOyI,GAAkBvmB,EAAU0mB,EAAaC,GAAQ7I,EAAI6I,EAChE,CCGA,SAASC,IAAWhB,SAAEA,EAAW,IAAKiB,OAAAA,EAAS,aAAM1K,EAAW,EAAA2K,KAAGA,EAAO,IAClE,IAAAC,EACAC,EAEAC,EAAe,EAAIJ,EAIRI,EAAAljB,EAVA,IACA,EAS8BkjB,GAC7CrB,EAAW7hB,EAbK,IACA,GAY2BwY,GAAsBqJ,IAC7DqB,EAAe,GAIfF,EAAYG,IACR,MAAMC,EAAmBD,EAAeD,EAClCpU,EAAQsU,EAAmBvB,EAI1B,MAzBH,MAsBMuB,EAAmBhL,GACnBiL,GAAgBF,EAAcD,GAC9B/iB,KAAKmjB,KAAKxU,EACO,EAE/BmU,EAAcE,IACV,MACMrU,EADmBqU,EAAeD,EACPrB,EAC3B3I,EAAIpK,EAAQsJ,EAAWA,EACvBzH,EAAIxQ,KAAKob,IAAI2H,EAAc,GAAK/iB,KAAKob,IAAI4H,EAAc,GAAKtB,EAC5D0B,EAAIpjB,KAAKmjB,KAAKxU,GACd+N,EAAIwG,GAAgBljB,KAAKob,IAAI4H,EAAc,GAAID,GAE7C,OAnCJ,KAkCYF,EAASG,GAA0B,GAAS,EAAA,KACzCjK,EAAIvI,GAAK4S,GAAM1G,CAAA,IAOtCmG,EAAYG,GACEhjB,KAAKmjB,KAAKH,EAAetB,KACxBsB,EAAe/K,GAAYyJ,EAAW,QAGrDoB,EAAcE,GACAhjB,KAAKmjB,KAAKH,EAAetB,IACIA,EAAWA,GAAvCzJ,EAAW+K,KAI9B,MACMA,EAmBV,SAAyBH,EAAUC,EAAYO,GAC3C,IAAIC,EAASD,EACb,IAAA,IAAStd,EAAI,EAAGA,EAAIwd,GAAgBxd,IAChCud,GAAkBT,EAASS,GAAUR,EAAWQ,GAE7C,OAAAA,CACX,CAzByBE,CAAgBX,EAAUC,EAD1B,EAAIpB,GAGrB,GADJA,EAAWvJ,GAAsBuJ,GAC7BpC,MAAM0D,GACC,MAAA,CACHS,UAAW,IACXC,QAAS,GACThC,YAGH,CACD,MAAM+B,EAAYzjB,KAAKob,IAAI4H,EAAc,GAAKJ,EACvC,MAAA,CACHa,YACAC,QAAwB,EAAfX,EAAmB/iB,KAAKwd,KAAKoF,EAAOa,GAC7C/B,WAEZ,CACA,CACA,MAAM6B,GAAiB,GAQvB,SAASL,GAAgBF,EAAcD,GACnC,OAAOC,EAAehjB,KAAKwd,KAAK,EAAIuF,EAAeA,EACvD,CClFA,MAAMY,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAa5e,EAASgE,GAC3B,OAAOA,EAAK5Q,MAAM0B,QAAyB,IAAjBkL,EAAQlL,IACtC,CAuBA,SAAS+pB,IAASrC,UAAAA,EAAAA,UAAWsC,YAAWC,KAAc/e,IAC5C,MAAA4C,EAAS4Z,EAAU,GACnBrb,EAASqb,EAAUA,EAAUpiB,OAAS,GAKtC0F,EAAQ,CAAEgd,MAAM,EAAOhlB,MAAO8K,IAC9B4b,UAAEA,UAAWC,EAASd,KAAAA,EAAAlB,SAAMA,WAAUzJ,EAAUgM,uBAAAA,GA9B1D,SAA0Bhf,GACtB,IAAIif,EAAgB,CAChBjM,SAAU,EACVwL,UAAW,IACXC,QAAS,GACTd,KAAM,EACNqB,wBAAwB,KACrBhf,GAGH,IAAC4e,GAAa5e,EAAS2e,KACvBC,GAAa5e,EAAS0e,IAAe,CAC/B,MAAAQ,EAAUzB,GAAWzd,GACXif,EAAA,IACTA,KACAC,EACHvB,KAAM,GAEVsB,EAAcD,wBAAyB,CAC/C,CACW,OAAAC,CACX,CASsFE,CAAiB,IAC5Fnf,EACHgT,UAAWI,GAAsBpT,EAAQgT,UAAY,KAEnDoM,EAAkBpM,GAAY,EAC9B8K,EAAeW,GAAW,EAAI1jB,KAAKwd,KAAKiG,EAAYb,IACpD0B,EAAele,EAASyB,EACxB0c,EAAsBlM,GAAsBrY,KAAKwd,KAAKiG,EAAYb,IAQlE4B,EAAkBxkB,KAAK0a,IAAI4J,GAAgB,EAG7C,IAAAG,EACJ,GAHcT,IAAAA,EAAYQ,EAAkB,IAAO,GACrCT,IAAAA,EAAYS,EAAkB,KAAQ,IAEhDzB,EAAe,EAAG,CACZ,MAAA2B,EAAcxB,GAAgBqB,EAAqBxB,GAEzD0B,EAAiB7K,IACb,MAAMiJ,EAAW7iB,KAAKmjB,KAAKJ,EAAewB,EAAsB3K,GAChE,OAAQxT,EACJyc,IACOwB,EACCtB,EAAewB,EAAsBD,GACrCI,EACA1kB,KAAK8a,IAAI4J,EAAc9K,GACvB0K,EAAetkB,KAAK2kB,IAAID,EAAc9K,GAAC,CAE/D,MAAA,GAC8B,IAAjBmJ,EAEL0B,EAAiB7K,GAAMxT,EACnBpG,KAAKmjB,KAAKoB,EAAsB3K,IAC3B0K,GACID,EAAkBE,EAAsBD,GAAgB1K,OAEpE,CAED,MAAMgL,EAAoBL,EAAsBvkB,KAAKwd,KAAKuF,EAAeA,EAAe,GACxF0B,EAAiB7K,IACb,MAAMiJ,EAAW7iB,KAAKmjB,KAAKJ,EAAewB,EAAsB3K,GAE1DiL,EAAW7kB,KAAKF,IAAI8kB,EAAoBhL,EAAG,KACjD,OAAQxT,EACHyc,IACKwB,EACEtB,EAAewB,EAAsBD,GACrCtkB,KAAK8kB,KAAKD,GACVD,EACIN,EACAtkB,KAAK+kB,KAAKF,IAClBD,CAAA,CAEpB,CACW,MAAA,CACHxC,mBAAoB6B,GAAyBvC,GAAmB,KAChE9J,KAAOgC,IACG,MAAA9d,EAAU2oB,EAAc7K,GAC9B,GAAKqK,EAqBDlf,EAAMgd,KAAOnI,GAAK8H,MArBO,CACzB,IAAInW,EAAkB8Y,EACZ,IAANzK,IAOsBrO,EADlBwX,EAAe,EACGR,GAAsBkC,EAAe7K,EAAG9d,GAGxC,GAG1B,MAAMkpB,EAA2BhlB,KAAK0a,IAAInP,IAAoByY,EACxDiB,EAA+BjlB,KAAK0a,IAAItU,EAAStK,IAAYioB,EACnEhf,EAAMgd,KACFiD,GAA4BC,CAChD,CAKmB,OADDlgB,EAAAhI,MAAQgI,EAAMgd,KAAO3b,EAAStK,EAC7BiJ,CAAA,EAGnB,CC7HA,SAASmgB,IAAUzD,UAAAA,EAAAA,SAAWxJ,EAAW,EAAKkN,MAAAA,EAAQ,gBAAKC,EAAe,IAAAC,cAAKA,EAAgB,GAAIC,gBAAAA,EAAkB,iBAAKC,EAAczlB,IAAAA,EAAAC,IAAKA,YAAKgkB,EAAY,GAAAC,UAAKA,IACzJ,MAAAnc,EAAS4Z,EAAU,GACnB1c,EAAQ,CACVgd,MAAM,EACNhlB,MAAO8K,GAGL2d,EAAmB7tB,QACT,IAARmI,EACOC,OACC,IAARA,GAEGC,KAAK0a,IAAI5a,EAAMnI,GAAKqI,KAAK0a,IAAI3a,EAAMpI,GAD/BmI,EAC0CC,EAEzD,IAAI0lB,EAAYN,EAAQlN,EACxB,MAAMyN,EAAQ7d,EAAS4d,EACjBrf,OAA0B,IAAjBmf,EAA6BG,EAAQH,EAAaG,GAK7Dtf,IAAWsf,IACXD,EAAYrf,EAASyB,GACnB,MAAA8d,EAAa/L,IAAO6L,EAAYzlB,KAAKmjB,KAAKvJ,EAAIwL,GAC9CQ,EAAchM,GAAMxT,EAASuf,EAAU/L,GACvCiM,EAAiBjM,IACb,MAAAjL,EAAQgX,EAAU/L,GAClBnR,EAASmd,EAAWhM,GAC1B7U,EAAMgd,KAAO/hB,KAAK0a,IAAI/L,IAAUoV,EAC1Bhf,EAAAhI,MAAQgI,EAAMgd,KAAO3b,EAASqC,CAAA,EAQpC,IAAAqd,EACAC,EACE,MAAAC,EAAsBpM,IAjCN,IAACjiB,KAkCAoN,EAAMhI,WAlCS,IAAR+C,GAAqBnI,EAAImI,QAAiB,IAARC,GAAqBpI,EAAIoI,KAoC/D+lB,EAAAlM,EACtBmM,EAAWjC,GAAO,CACdrC,UAAW,CAAC1c,EAAMhI,MAAOyoB,EAAgBzgB,EAAMhI,QAC/Ckb,SAAUsK,GAAsBqD,EAAYhM,EAAG7U,EAAMhI,OACrD2mB,QAAS2B,EACT5B,UAAW6B,EACXvB,YACAC,cACH,EAGE,OADPgC,EAAmB,GACZ,CACH5D,mBAAoB,KACpBxK,KAAOgC,IAOH,IAAIqM,GAAkB,EAUlB,OATCF,QAAoC,IAAxBD,IACKG,GAAA,EAClBJ,EAAcjM,GACdoM,EAAmBpM,SAMK,IAAxBkM,GAAqClM,EAAIkM,EAClCC,EAASnO,KAAKgC,EAAIkM,KAGxBG,GAAmBJ,EAAcjM,GAC3B7U,EACvB,EAGA,CClFA,MAAMmhB,GAAmBjqB,IACrB,MAAMkqB,EAAgB,EAAGvX,eAAgB3S,EAAO2S,GACzC,MAAA,CACH7W,MAAO,IAAMmW,GAAMjS,OAAOkqB,GAAe,GACzCC,KAAM,IAAMhY,GAAY+X,GAKxBlW,IAAK,IAAM5B,GAAUQ,aAAeR,GAAUO,UAAYoB,YAAYC,MACzE,ECPL,SAASoW,GAAsBC,GAC3B,IAAI5E,EAAW,EAEX,IAAA3c,EAAQuhB,EAAU1O,KAAK8J,GAC3B,MAAQ3c,EAAMgd,MAAQL,EALG,KAMTA,GAHC,GAIL3c,EAAAuhB,EAAU1O,KAAK8J,GAEpB,OAAAA,GATkB,IASiB6E,IAAW7E,CACzD,CCJA,MAAM8E,GAAQ,CACVC,MAAOvB,GACPA,WACAwB,MAAOjF,GACPA,aACAqC,WASJ,SAAS6C,IAAaC,SAAEA,GAAW,EAAMC,MAAAA,EAAQ,EAAGC,OAAAA,EAASZ,GAAiBzE,UAAWsF,EAAapnB,KAAAA,EAAO,mBAAaqnB,EAAS,EAAAC,YAAGA,EAAc,EAAAC,WAAGA,EAAa,OAAAC,OAAQA,EAAQC,OAAAA,EAAAC,WAAQA,EAAYC,SAAAA,KAAariB,IACjN,IAEIsiB,EACAC,EAHAC,EAAQ,EACRC,GAAa,EAOjB,MAAMC,EAAwB,KACDH,EAAA,IAAII,SAASC,IACTN,EAAAM,CAAA,GAC5B,EAID,IAAAC,EADkBH,IAEhB,MAAAI,EAAmBvB,GAAM7mB,IAAS8hB,GAKpC,IAAAuG,EACAD,IAAqBtG,IACK,iBAAnBsF,EAAY,KAInBiB,EAAwBnH,GAAY,CAAC,EAAG,KAAMkG,EAAa,CACvDlnB,OAAO,IAEGknB,EAAA,CAAC,EAAG,MAEtB,MAAMT,EAAYyB,EAAiB,IAAK9iB,EAASwc,UAAWsF,IACxD,IAAAkB,EACe,WAAff,IACAe,EAAoBF,EAAiB,IAC9B9iB,EACHwc,UAAW,IAAIsF,GAAa9F,UAC5BhJ,WAAYhT,EAAQgT,UAAY,MAGxC,IAAIiQ,EAAY,OACZC,EAAW,KACXC,EAAY,KACZC,EAAa,KASoB,OAAjC/B,EAAUlE,oBAA+B4E,IAC/BV,EAAAlE,mBAAqBiE,GAAsBC,IAEnD,MAAAlE,mBAAEA,GAAuBkE,EAC/B,IAAIgC,EAAmB/B,IACnBgC,EAAgBhC,IACO,OAAvBnE,IACAkG,EAAmBlG,EAAqB6E,EACxBsB,EAAAD,GAAoBtB,EAAS,GAAKC,GAEtD,IAAIuB,EAAc,EACZ,MAAAC,EAAQ7Z,IACV,GAAkB,OAAdwZ,EACA,OAOAX,EAAQ,IACIW,EAAApoB,KAAKF,IAAIsoB,EAAWxZ,IAChC6Y,EAAQ,IACRW,EAAYpoB,KAAKF,IAAI8O,EAAY2Z,EAAgBd,EAAOW,IAE1CI,EADD,OAAbL,EACcA,EAMAnoB,KAAKQ,MAAMoO,EAAYwZ,GAAaX,EAGtD,MAAMiB,EAAmBF,EAAc3B,GAASY,GAAS,EAAI,GAAI,GAC3DkB,EAAiBlB,GAAS,EAAIiB,EAAmB,EAAIA,EAAmBH,EAChEC,EAAAxoB,KAAKD,IAAI2oB,EAAkB,GAKvB,aAAdR,GAAyC,OAAbC,IACdK,EAAAD,GAElB,IAAIK,EAAUJ,EACVK,EAAiBvC,EACrB,GAAIU,EAAQ,CAMR,MAAM7J,EAAWnd,KAAKF,IAAI0oB,EAAaD,GAAiBD,EAKpD,IAAAQ,EAAmB9oB,KAAK+oB,MAAM5L,GAK9B6L,EAAoB7L,EAAW,GAK9B6L,GAAqB7L,GAAY,IACd6L,EAAA,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmB9oB,KAAKF,IAAIgpB,EAAkB9B,EAAS,GAIhCxuB,QAAQswB,EAAmB,KAE3B,YAAf5B,GACA8B,EAAoB,EAAIA,EACpB/B,IACA+B,GAAqB/B,EAAcqB,IAGnB,WAAfpB,IACY2B,EAAAZ,IAGzBW,EAAU/oB,EAAM,EAAG,EAAGmpB,GAAqBV,CAAA,CAO/C,MAAMvjB,EAAQ4jB,EACR,CAAE5G,MAAM,EAAOhlB,MAAOgqB,EAAY,IAClC8B,EAAejR,KAAKgR,GACtBZ,IACMjjB,EAAAhI,MAAQirB,EAAsBjjB,EAAMhI,QAE1C,IAAAglB,KAAEA,GAAShd,EACV4jB,GAAyC,OAAvBvG,IACnBL,EAAO0F,GAAS,EAAIe,GAAeD,EAAgBC,GAAe,GAEtE,MAAMS,EAAmC,OAAbd,IACT,aAAdD,GAA2C,YAAdA,GAA2BnG,GAOtD,OANHuF,GACAA,EAASviB,EAAMhI,OAEfksB,GACOC,IAEJnkB,CAAA,EAELokB,EAAsB,KACxBrB,GAAmBA,EAAgB1B,OACjB0B,OAAA,CAAA,EAEhB3Z,EAAS,KACC+Z,EAAA,OACQiB,IACG5B,IACDI,IACtBS,EAAYC,EAAa,IAAA,EAEvBa,EAAS,KACChB,EAAA,WACZb,GAAcA,IACM8B,IACG5B,GAAA,EAErB6B,EAAO,KACL,GAAA1B,EACA,OACCI,IACDA,EAAkBhB,EAAO2B,IACvB,MAAAxY,EAAM6X,EAAgB7X,MAC5BkX,GAAUA,IACO,OAAbgB,EACAC,EAAYnY,EAAMkY,EAEZC,GAA2B,aAAdF,IACPE,EAAAnY,GAEE,aAAdiY,GACsBP,IAEbU,EAAAD,EACFD,EAAA,KAKCD,EAAA,UACZJ,EAAgB/vB,OAAM,EAEtB6uB,GACKwC,IAET,MAAMC,EAAW,CACbC,KAAA,CAAKzB,EAAS0B,IACH/B,EAAuB8B,KAAKzB,EAAS0B,GAEhD,QAAIC,GACA,OAAOnR,GAAsBmQ,EACjC,EACA,QAAIgB,CAAKC,GACLA,EAAUtR,GAAsBsR,GAClBjB,EAAAiB,EACG,OAAbtB,GAAsBL,GAA6B,IAAVL,EAI7BW,EAAAN,EAAgB7X,MAAQwZ,EAAUhC,EAHnCU,EAAAsB,CAKnB,EACA,YAAI/H,GACA,MAAMA,EAA4C,OAAjC4E,EAAUlE,mBACrBiE,GAAsBC,GACtBA,EAAUlE,mBAChB,OAAO/J,GAAsBqJ,EACjC,EACA,SAAI+F,GACO,OAAAA,CACX,EACA,SAAIA,CAAMiC,GACFA,IAAajC,GAAUK,IAEnBL,EAAAiC,EACCL,EAAAG,KAAOnR,GAAsBmQ,GAC1C,EACA,SAAIzjB,GACO,OAAAmjB,CACX,EACAkB,OACAO,MAAO,KACSzB,EAAA,SACDC,EAAAK,CAAA,EAEfpC,KAAM,KACWsB,GAAA,EACK,SAAdQ,IAEQA,EAAA,OACZd,GAAUA,IACHjZ,IAAA,EAEXA,OAAQ,KACe,OAAfka,GACAI,EAAKJ,GACFla,GAAA,EAEXyb,SAAU,KACM1B,EAAA,UAAA,EAEhB2B,OAASjB,IACOR,EAAA,EACLK,EAAKG,KAGb,OAAAS,CACX,CClSA,MAAMS,GCTN,SAAcva,GACN,IAAA+T,EACJ,MAAO,UACY,IAAXA,IACAA,EAAS/T,KACN+T,EAEf,CDEsByG,EAAK,IAAMzyB,OAAOE,eAAeC,KAAKuyB,QAAQzyB,UAAW,aAIzE0yB,OAAwBvrB,IAAI,CAC9B,UACA,WACA,SACA,YACA,oBAgBJ,SAASwrB,GAA2BntB,EAAOotB,GAAW7C,SAAEA,aAAUD,KAAepiB,IAO7E,KAN+B6kB,MAC3BG,GAAkBjsB,IAAImsB,KACrBllB,EAAQgiB,aACc,WAAvBhiB,EAAQiiB,YACY,IAApBjiB,EAAQye,SACS,YAAjBze,EAAQtF,MAED,OAAA,EAIX,IACI4nB,EACAC,EAFAE,GAAa,EAQb0C,GAAgB,EAKpB,MAAMzC,EAAwB,KACDH,EAAA,IAAII,SAASC,IACTN,EAAAM,CAAA,GAC5B,EAGkBF,IACnB,IAAElG,UAAAA,EAAWC,SAAAA,EAAW,IAAKzI,KAAAA,EAAAA,MAAM2I,GAAU3c,EAI7C,GAvC8B,EAACklB,EAAWllB,IAA6B,WAAjBA,EAAQtF,MACpD,oBAAdwqB,IACCzR,GAAuBzT,EAAQgU,MAqC5BoR,CAA8BF,EAAWllB,GAAU,CACnD,MAAMqlB,EAAkB3D,GAAa,IAC9B1hB,EACH+hB,OAAQ,EACRH,MAAO,IAEX,IAAI9hB,EAAQ,CAAEgd,MAAM,EAAOhlB,MAAO0kB,EAAU,IAC5C,MAAM8I,EAAwB,GAK9B,IAAI3Q,EAAI,EACR,MAAQ7U,EAAMgd,MAAQnI,EArDV,KAsDA7U,EAAAulB,EAAgBT,OAAOjQ,GACT2Q,EAAA7c,KAAK3I,EAAMhI,OAC5B6c,GA7DG,GA+DJgI,OAAA,EACRH,EAAY8I,EACZ7I,EAAW9H,EAjEC,GAkEZX,EAAO,QACf,CACI,MAAM5f,EE3FV,SAAsB8Q,EAASggB,EAAW1I,GAAaoF,MAAAA,EAAQ,EAAGnF,SAAAA,EAAAsF,OAAUA,EAAS,EAAAE,WAAGA,EAAa,OAAQjO,KAAAA,QAAM2I,GAAW,IAC1H,MAAM4I,EAAkB,CAAEL,CAACA,GAAY1I,GACnCG,IACA4I,EAAgB1iB,OAAS8Z,GACvB,MAAAnJ,EAASgB,GAAwBR,GAMhC,OAFHrhB,MAAMC,QAAQ4gB,KACd+R,EAAgB/R,OAASA,GACtBtO,EAAQ/R,QAAQoyB,EAAiB,CACpC3D,MAAAA,EACAnF,WACAjJ,OAAS7gB,MAAMC,QAAQ4gB,GAAmB,SAATA,EACjCgS,KAAM,OACNC,WAAY1D,EAAS,EACrB2D,UAA0B,YAAfzD,EAA2B,YAAc,UAE5D,CFyEsB0D,CAAa7tB,EAAM8tB,MAAM/uB,QAASquB,EAAW1I,EAAW,IACnExc,EACHyc,WASAzI,KAAMA,EACN2I,UAEEkJ,EAAkB,KACJV,GAAA,EAChB/wB,EAAU8U,QAAQ,EAEhB4c,EAAa,KACCX,GAAA,EAChBlc,GAAMjS,OAAO6uB,GACWvD,IACDI,GAAA,EAU3BtuB,EAAU2xB,SAAW,KACbZ,IAEJrtB,EAAMkB,IGhId,SAA0BwjB,GAAWuF,OAAEA,EAAQE,WAAAA,EAAa,SAIxD,OAAOzF,EAHOuF,GAAyB,SAAfE,GAAyBF,EAAS,GAAM,EAC1D,EACAvF,EAAUpiB,OAAS,EAE7B,CH2HkB4rB,CAAiBxJ,EAAWxc,IACtCoiB,GAAcA,IACF0D,IAAA,EAoET,MA/DU,CACbzB,KAAA,CAAKzB,EAAS0B,IACH/B,EAAuB8B,KAAKzB,EAAS0B,GAEhD2B,eAAeC,IACX9xB,EAAU8xB,SAAWA,EACrB9xB,EAAU2xB,SAAW,KACd/d,IAEX,QAAIuc,GACO,OAAAnR,GAAsBhf,EAAUmvB,aAAe,EACzD,EACD,QAAIgB,CAAKC,GACKpwB,EAAAmvB,YAAcrQ,GAAsBsR,EACjD,EACD,SAAIhC,GACA,OAAOpuB,EAAU+xB,YACpB,EACD,SAAI3D,CAAMiC,GACNrwB,EAAU+xB,aAAe1B,CAC5B,EACD,YAAIhI,GACA,OAAOrJ,GAAsBqJ,EAChC,EACD0H,KAAM,KACE1B,IAEJruB,EAAU+vB,OAIVhb,GAAY0c,GAAe,EAE/BnB,MAAO,IAAMtwB,EAAUswB,QACvBvD,KAAM,KAEF,GADasB,GAAA,EACe,SAAxBruB,EAAU6uB,UACV,OASE,MAAAM,YAAEA,GAAgBnvB,EACxB,GAAImvB,EAAa,CACb,MAAM8B,EAAkB3D,GAAa,IAC9B1hB,EACH2hB,UAAU,IAEd7pB,EAAMsuB,gBAAgBf,EAAgBT,OAAOrB,EAlKzC,IAkKoEzrB,MAAOutB,EAAgBT,OAAOrB,GAAazrB,MAlK/G,GAmKpB,CACwBguB,GAAA,EAEhBnB,SAAU,KACFQ,GAEJ/wB,EAAU6vB,QAAQ,EAEtB/a,OAAQ4c,EAGhB,CIrMA,MAAMO,GAAoB,CACtB3rB,KAAM,SACN8jB,UAAW,IACXC,QAAS,GACTM,UAAW,IAQTuH,GAAsB,CACxB5rB,KAAM,YACN+hB,SAAU,IAMRzI,GAAO,CACTtZ,KAAM,YACNsZ,KAAM,CAAC,IAAM,GAAK,IAAM,GACxByI,SAAU,IAER8J,GAAuB,CAACC,GAAYhK,UAAAA,KAClCA,EAAUpiB,OAAS,EACZksB,GAEF9sB,EAAeT,IAAIytB,GACjBA,EAAS7sB,WAAW,SAxBS,CACxCe,KAAM,SACN8jB,UAAW,IACXC,QAAoB,IAsBajC,EAAU,GAtBnB,EAAIzhB,KAAKwd,KAAK,KAAO,GAC7CwG,UAAW,IAsBDsH,GAEHrS,GCzBLyS,GAAe,CAAC3xB,EAAKgD,IAEX,WAARhD,MAKiB,iBAAVgD,IAAsBnF,MAAMC,QAAQkF,OAE1B,iBAAVA,IACNqiB,GAAQ9gB,KAAKvB,IAAoB,MAAVA,GACvBA,EAAM6B,WAAW,UChBpB+sB,OAAkBjtB,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAASktB,GAAmBj0B,GAClB,MAACW,EAAMyE,GAASpF,EAAEk0B,MAAM,GAAG,GAAI7qB,MAAM,KAC3C,GAAa,gBAAT1I,EACO,OAAAX,EACX,MAAOsI,GAAUlD,EAAMif,MAAMvb,IAAe,GAC5C,IAAKR,EACM,OAAAtI,EACX,MAAMmJ,EAAO/D,EAAM9F,QAAQgJ,EAAQ,IACnC,IAAI6rB,EAAeH,GAAY3tB,IAAI1F,GAAQ,EAAI,EAGxC,OAFH2H,IAAWlD,IACK+uB,GAAA,KACbxzB,EAAO,IAAMwzB,EAAehrB,EAAO,GAC9C,CACA,MAAMirB,GAAgB,oBAChBC,GAAS,IACR5M,GACHG,kBAAoB5nB,IACV,MAAAs0B,EAAYt0B,EAAEqkB,MAAM+P,IAC1B,OAAOE,EAAYA,EAAUvS,IAAIkS,IAAoBzyB,KAAK,KAAOxB,CAAA,GClBnEu0B,GAAoB,IACnB1qB,GAEHwb,SACAmP,gBAAiBnP,GACjBoP,aAAcpP,GACdyN,KAAMzN,GACNqP,OAAQrP,GAERsP,YAAatP,GACbuP,eAAgBvP,GAChBwP,iBAAkBxP,GAClByP,kBAAmBzP,GACnB0P,gBAAiB1P,GACjBgP,UACAW,aAAcX,IAKZY,GAAuB7yB,GAAQmyB,GAAkBnyB,GCvBvD,SAASwlB,GAAkBxlB,EAAKgD,GACxB,IAAA8vB,EAAmBD,GAAoB7yB,GAI3C,OAHI8yB,IAAqBb,KACFa,EAAAzN,IAEhByN,EAAiBtN,kBAClBsN,EAAiBtN,kBAAkBxiB,QACnC,CACV,CCTA,MAAM+vB,GAAqBn1B,GAAM,aAAa2G,KAAK3G,GCDnD,SAASo1B,GAAOhwB,GACR,MAAiB,iBAAVA,EACU,IAAVA,EAEQ,OAAVA,EACY,SAAVA,GAA8B,MAAVA,GAAiB+vB,GAAkB/vB,QAFtE,CAIA,CCDA,SAASiwB,GAAmBjgB,EAAYhT,GACpC,OAAOgT,EAAWhT,IAAQgT,EAAoB,SAAKA,CACvD,CCVA,MAAMkgB,IACc,ECWdC,GAAqB,CAAC/C,EAAWptB,EAAOqJ,EAAQ2G,EAAa,CAAA,IACvDsa,IACJ,MAAM8F,EAAkBH,GAAmBjgB,EAAYod,IAAc,CAAE,EAMjEtD,EAAQsG,EAAgBtG,OAAS9Z,EAAW8Z,OAAS,EAKvD,IAAA+B,QAAEA,EAAU,GAAM7b,EACZ6b,GAAUzQ,GAAsB0O,GAC1C,MAAMpF,ECvBd,SAAsB1kB,EAAOotB,EAAW/jB,EAAQ2G,GACtC,MAAAqgB,EAAqB1B,GAAavB,EAAW/jB,GAC/Cqb,IAAAA,EAEAA,EADA7pB,MAAMC,QAAQuO,GACF,IAAIA,GAGJ,CAAC,KAAMA,GAEvB,MAAMinB,OAAoC,IAApBtgB,EAAWkQ,KAAqBlQ,EAAWkQ,KAAOlgB,EAAMe,MAC9E,IAAIwvB,EACJ,MAAMC,EAAsB,GAC5B,IAAA,IAASxnB,EAAI,EAAGA,EAAI0b,EAAUpiB,OAAQ0G,IAIb,OAAjB0b,EAAU1b,KACV0b,EAAU1b,GAAW,IAANA,EAAUsnB,EAAgB5L,EAAU1b,EAAI,IAEvDgnB,GAAOtL,EAAU1b,KACjBwnB,EAAoB7f,KAAK3H,GAGD,iBAAjB0b,EAAU1b,IACA,SAAjB0b,EAAU1b,IACO,MAAjB0b,EAAU1b,KACVunB,EAA0B7L,EAAU1b,IAGxC,GAAAqnB,GACAG,EAAoBluB,QACpBiuB,EACA,IAAA,IAASvnB,EAAI,EAAGA,EAAIwnB,EAAoBluB,OAAQ0G,IAE5C0b,EADc8L,EAAoBxnB,IACfwZ,GAAkB4K,EAAWmD,GAGjD7L,OAAAA,CACX,CDf0B+L,CAAazwB,EAAOotB,EAAW/jB,EAAQ+mB,GAMnDM,EAAiBhM,EAAU,GAC3BiM,EAAiBjM,EAAUA,EAAUpiB,OAAS,GAC9CsuB,EAAqBjC,GAAavB,EAAWsD,GAC7CL,EAAqB1B,GAAavB,EAAWuD,GAEnD,IAAIzoB,EAAU,CACVwc,UAAAA,EACAxJ,SAAUlb,EAAM+B,cAChBma,KAAM,aACHkU,EACHtG,OAAQ+B,EACRtB,SAAW3vB,IACPoF,EAAMkB,IAAItG,GACMw1B,EAAA7F,UAAY6F,EAAgB7F,SAAS3vB,EAAC,EAE1D0vB,WAAY,KACIA,IACI8F,EAAA9F,YAAc8F,EAAgB9F,YAAY,GAwB9D,GFrEZ,UAA6BuG,KAAEA,EAAM/G,MAAOgH,gBAAQC,EAAeC,gBAAAA,EAAAC,iBAAiBA,EAAkBhH,OAAAA,EAAAE,WAAQA,cAAYD,EAAahK,KAAAA,EAAA2L,QAAMA,KAAY7b,IACrJ,QAASzV,OAAO2R,KAAK8D,GAAY1N,MACrC,CEkDa4uB,CAAoBd,KACXloB,EAAA,IACHA,KACAumB,GAAqBrB,EAAWllB,KAQvCA,EAAQyc,WACAzc,EAAAyc,SAAWvJ,GAAsBlT,EAAQyc,WAEjDzc,EAAQgiB,cACAhiB,EAAAgiB,YAAc9O,GAAsBlT,EAAQgiB,eAEnD0G,IACAP,GACD7U,KACyB,IAAzB4U,EAAgBxtB,MAChBstB,GAKA,OEhFZ,UAAkCxL,UAAAA,EAAWoF,MAAAA,EAAOS,SAAAA,EAAAD,WAAUA,IAC1D,MAAM6G,EAAW,KACb5G,GAAYA,EAAS7F,EAAUA,EAAUpiB,OAAS,IAClDgoB,GAAcA,IAQP,CACHmC,KAAM,EACN/B,MAAO,EACP/F,SAAU,EACV0H,KAAOnc,GACP0c,MAAQ1c,GACRmZ,KAAOnZ,GACPqc,KAAOzB,IACMA,IACFD,QAAQC,WAEnB1Z,OAASlB,GACT2c,SAAW3c,KAGnB,OAAO4Z,EACDF,GAAa,CACXlF,UAAW,CAAC,EAAG,GACfC,SAAU,EACVmF,MAAAA,EACAQ,WAAY6G,IAEdA,GACV,CF8CmBC,CAEDlpB,GAKV,IAMC8H,EAAWqhB,WACRrxB,EAAM8tB,OACN9tB,EAAM8tB,MAAM/uB,mBAAmBuyB,cAK9BtxB,EAAM8tB,MAAM5X,WAAWqU,SAAU,CAClC,MAAMgH,EAAuBpE,GAA2BntB,EAAOotB,EAAWllB,GACtE,GAAAqpB,EACO,OAAAA,CACvB,CAIQ,OAAO3H,GAAa1hB,EAAO,EG7GnC,SAASspB,GAAwBxxB,GAC7B,OAAOvE,QAAQqG,EAAc9B,IAAUA,EAAMyQ,IACjD,CCDA,MAAMghB,GAAqB72B,GAAM,iBAAiB2G,KAAK3G,GCHvD,SAAS82B,GAAcpN,EAAKqN,IACE,IAAtBrN,EAAIhjB,QAAQqwB,IACZrN,EAAI3T,KAAKghB,EACjB,CACA,SAASC,GAAWtN,EAAKqN,GACf,MAAA9gB,EAAQyT,EAAIhjB,QAAQqwB,GACtB9gB,GAAQ,GACJyT,EAAAxT,OAAOD,EAAO,EAC1B,CCNA,MAAMghB,GACF,WAAAxhB,GACIC,KAAKwhB,cAAgB,EAC7B,CACI,GAAArhB,CAAIqD,GAEA,OADc4d,GAAAphB,KAAKwhB,cAAehe,GAC3B,IAAM8d,GAAWthB,KAAKwhB,cAAehe,EACpD,CACI,MAAAie,CAAOld,EAAGC,EAAGiH,GACH,MAAAiW,EAAmB1hB,KAAKwhB,cAAcxvB,OAC5C,GAAK0vB,EAEL,GAAyB,IAArBA,EAIA1hB,KAAKwhB,cAAc,GAAGjd,EAAGC,EAAGiH,QAG5B,IAAA,IAAS/S,EAAI,EAAGA,EAAIgpB,EAAkBhpB,IAAK,CAKjC,MAAA8K,EAAUxD,KAAKwhB,cAAc9oB,GACxB8K,GAAAA,EAAQe,EAAGC,EAAGiH,EACzC,CAEA,CACI,OAAAkW,GACI,OAAO3hB,KAAKwhB,cAAcxvB,MAClC,CACI,KAAA0O,GACIV,KAAKwhB,cAAcxvB,OAAS,CACpC,ECpBA,MAAM4vB,GASF,WAAA7hB,CAAY3B,EAAMxG,EAAU,IApBhB,IAAClI,EAyBTsQ,KAAK6hB,QAAU,UAMf7hB,KAAK8hB,UAAY,EAMjB9hB,KAAK+hB,YAAc,EAQnB/hB,KAAKgiB,kBAAmB,EAIxBhiB,KAAKiiB,OAAS,CAAC,EACfjiB,KAAKkiB,gBAAkB,CAAC53B,EAAG0E,GAAS,KAChCgR,KAAKwK,KAAOxK,KAAKvR,QACjBuR,KAAKvR,QAAUnE,EAET,MAAAgX,MAAEA,EAAOC,UAAAA,GAAcP,GACzBhB,KAAK+hB,cAAgBxgB,IACrBvB,KAAK8hB,UAAYxgB,EACjBtB,KAAK+hB,YAAcxgB,EACbV,GAAAshB,WAAWniB,KAAKoiB,wBAGtBpiB,KAAKwK,OAASxK,KAAKvR,SAAWuR,KAAKiiB,OAAOI,QAC1CriB,KAAKiiB,OAAOI,OAAOZ,OAAOzhB,KAAKvR,SAG/BuR,KAAKiiB,OAAOK,gBACZtiB,KAAKiiB,OAAOK,eAAeb,OAAOzhB,KAAKvO,eAGvCzC,GAAUgR,KAAKiiB,OAAOM,eACtBviB,KAAKiiB,OAAOM,cAAcd,OAAOzhB,KAAKvR,QAAO,EAWrDuR,KAAKoiB,sBAAwB,IAAMvhB,GAAMshB,WAAWniB,KAAKwiB,eAUzDxiB,KAAKwiB,cAAgB,EAAGjhB,gBAChBA,IAAcvB,KAAK+hB,cACnB/hB,KAAKwK,KAAOxK,KAAKvR,QACbuR,KAAKiiB,OAAOK,gBACZtiB,KAAKiiB,OAAOK,eAAeb,OAAOzhB,KAAKvO,eAC3C,EAGRuO,KAAKyiB,aAAc,EACdziB,KAAAwK,KAAOxK,KAAKvR,QAAU2P,EACtB4B,KAAAgiB,kBArGItyB,EAqGuBsQ,KAAKvR,SApGjCwjB,MAAMnf,WAAWpD,KAqGrBsQ,KAAKwd,MAAQ5lB,EAAQ4lB,KAAA,CA0CzB,QAAAkF,CAASC,GAIE,OAAA3iB,KAAK4iB,GAAG,SAAUD,EAAY,CAEzC,EAAAC,CAAGrf,EAAWrB,GACLlC,KAAKiiB,OAAO1e,KACbvD,KAAKiiB,OAAO1e,GAAa,IAAIge,IAEjC,MAAMsB,EAAc7iB,KAAKiiB,OAAO1e,GAAWpD,IAAI+B,GAC/C,MAAkB,WAAdqB,EACO,KACSsf,IAKZhiB,GAAMmC,MAAK,KACFhD,KAAKiiB,OAAOI,OAAOV,WACpB3hB,KAAK+Y,MAAK,GAEjB,EAGF8J,CAAA,CAEX,cAAAC,GACe,IAAA,MAAAC,KAAiB/iB,KAAKiiB,OACxBjiB,KAAAiiB,OAAOc,GAAeriB,OAC/B,CAOJ,MAAAsiB,CAAOC,EAAeC,GAClBljB,KAAKijB,cAAgBA,EACrBjjB,KAAKkjB,kBAAoBA,CAAA,CAiB7B,GAAAtyB,CAAItG,EAAG0E,GAAS,GACPA,GAAWgR,KAAKijB,cAIZjjB,KAAAijB,cAAc34B,EAAG0V,KAAKkiB,iBAHtBliB,KAAAkiB,gBAAgB53B,EAAG0E,EAI5B,CAEJ,eAAAgvB,CAAgBxT,EAAM/b,EAAS6S,GAC3BtB,KAAKpP,IAAInC,GACTuR,KAAKwK,KAAOA,EACZxK,KAAK8hB,UAAYxgB,CAAA,CAMrB,IAAA6hB,CAAK74B,GACD0V,KAAKkiB,gBAAgB53B,GACrB0V,KAAKwK,KAAOlgB,EACZ0V,KAAK+Y,OACD/Y,KAAKkjB,mBACLljB,KAAKkjB,mBAAkB,CAS/B,GAAAzyB,GAII,OAAOuP,KAAKvR,OAAA,CAKhB,WAAA20B,GACI,OAAOpjB,KAAKwK,IAAA,CAShB,WAAA/Y,GAEI,OAAOuO,KAAKgiB,iBAEJhN,GAAkBliB,WAAWkN,KAAKvR,SAC9BqE,WAAWkN,KAAKwK,MAAOxK,KAAK8hB,WAClC,CAAA,CAcV,KAAAp3B,CAAM24B,GAEK,OADPrjB,KAAK+Y,OACE,IAAIwB,SAASC,IAChBxa,KAAKyiB,aAAc,EACdziB,KAAAhU,UAAYq3B,EAAe7I,GAC5Bxa,KAAKiiB,OAAOqB,gBACPtjB,KAAAiiB,OAAOqB,eAAe7B,QAAO,IAEvCxF,MAAK,KACAjc,KAAKiiB,OAAOsB,mBACPvjB,KAAAiiB,OAAOsB,kBAAkB9B,SAElCzhB,KAAKwjB,gBAAe,GACvB,CAOL,IAAAzK,GACQ/Y,KAAKhU,YACLgU,KAAKhU,UAAU+sB,OACX/Y,KAAKiiB,OAAOwB,iBACPzjB,KAAAiiB,OAAOwB,gBAAgBhC,UAGpCzhB,KAAKwjB,gBAAe,CAOxB,WAAAE,GACW,QAAE1jB,KAAKhU,SAAA,CAElB,cAAAw3B,UACWxjB,KAAKhU,SAAA,CAWhB,OAAA23B,GACI3jB,KAAK8iB,iBACL9iB,KAAK+Y,OACD/Y,KAAKkjB,mBACLljB,KAAKkjB,mBACT,EAGR,SAASU,GAAYxlB,EAAMxG,GAChB,OAAA,IAAIgqB,GAAYxjB,EAAMxG,EACjC,CC3UA,MAAMisB,GAAiBv5B,GAAOgI,GAASA,EAAKrB,KAAK3G,GCK3Cw5B,GAAsB,CAAClxB,EAAQkB,GAAID,EAASD,EAASI,GAAID,GCLlD,CACT9C,KAAO3G,GAAY,SAANA,EACbuI,MAAQvI,GAAMA,IDOZy5B,GAA0Bz5B,GAAMw5B,GAAoBxT,KAAKuT,GAAcv5B,IEJvE05B,GAAa,IAAIF,GAAqBnU,GAAOoC,ICKnD,SAASkS,GAAeh2B,EAAevB,EAAKgD,GACpCzB,EAAci2B,SAASx3B,GACvBuB,EAAck2B,SAASz3B,GAAKkE,IAAIlB,GAGhCzB,EAAcm2B,SAAS13B,EAAKk3B,GAAYl0B,GAEhD,CAgFA,SAAS20B,GAAwB33B,EAAKgT,GAClC,IAAKA,EACD,OAEJ,OADwBA,EAAWhT,IAAQgT,EAAoB,SAAKA,GAC7CkQ,IAC3B,CC3FA,SAAS0U,IAAqBC,cAAEA,EAAeC,eAAAA,GAAkB93B,GAC7D,MAAM+3B,EAAcF,EAAcp6B,eAAeuC,KAAgC,IAAxB83B,EAAe93B,GAEjE,OADP83B,EAAe93B,IAAO,EACf+3B,CACX,CACA,SAASC,GAAoBh1B,EAAOqJ,GAC1B,MAAAtK,EAAUiB,EAAMe,MAClB,IAAAlG,MAAMC,QAAQuO,GAOd,OAAOtK,IAAYsK,EANnB,IAAA,IAASL,EAAI,EAAGA,EAAIK,EAAO/G,OAAQ0G,IAC3B,GAAAK,EAAOL,KAAOjK,EACP,OAAA,CAMvB,CACA,SAASk2B,GAAc12B,EAAe+P,GAAcwb,MAAAA,EAAQ,EAAAoL,mBAAGA,EAAoBtyB,KAAAA,GAAS,IACpF,IAAAoN,WAAEA,EAAazR,EAAckwB,qCAAwB1e,KAAkB1G,GAAW9K,EAAc42B,qBAAqB7mB,GACnH,MAAA8mB,EAAa72B,EAAck2B,SAAS,cACtCS,IACallB,EAAAklB,GACjB,MAAMG,EAAa,GACbC,EAAqB1yB,GACvBrE,EAAcgB,gBACdhB,EAAcgB,eAAeg2B,WAAW3yB,GAC5C,IAAA,MAAW5F,KAAOqM,EAAQ,CAChB,MAAArJ,EAAQzB,EAAck2B,SAASz3B,GAC/BiT,EAAc5G,EAAOrM,GACvB,IAACgD,QACe,IAAhBiQ,GACCqlB,GACGV,GAAqBU,EAAoBt4B,GAC7C,SAEJ,MAAMozB,EAAkB,CACpBtG,MAAAA,EACA+B,QAAS,KACNoE,GAAmBjgB,GAAc,CAAE,EAAEhT,IAM5C,GAAIoC,OAAOo2B,wBAAyB,CAChC,MAAMC,EAAWl3B,EAAc2X,WAAW9b,GAC1C,GAAIq7B,EAAU,CACV,MAAM5J,EAAUzsB,OAAOo2B,wBAAwBC,EAAUz4B,EAAKgD,EAAOmR,IACrD,OAAZ0a,IACAuE,EAAgBvE,QAAUA,EAC1BuE,EAAgBiB,WAAY,EAEhD,CACA,CACQ,IAAIqE,GAAWtF,EAAgBiB,YAC1B2D,GAAoBh1B,EAAOiQ,GAa5B,GAZyB,WAAzBmgB,EAAgBxtB,OACf5C,EAAM+B,eAAiBquB,EAAgBlV,YAC9Bwa,GAAA,GAOV11B,EAAM1D,YACIo5B,GAAA,GAEVA,EACA,SACJ11B,EAAMhF,MAAMm1B,GAAmBnzB,EAAKgD,EAAOiQ,EAAa1R,EAAco3B,oBAAsBj0B,EAAeT,IAAIjE,GACzG,CAAE4F,MAAM,GACRwtB,IACN,MAAM9zB,EAAY0D,EAAM1D,UACpBk1B,GAAwB4D,KACxBA,EAAW3kB,IAAIzT,GACfV,EAAUiwB,MAAK,IAAM6I,EAAWxkB,OAAO5T,MAE3Cq4B,EAAW1kB,KAAKrU,EACxB,CAMW+4B,OALHtlB,GACA8a,QAAQ/S,IAAIud,GAAY9I,MAAK,KACRxc,GD3E7B,SAAmBxR,EAAe+P,GACxB,MAAAwB,EAAWkL,GAAezc,EAAe+P,GAC/C,IAAIyB,cAAEA,EAAgB,CAAA,EAAIC,WAAAA,EAAa,CAAE,KAAK3G,GAAWyG,EAAWvR,EAAc42B,qBAAqBrlB,GAAU,GAAS,CAAE,EAC5HzG,EAAS,IAAKA,KAAW0G,GACzB,IAAA,MAAW/S,KAAOqM,EAECkrB,GAAAh2B,EAAevB,GvFtBApC,EuFqBayO,EAAOrM,GvFnB/C2R,GAAkB/T,GAAKA,EAAEA,EAAE0H,OAAS,IAAM,EAAI1H,IAFpB,IAACA,CuFwBtC,CCmE6Bg7B,CAAUr3B,EAAewR,EAAa,IAGxDslB,CACX,CCjGA,SAASQ,GAAet3B,EAAeu3B,EAAS5tB,EAAU,CAAA,GACtD,MAAM4H,EAAWkL,GAAezc,EAAeu3B,EAAS5tB,EAAQxH,QAC5D,IAAAsP,WAAEA,EAAazR,EAAckwB,wBAA0B,CAAE,GAAK3e,GAAY,CAAE,EAC5E5H,EAAQgtB,qBACRllB,EAAa9H,EAAQgtB,oBAMzB,MAAMa,EAAejmB,EACf,IAAM+a,QAAQ/S,IAAImd,GAAc12B,EAAeuR,EAAU5H,IACzD,IAAM2iB,QAAQC,UAKdkL,EAAqBz3B,EAAc03B,iBAAmB13B,EAAc03B,gBAAgBxwB,KACpF,CAACywB,EAAe,KACd,MAAMnF,cAAEA,EAAgB,EAAGC,gBAAAA,EAAAC,iBAAiBA,GAAsBjhB,EAClE,OAkBZ,SAAyBzR,EAAeu3B,EAAS/E,EAAgB,EAAGC,EAAkB,EAAGC,EAAmB,EAAG/oB,GAC3G,MAAMmtB,EAAa,GACbc,GAAsB53B,EAAc03B,gBAAgBxwB,KAAO,GAAKurB,EAChEoF,EAA+C,IAArBnF,EAC1B,CAACjoB,EAAI,IAAMA,EAAIgoB,EACf,CAAChoB,EAAI,IAAMmtB,EAAqBntB,EAAIgoB,EAUnC,OATDn2B,MAAAqlB,KAAK3hB,EAAc03B,iBACpBI,KAAKC,IACLzmB,SAAQ,CAACyG,EAAOtN,KACXsN,EAAAyb,OAAO,iBAAkB+D,GAC/BT,EAAW1kB,KAAKklB,GAAevf,EAAOwf,EAAS,IACxC5tB,EACH4hB,MAAOiH,EAAgBqF,EAAwBptB,KAChDujB,MAAK,IAAMjW,EAAMyb,OAAO,oBAAqB+D,KAAS,IAEtDjL,QAAQ/S,IAAIud,EACvB,CAlCmBkB,CAAgBh4B,EAAeu3B,EAAS/E,EAAgBmF,EAAclF,EAAiBC,EAAkB/oB,EAAO,EAEzH,IAAM2iB,QAAQC,WAKd+F,KAAEA,GAAS7gB,EACjB,GAAI6gB,EAAM,CACN,MAAO2F,EAAOC,GAAiB,mBAAT5F,EAChB,CAACkF,EAAcC,GACf,CAACA,EAAoBD,GAC3B,OAAOS,IAAQjK,MAAK,IAAMkK,KAClC,CAEe,OAAA5L,QAAQ/S,IAAI,CAACie,IAAgBC,EAAmB9tB,EAAQ4hB,QAEvE,CAkBA,SAASwM,GAAgBzhB,EAAGC,GACjB,OAAAD,EAAE6hB,iBAAiB5hB,EAC9B,CCpDA,MAAM6hB,GAAuB,IAAI17B,GAAsBipB,UACjD0S,GAAoB37B,EAAqBqH,OAC/C,SAASu0B,GAAYt4B,GACjB,OAAQ82B,GAAexK,QAAQ/S,IAAIud,EAAW1Y,KAAI,EAAGrgB,YAAW4L,aCPpE,SAA8B3J,EAAe+P,EAAYpG,EAAU,CAAA,GAE3D,IAAA5L,EACA,GAFUiC,EAAAwzB,OAAO,iBAAkBzjB,GAEnCzT,MAAMC,QAAQwT,GAAa,CACrB+mB,MAAAA,EAAa/mB,EAAWqO,KAAKmZ,GAAYD,GAAet3B,EAAeu3B,EAAS5tB,KAC1E5L,EAAAuuB,QAAQ/S,IAAIud,EAChC,MAAA,GACmC,iBAAf/mB,EACAhS,EAAAu5B,GAAet3B,EAAe+P,EAAYpG,OAErD,CACK,MAAA4uB,EAA2C,mBAAfxoB,EAC5B0M,GAAezc,EAAe+P,EAAYpG,EAAQxH,QAClD4N,EACNhS,EAAYuuB,QAAQ/S,IAAImd,GAAc12B,EAAeu4B,EAAoB5uB,GACjF,CACI,OAAO5L,EAAUiwB,MAAK,IAAMhuB,EAAcwzB,OAAO,oBAAqBzjB,IAC1E,CDVkFyoB,CAAqBx4B,EAAejC,EAAW4L,KACjI,CACA,SAAS8uB,GAAqBz4B,GACtB,IAAAlD,EAAUw7B,GAAYt4B,GAC1B,MAAMyJ,EA6RC,CACH3M,QAAS47B,IAAgB,GACzBC,YAAaD,KACb9gB,WAAY8gB,KACZ3sB,SAAU2sB,KACVE,UAAWF,KACXG,WAAYH,KACZ16B,KAAM06B,MAnSV,IAAII,GAAkB,EAKhB,MAAAC,EAA0B,CAACtlB,EAAK1D,KAC5B,MAAAwB,EAAWkL,GAAezc,EAAe+P,GAC/C,GAAIwB,EAAU,CACV,MAAME,WAAEA,EAAAD,cAAYA,KAAkB1G,GAAWyG,EACjDkC,EAAM,IAAKA,KAAQ3I,KAAW0G,EAC1C,CACe,OAAAiC,CAAA,EAmBF,SAAAxS,EAAe0I,EAASqvB,GACvB,MAAAn8B,EAAQmD,EAAc2X,WACtBra,EAAU0C,EAAci5B,mBAAkB,IAAS,CAAE,EAKrDnC,EAAa,GAKboC,MAAkB91B,IAMxB,IAAI+1B,EAAkB,CAAE,EAKpBC,EAAsBnO,IAO1B,IAAA,IAASxgB,EAAI,EAAGA,EAAI4tB,GAAmB5tB,IAAK,CAClC,MAAApG,EAAO+zB,GAAqB3tB,GAC5B4uB,EAAY5vB,EAAMpF,GAClBzG,OAAuB,IAAhBf,EAAMwH,GAAsBxH,EAAMwH,GAAQ/G,EAAQ+G,GACzDi1B,EAAgBl9B,EAAewB,GAK/B27B,EAAcl1B,IAAS20B,EAAoBK,EAAU7hB,SAAW,MAClD,IAAhB+hB,IACsBH,EAAA3uB,GAOtB,IAAA+uB,EAAc57B,IAASN,EAAQ+G,IAASzG,IAASf,EAAMwH,IAASi1B,EAepE,GAXIE,GACAV,GACA94B,EAAcy5B,yBACAD,GAAA,GAMRH,EAAA/C,cAAgB,IAAK6C,IAI7BE,EAAU7hB,UAA4B,OAAhB+hB,IAElB37B,IAASy7B,EAAUK,UAErBl9B,EAAoBoB,IACJ,kBAATA,EACP,SAQJ,IAAI+7B,EADqBC,GAAuBP,EAAUK,SAAU97B,IAG/DyG,IAAS20B,GACNK,EAAU7hB,WACTgiB,GACDF,GAEH7uB,EAAI2uB,GAAuBE,EAC5BO,GAAuB,EAK3B,MAAMC,EAAiBx9B,MAAMC,QAAQqB,GAAQA,EAAO,CAACA,GAKrD,IAAIm8B,EAAiBD,EAAetmB,OAAOulB,EAAyB,CAAA,IAChD,IAAhBQ,IACAQ,EAAiB,CAAE,GAUvB,MAAMC,mBAAEA,EAAqB,CAAE,GAAKX,EAC9BY,EAAU,IACTD,KACAD,GAEDG,EAAiBz7B,IACCk7B,GAAA,EAChBT,EAAYx2B,IAAIjE,KACOo7B,GAAA,EACvBX,EAAY1mB,OAAO/T,IAEb46B,EAAA9C,eAAe93B,IAAO,CAAA,EAEpC,IAAA,MAAWA,KAAOw7B,EAAS,CACjB,MAAA3d,EAAOyd,EAAet7B,GACtB8d,EAAOyd,EAAmBv7B,GAE5B,GAAA06B,EAAgBj9B,eAAeuC,GAC/B,SAIJ,IAAI07B,GAAkB,EAEAA,EADlB/pB,GAAkBkM,IAASlM,GAAkBmM,IAC1BF,GAAeC,EAAMC,GAGtBD,IAASC,EAE3B4d,OACa,IAAT7d,EAEA4d,EAAcz7B,GAIdy6B,EAAYhnB,IAAIzT,QAGN,IAAT6d,GAAsB4c,EAAYx2B,IAAIjE,GAK3Cy7B,EAAcz7B,GAOJ46B,EAAA/C,cAAc73B,IAAO,CAEnD,CAKY46B,EAAUK,SAAW97B,EACrBy7B,EAAUW,mBAAqBD,EAI3BV,EAAU7hB,WACV2hB,EAAkB,IAAKA,KAAoBY,IAE3CjB,GAAmB94B,EAAcS,wBACbk5B,GAAA,IAKpBA,GAAuBH,IAAeK,GACtC/C,EAAW1kB,QAAQ0nB,EAAe1b,KAAKrgB,IAAe,CAClDA,YACA4L,QAAS,CAAEtF,UAASsF,OAGxC,CAMQ,GAAIuvB,EAAYhyB,KAAM,CAClB,MAAMkzB,EAAoB,CAAE,EAChBlB,EAAA5nB,SAAS7S,IACX,MAAA47B,EAAiBr6B,EAAcs6B,cAAc77B,QAC5B,IAAnB47B,IACAD,EAAkB37B,GAAO47B,EAC7C,IAEYvD,EAAW1kB,KAAK,CAAErU,UAAWq8B,GACzC,CACY,IAAAG,EAAgBr9B,QAAQ45B,EAAW/yB,QAOvC,OANI+0B,IACmB,IAAlBj8B,EAAMQ,SAAqBR,EAAMQ,UAAYR,EAAMC,SACnDkD,EAAcy5B,yBACCc,GAAA,GAEFzB,GAAA,EACXyB,EAAgBz9B,EAAQg6B,GAAcxK,QAAQC,SAC7D,CAkBW,MAAA,CACHtrB,iBACA4W,UAhBK,SAAUxT,EAAMmT,EAAU7N,GAC3B,IAAA0C,EAEA,GAAA5C,EAAMpF,GAAMmT,WAAaA,EACzB,OAAO8U,QAAQC,UAEsB,QAAxClgB,EAAKrM,EAAc03B,uBAAoC,IAAPrrB,GAAyBA,EAAGiF,SAASyG,IAAgB1L,IAAAA,EAAYA,OAA+B,QAA/BA,EAAK0L,EAAM/W,sBAAmC,IAAPqL,OAAgB,EAASA,EAAGwL,UAAUxT,EAAMmT,EAAQ,IACvM/N,EAAApF,GAAMmT,SAAWA,EACjBsf,MAAAA,EAAa71B,EAAe0I,EAAStF,GAC3C,IAAA,MAAW5F,KAAOgL,EACRA,EAAAhL,GAAK63B,cAAgB,CAAE,EAE1BQ,OAAAA,CACf,EAIQ0D,mBArPJ,SAA4BC,GACxB39B,EAAU29B,EAAaz6B,EAC/B,EAoPQg3B,SAAU,IAAMvtB,EAExB,CACA,SAASmwB,GAAuBrd,EAAMD,GAC9B,MAAgB,iBAATA,EACAA,IAASC,IAEXjgB,MAAMC,QAAQ+f,KACXD,GAAeC,EAAMC,EAGrC,CACA,SAASmc,GAAgBlhB,GAAW,GACzB,MAAA,CACHA,WACA8e,cAAe,CAAE,EACjBC,eAAgB,CAAE,EAClByD,mBAAoB,CAAE,EAE9B,CExSA,IAAIh4B,GAAK,ECCT,MAAM80B,GAAa,CACf/4B,UAAW,CACPqZ,QCDR,cAA+BA,GAM3B,WAAAtF,CAAYuF,GACRoC,MAAMpC,GACNA,EAAKrW,iBAAmBqW,EAAKrW,eAAiBy3B,GAAqBphB,GAC3E,CACI,mCAAAqjB,GACI,MAAM59B,QAAEA,GAAYiV,KAAKsF,KAAKM,WAC9B5F,KAAKlQ,UACDrF,EAAoBM,KACpBiV,KAAKlQ,QAAU/E,EAAQ69B,UAAU5oB,KAAKsF,MAElD,CAII,KAAAzV,GACImQ,KAAK2oB,qCACb,CACI,MAAA/5B,GACI,MAAM7D,QAAEA,GAAYiV,KAAKsF,KAAKM,YACtB7a,QAAS89B,GAAgB7oB,KAAKsF,KAAK7H,WAAa,CAAE,EACtD1S,IAAY89B,GACZ7oB,KAAK2oB,qCAEjB,CACI,OAAA74B,GAAU,ID3BV7D,KAAM,CACFoZ,QDLR,cAAmCA,GAC/B,WAAAtF,GACI2H,SAASC,WACT3H,KAAK/P,GAAKA,IAClB,CACI,MAAArB,GACQ,IAACoR,KAAKsF,KAAKlX,gBACX,OACJ,MAAQ06B,UAAAA,EAAAA,eAAWC,SAAgB34B,GAAW4P,KAAKsF,KAAKlX,iBAChD06B,UAAWE,GAAkBhpB,KAAKsF,KAAK2jB,qBAAuB,CAAE,EACxE,IAAKjpB,KAAKsF,KAAKrW,gBAAkB65B,IAAcE,EAC3C,OAEE,MAAAE,EAAgBlpB,KAAKsF,KAAKrW,eAAe6W,UAAU,QAASgjB,EAAW,CAAE14B,OAAQA,QAAuCA,EAAS4P,KAAKsF,KAAKM,WAAWxV,SACxJ24B,IAAmBD,GACnBI,EAAcjN,MAAK,IAAM8M,EAAe/oB,KAAK/P,KAEzD,CACI,KAAAJ,GACI,MAAMs5B,SAAEA,GAAanpB,KAAKsF,KAAKlX,iBAAmB,CAAE,EAChD+6B,IACKnpB,KAAAlQ,QAAUq5B,EAASnpB,KAAK/P,IAEzC,CACI,OAAAH,GAAU,KG3BR8G,GAAW,CAAC2N,EAAGC,IAAM7R,KAAK0a,IAAI9I,EAAIC,GCWxC,MAAM4kB,GACF,WAAArpB,CAAY8D,EAAOwlB,GAAUxgC,mBAAEA,EAAAygC,cAAoBA,mBAAeC,GAAmB,GAAU,IAgEvF,GA5DJvpB,KAAK6I,WAAa,KAIlB7I,KAAKwpB,cAAgB,KAIrBxpB,KAAKypB,kBAAoB,KAIzBzpB,KAAKqpB,SAAW,CAAE,EAIlBrpB,KAAKspB,cAAgBx6B,OACrBkR,KAAK0pB,YAAc,KACX,IAAE1pB,KAAKwpB,gBAAiBxpB,KAAKypB,kBAC7B,OACJ,MAAM9jB,EAAOgkB,GAAW3pB,KAAKypB,kBAAmBzpB,KAAK4pB,SAC/CC,EAAmC,OAApB7pB,KAAK6I,WAIpBihB,EDxClB,SAAoBvlB,EAAGC,GAEnB,MAAMulB,EAASnzB,GAAS2N,EAAE5S,EAAG6S,EAAE7S,GACzBq4B,EAASpzB,GAAS2N,EAAE3S,EAAG4S,EAAE5S,GAC/B,OAAOe,KAAKwd,KAAK4Z,GAAU,EAAIC,GAAU,EAC7C,CCmC4CC,CAAWtkB,EAAKlL,OAAQ,CAAE9I,EAAG,EAAGC,EAAG,KAAQ,EACvE,IAACi4B,IAAiBC,EAClB,OACE,MAAE3lB,MAAAA,GAAUwB,GACVpE,UAAAA,GAAcP,GACtBhB,KAAK4pB,QAAQvpB,KAAK,IAAK8D,EAAO5C,UAAAA,IAC9B,MAAM2oB,QAAEA,EAAAC,OAASA,GAAWnqB,KAAKqpB,SAC5BQ,IACUK,GAAAA,EAAQlqB,KAAKwpB,cAAe7jB,GACvC3F,KAAK6I,WAAa7I,KAAKwpB,eAEjBW,GAAAA,EAAOnqB,KAAKwpB,cAAe7jB,EAAI,EAExC3F,KAAAoqB,kBAAoB,CAACvmB,EAAO8B,KAC7B3F,KAAKwpB,cAAgB3lB,EACrB7D,KAAKypB,kBAAoBY,GAAe1kB,EAAM3F,KAAKnX,oBAE7CgY,GAAAjS,OAAOoR,KAAK0pB,aAAa,EAAI,EAElC1pB,KAAAsqB,gBAAkB,CAACzmB,EAAO8B,KAC3B3F,KAAKuqB,MACL,MAAMC,MAAEA,EAAAC,aAAOA,EAAcC,gBAAAA,GAAoB1qB,KAAKqpB,SAGlD,GAFArpB,KAAKupB,kBACLmB,GAAmBA,KACjB1qB,KAAKwpB,gBAAiBxpB,KAAKypB,kBAC7B,OACJ,MAAMkB,EAAUhB,GAA0B,kBAAf9lB,EAAMvR,KAC3B0N,KAAKypB,kBACLY,GAAe1kB,EAAM3F,KAAKnX,oBAAqBmX,KAAK4pB,SACtD5pB,KAAK6I,YAAc2hB,GACnBA,EAAM3mB,EAAO8mB,GAEDF,GAAAA,EAAa5mB,EAAO8mB,EAAO,GAG1C/mB,GAAiBC,GAClB,OACJ7D,KAAKupB,iBAAmBA,EACxBvpB,KAAKqpB,SAAWA,EAChBrpB,KAAKnX,mBAAqBA,EAC1BmX,KAAKspB,cAAgBA,GAAiBx6B,OAChC,MACA87B,EAAcP,GADPpmB,GAAiBJ,GACW7D,KAAKnX,qBACxCsb,MAAEA,GAAUymB,GACZrpB,UAAEA,GAAcP,GACtBhB,KAAK4pB,QAAU,CAAC,IAAKzlB,EAAO5C,cACtB,MAAAspB,eAAEA,GAAmBxB,EAC3BwB,GACIA,EAAehnB,EAAO8lB,GAAWiB,EAAa5qB,KAAK4pB,UAClD5pB,KAAA8qB,gBAAkBrmB,GAAKL,GAAgBpE,KAAKspB,cAAe,cAAetpB,KAAKoqB,mBAAoBhmB,GAAgBpE,KAAKspB,cAAe,YAAatpB,KAAKsqB,iBAAkBlmB,GAAgBpE,KAAKspB,cAAe,gBAAiBtpB,KAAKsqB,iBAClP,CACI,cAAAS,CAAe1B,GACXrpB,KAAKqpB,SAAWA,CACxB,CACI,GAAAkB,GACSvqB,KAAA8qB,iBAAmB9qB,KAAK8qB,kBAC7B/pB,GAAYf,KAAK0pB,YACzB,EAEA,SAASW,GAAe1kB,EAAM9c,GAC1B,OAAOA,EAAqB,CAAEsb,MAAOtb,EAAmB8c,EAAKxB,QAAWwB,CAC5E,CACA,SAASqlB,GAAczmB,EAAGC,GACf,MAAA,CAAE7S,EAAG4S,EAAE5S,EAAI6S,EAAE7S,EAAGC,EAAG2S,EAAE3S,EAAI4S,EAAE5S,EACtC,CACA,SAAS+3B,IAAWxlB,MAAEA,GAASylB,GACpB,MAAA,CACHzlB,QACA7C,MAAO0pB,GAAc7mB,EAAO8mB,GAAgBrB,IAC5CnvB,OAAQuwB,GAAc7mB,EAAO+mB,GAAiBtB,IAC9Chf,SAAUnZ,GAAYm4B,EAAS,IAEvC,CACA,SAASsB,GAAiBtB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASqB,GAAgBrB,GACd,OAAAA,EAAQA,EAAQ53B,OAAS,EACpC,CACA,SAASP,GAAYm4B,EAAS9H,GACtB,GAAA8H,EAAQ53B,OAAS,EACjB,MAAO,CAAEL,EAAG,EAAGC,EAAG,GAElB,IAAA8G,EAAIkxB,EAAQ53B,OAAS,EACrBm5B,EAAmB,KACjB,MAAAC,EAAYH,GAAgBrB,GAClC,KAAOlxB,GAAK,IACRyyB,EAAmBvB,EAAQlxB,KACvB0yB,EAAU7pB,UAAY4pB,EAAiB5pB,UACvCuJ,GAAsBgX,MAG1BppB,IAEJ,IAAKyyB,EACD,MAAO,CAAEx5B,EAAG,EAAGC,EAAG,GAEtB,MAAMuqB,EAAOnR,GAAsBogB,EAAU7pB,UAAY4pB,EAAiB5pB,WAC1E,GAAa,IAAT4a,EACA,MAAO,CAAExqB,EAAG,EAAGC,EAAG,GAEtB,MAAMsM,EAAkB,CACpBvM,GAAIy5B,EAAUz5B,EAAIw5B,EAAiBx5B,GAAKwqB,EACxCvqB,GAAIw5B,EAAUx5B,EAAIu5B,EAAiBv5B,GAAKuqB,GAQrC,OANHje,EAAgBvM,IAAMunB,MACtBhb,EAAgBvM,EAAI,GAEpBuM,EAAgBtM,IAAMsnB,MACtBhb,EAAgBtM,EAAI,GAEjBsM,CACX,CCvJA,SAASmtB,GAAWC,GACT,OAAAA,EAAK54B,IAAM44B,EAAK74B,GAC3B,CACA,SAAS84B,GAAO77B,EAAOqJ,EAAS,EAAGyyB,EAAc,KAC7C,OAAO74B,KAAK0a,IAAI3d,EAAQqJ,IAAWyyB,CACvC,CACA,SAASC,GAAcnqB,EAAOtI,EAAQD,EAAQyB,EAAS,IACnD8G,EAAM9G,OAASA,EACf8G,EAAMoqB,YAAcltB,GAAIxF,EAAOvG,IAAKuG,EAAOtG,IAAK4O,EAAM9G,QACtD8G,EAAMtO,MAAQq4B,GAAWtyB,GAAUsyB,GAAWryB,IAC1CuyB,GAAOjqB,EAAMtO,MAAO,EAAG,OAAWif,MAAM3Q,EAAMtO,UAC9CsO,EAAMtO,MAAQ,GACZsO,EAAAqqB,UACFntB,GAAIzF,EAAOtG,IAAKsG,EAAOrG,IAAK4O,EAAM9G,QAAU8G,EAAMoqB,aAClDH,GAAOjqB,EAAMqqB,YAAc1Z,MAAM3Q,EAAMqqB,cACvCrqB,EAAMqqB,UAAY,EAC1B,CACA,SAASC,GAAatqB,EAAOtI,EAAQD,EAAQyB,GAC3BixB,GAAAnqB,EAAM3P,EAAGqH,EAAOrH,EAAGoH,EAAOpH,EAAG6I,EAASA,EAAOtD,aAAU,GACvDu0B,GAAAnqB,EAAM1P,EAAGoH,EAAOpH,EAAGmH,EAAOnH,EAAG4I,EAASA,EAAOrD,aAAU,EACzE,CACA,SAAS00B,GAAiB9yB,EAAQ+yB,EAAU59B,GACjC6K,EAAAtG,IAAMvE,EAAOuE,IAAMq5B,EAASr5B,IACnCsG,EAAOrG,IAAMqG,EAAOtG,IAAM44B,GAAWS,EACzC,CAKA,SAASC,GAAyBhzB,EAAQvM,EAAQ0B,GACvC6K,EAAAtG,IAAMjG,EAAOiG,IAAMvE,EAAOuE,IACjCsG,EAAOrG,IAAMqG,EAAOtG,IAAM44B,GAAW7+B,EACzC,CACA,SAASw/B,GAAqBjzB,EAAQvM,EAAQ0B,GAC1C69B,GAAyBhzB,EAAOpH,EAAGnF,EAAOmF,EAAGzD,EAAOyD,GACpDo6B,GAAyBhzB,EAAOnH,EAAGpF,EAAOoF,EAAG1D,EAAO0D,EACxD,CCZA,SAASq6B,GAA4BX,EAAM74B,EAAKC,GACrC,MAAA,CACHD,SAAa,IAARA,EAAoB64B,EAAK74B,IAAMA,OAAM,EAC1CC,SAAa,IAARA,EACC44B,EAAK54B,IAAMA,GAAO44B,EAAK54B,IAAM44B,EAAK74B,UAClC,EAEd,CAcA,SAASy5B,GAA4BC,EAAYC,GACzC,IAAA35B,EAAM25B,EAAgB35B,IAAM05B,EAAW15B,IACvCC,EAAM05B,EAAgB15B,IAAMy5B,EAAWz5B,IAOpC,OAJH05B,EAAgB15B,IAAM05B,EAAgB35B,IACtC05B,EAAWz5B,IAAMy5B,EAAW15B,OAC3BA,EAAKC,GAAO,CAACA,EAAKD,IAEhB,CAAEA,MAAKC,MAClB,CAuCA,MAAM25B,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GACxC,MAAA,CACHh6B,IAAKi6B,GAAoBH,EAAaC,GACtC95B,IAAKg6B,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,iBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC1HA,SAASC,GAAS1qB,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAAS2qB,IAAwBz3B,IAAEA,EAAAG,KAAKA,EAAMF,MAAAA,EAAAC,OAAOA,IAC1C,MAAA,CACH3D,EAAG,CAAEc,IAAK8C,EAAM7C,IAAK2C,GACrBzD,EAAG,CAAEa,IAAK2C,EAAK1C,IAAK4C,GAE5B,CCVA,SAASw3B,GAAgB95B,GACdA,YAAU,IAAVA,GAAiC,IAAVA,CAClC,CACA,SAAS+5B,IAAW/5B,MAAAA,EAAOsD,OAAAA,EAAAC,OAAQA,IACvB,OAACu2B,GAAgB95B,KACpB85B,GAAgBx2B,KAChBw2B,GAAgBv2B,EACzB,CACA,SAAS0B,GAAauE,GAClB,OAAQuwB,GAASvwB,IACbwwB,GAAexwB,IACfA,EAAO3K,GACP2K,EAAOtG,QACPsG,EAAOrG,SACPqG,EAAOpG,OACf,CACA,SAAS42B,GAAexwB,GACpB,OAAOywB,GAAczwB,EAAO7K,IAAMs7B,GAAczwB,EAAO5K,EAC3D,CACA,SAASq7B,GAAcv9B,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCfA,SAASw9B,GAAW/oB,EAAOnR,EAAO04B,GAG9B,OAAOA,EADQ14B,GADYmR,EAAQunB,EAGvC,CAIA,SAASyB,GAAgBhpB,EAAOwnB,EAAW34B,EAAO04B,EAAa0B,GAI3D,YAHiB,IAAbA,IACQjpB,EAAA+oB,GAAW/oB,EAAOipB,EAAU1B,IAEjCwB,GAAW/oB,EAAOnR,EAAO04B,GAAeC,CACnD,CAIA,SAAS0B,GAAe/B,EAAMK,EAAY,EAAG34B,EAAQ,EAAG04B,EAAa0B,GACjE9B,EAAK74B,IAAM06B,GAAgB7B,EAAK74B,IAAKk5B,EAAW34B,EAAO04B,EAAa0B,GACpE9B,EAAK54B,IAAMy6B,GAAgB7B,EAAK54B,IAAKi5B,EAAW34B,EAAO04B,EAAa0B,EACxE,CAIA,SAASE,GAAcC,GAAK57B,EAAEA,EAAAC,EAAGA,IAC7By7B,GAAeE,EAAI57B,EAAGA,EAAEg6B,UAAWh6B,EAAEqB,MAAOrB,EAAE+5B,aAC9C2B,GAAeE,EAAI37B,EAAGA,EAAE+5B,UAAW/5B,EAAEoB,MAAOpB,EAAE85B,YAClD,CAuDA,SAAS8B,GAAcx6B,GACf,OAAAy6B,OAAOC,UAAU16B,IAEdA,EAAQ,iBAAmBA,EAAQ,cAD/BA,EACwD,CACvE,CACA,SAAS26B,GAAcrC,EAAM10B,GACpB00B,EAAA74B,IAAM64B,EAAK74B,IAAMmE,EACjB00B,EAAA54B,IAAM44B,EAAK54B,IAAMkE,CAC1B,CAMA,SAASg3B,GAActC,EAAMuC,GAAanhC,EAAKohC,EAAUC,IACrD,MAAMC,OAAuC,IAA1BH,EAAWE,GAA2BF,EAAWE,GAAa,GAC3ErC,EAAcltB,GAAI8sB,EAAK74B,IAAK64B,EAAK54B,IAAKs7B,GAE7BX,GAAA/B,EAAMuC,EAAWnhC,GAAMmhC,EAAWC,GAAWpC,EAAamC,EAAW76B,MACxF,CAIA,MAAMi7B,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAI9B,SAASC,GAAaZ,EAAKh7B,GACTq7B,GAAAL,EAAI57B,EAAGY,EAAW07B,IAClBL,GAAAL,EAAI37B,EAAGW,EAAW27B,GACpC,CCpHA,SAASE,GAAmBx+B,EAAUy6B,GAClC,OAAOwC,GHeX,SAA4B1oB,EAAOkmB,GAC/B,IAAKA,EACM,OAAAlmB,EACL,MAAAkqB,EAAUhE,EAAe,CAAE14B,EAAGwS,EAAM5O,KAAM3D,EAAGuS,EAAM/O,MACnDk5B,EAAcjE,EAAe,CAAE14B,EAAGwS,EAAM9O,MAAOzD,EAAGuS,EAAM7O,SACvD,MAAA,CACHF,IAAKi5B,EAAQz8B,EACb2D,KAAM84B,EAAQ18B,EACd2D,OAAQg5B,EAAY18B,EACpByD,MAAOi5B,EAAY38B,EAE3B,CG1BmC48B,CAAmB3+B,EAASsT,wBAAyBmnB,GACxF,CCJA,MAAMmE,GAAmB,EAAG//B,aACjBA,EAAUA,EAAQggC,cAAcC,YAAc,KCiBnDC,OAA0BroB,QAKhC,MAAMsoB,GACF,WAAA7uB,CAAY9R,GAIR+R,KAAK6uB,eAAiB,KACtB7uB,KAAK8uB,YAAa,EAClB9uB,KAAK+uB,iBAAmB,KACxB/uB,KAAK0rB,YAAc,CAAE/5B,EAAG,EAAGC,EAAG,GAI9BoO,KAAKgvB,aAAc,EACnBhvB,KAAKivB,uBAAwB,EAI7BjvB,KAAKkvB,QC9BY,CACrBv9B,EAFsB,CAAEc,IAAK,EAAGC,IAAK,GAGrCd,EAHsB,CAAEa,IAAK,EAAGC,IAAK,IDgCjCsN,KAAK/R,cAAgBA,CAC7B,CACI,KAAAvD,CAAMykC,GAAaC,aAAEA,GAAe,GAAU,CAAA,GAIpC,MAAAhhC,gBAAEA,GAAoB4R,KAAK/R,cAC7B,GAAAG,IAAiD,IAA9BA,EAAgB06B,UACnC,OACE,MA4FAS,iBAAEA,GAAqBvpB,KAAK4F,WAC7B5F,KAAAqvB,WAAa,IAAIjG,GAAW+F,EAAa,CAC1CtE,eA9FoBhnB,IACpB,MAAQ0lB,iBAAAA,GAAqBvpB,KAAK4F,WAGlC2jB,EAAmBvpB,KAAKsvB,iBAAmBtvB,KAAKuvB,gBAC5CH,GACApvB,KAAKovB,aAAanrB,GAAiBJ,EAAO,QAAQM,MAClE,EAwFY+lB,QAtFY,CAACrmB,EAAO8B,KAEpB,MAAQzZ,KAAAA,EAAAA,gBAAMsjC,cAAiBC,GAAgBzvB,KAAK4F,WAChD1Z,GAAAA,IAASsjC,IACLxvB,KAAK6uB,gBACL7uB,KAAK6uB,iBACJ7uB,KAAA6uB,eAAiB7pB,GAAc9Y,IAE/B8T,KAAK6uB,gBACN,OAER7uB,KAAK8uB,YAAa,EAClB9uB,KAAK+uB,iBAAmB,KACxB/uB,KAAK0vB,qBACD1vB,KAAK/R,cAAc+O,aACdgD,KAAA/R,cAAc+O,WAAW2yB,oBAAqB,EAC9C3vB,KAAA/R,cAAc+O,WAAWjE,YAAS,GAK3C6zB,IAAUtB,IACN,IAAI78B,EAAUuR,KAAK4vB,mBAAmBtE,GAAM76B,OAAS,EAIjD,GAAAoD,EAAQ5C,KAAKxC,GAAU,CACjB,MAAAuO,WAAEA,GAAegD,KAAK/R,cACxB,GAAA+O,GAAcA,EAAWxQ,OAAQ,CACjC,MAAMqjC,EAAe7yB,EAAWxQ,OAAOsjC,UAAUxE,GACjD,GAAIuE,EAAc,CAEJphC,EADK48B,GAAWwE,IACN/8B,WAAWrE,GAAW,IACtE,CACA,CACA,CACqBuR,KAAA0rB,YAAYJ,GAAQ78B,CAAA,IAGzBghC,GACA5uB,GAAMjS,QAAO,IAAM6gC,EAAY5rB,EAAO8B,KAAO,GAAO,GAElD,MAAA1W,eAAEA,GAAmB+Q,KAAK/R,cACdgB,GAAAA,EAAe6W,UAAU,aAAa,EAAI,EA4C5DqkB,OA1CW,CAACtmB,EAAO8B,KAEnB,MAAM6pB,gBAAEA,EAAiBO,kBAAAA,EAAAC,gBAAmBA,SAAiBC,GAAYjwB,KAAK4F,WAE1E,IAAC4pB,IAAoBxvB,KAAK6uB,eAC1B,OACE,MAAAp0B,OAAEA,GAAWkL,EAEf,GAAAoqB,GAA+C,OAA1B/vB,KAAK+uB,iBAM1B,OALK/uB,KAAA+uB,iBAmWrB,SAA6Bt0B,EAAQy1B,EAAgB,IACjD,IAAI5S,EAAY,KACZ3qB,KAAK0a,IAAI5S,EAAO7I,GAAKs+B,EACT5S,EAAA,IAEP3qB,KAAK0a,IAAI5S,EAAO9I,GAAKu+B,IACd5S,EAAA,KAET,OAAAA,CACX,CA5WwC6S,CAAoB11B,QAEd,OAA1BuF,KAAK+uB,kBACciB,GAAAA,EAAgBhwB,KAAK+uB,mBAKhD/uB,KAAKowB,WAAW,IAAKzqB,EAAKxB,MAAO1J,GACjCuF,KAAKowB,WAAW,IAAKzqB,EAAKxB,MAAO1J,GAOjCuF,KAAK/R,cAAce,SAKTihC,GAAAA,EAAOpsB,EAAO8B,EAAI,EAa5B8kB,aAXiB,CAAC5mB,EAAO8B,IAAS3F,KAAK+Y,KAAKlV,EAAO8B,GAYnD+kB,gBAXoB,IAAMkC,IAAUtB,IAChC,IAAAhxB,EACJ,MAAwC,WAAjC0F,KAAKqwB,kBAAkB/E,KAC0B,QAAlDhxB,EAAK0F,KAAK4vB,mBAAmBtE,GAAMt/B,iBAA8B,IAAPsO,OAAgB,EAASA,EAAGyhB,OAAI,KASjG,CACClzB,mBAAoBmX,KAAK/R,cAAcqiC,wBACvC/G,mBACAD,cAAekF,GAAiBxuB,KAAK/R,gBAEjD,CACI,IAAA8qB,CAAKlV,EAAO8B,GACR,MAAMmpB,EAAa9uB,KAAK8uB,WAExB,GADA9uB,KAAKc,UACAguB,EACD,OACE,MAAAlkB,SAAEA,GAAajF,EACrB3F,KAAKqjB,eAAezY,GACpB,MAAM2lB,UAAEA,GAAcvwB,KAAK4F,WACvB2qB,GACA1vB,GAAMjS,QAAO,IAAM2hC,EAAU1sB,EAAO8B,IAEhD,CACI,MAAA7E,GACId,KAAK8uB,YAAa,EAClB,MAAM9xB,WAAEA,EAAA/N,eAAYA,GAAmB+Q,KAAK/R,cACxC+O,IACAA,EAAW2yB,oBAAqB,GAE/B3vB,KAAAqvB,YAAcrvB,KAAKqvB,WAAW9E,MACnCvqB,KAAKqvB,gBAAa,EAClB,MAAMG,gBAAEA,GAAoBxvB,KAAK4F,YAC5B4pB,GAAmBxvB,KAAK6uB,iBACzB7uB,KAAK6uB,iBACL7uB,KAAK6uB,eAAiB,MAER5/B,GAAAA,EAAe6W,UAAU,aAAa,EAChE,CACI,UAAAsqB,CAAW9E,EAAMkF,EAAQ/1B,GACrB,MAAQvO,KAAAA,GAAS8T,KAAK4F,WAEtB,IAAKnL,IAAWg2B,GAAWnF,EAAMp/B,EAAM8T,KAAK+uB,kBACxC,OACE,MAAA2B,EAAY1wB,KAAK4vB,mBAAmBtE,GAC1C,IAAI/gB,EAAOvK,KAAK0rB,YAAYJ,GAAQ7wB,EAAO6wB,GAEvCtrB,KAAKgvB,aAAehvB,KAAKgvB,YAAY1D,KAC9B/gB,EPtLnB,SAA0BpG,GAAO1R,IAAEA,EAAKC,IAAAA,GAAOw8B,GASpC,YARK,IAARz8B,GAAqB0R,EAAQ1R,EAErB0R,EAAA+qB,EAAU1wB,GAAI/L,EAAK0R,EAAO+qB,EAAQz8B,KAAOE,KAAKD,IAAIyR,EAAO1R,QAEpD,IAARC,GAAqByR,EAAQzR,IAE1ByR,EAAA+qB,EAAU1wB,GAAI9L,EAAKyR,EAAO+qB,EAAQx8B,KAAOC,KAAKF,IAAI0R,EAAOzR,IAE9DyR,CACX,CO4KmBwsB,CAAiBpmB,EAAMvK,KAAKgvB,YAAY1D,GAAOtrB,KAAKkvB,QAAQ5D,KAEvEoF,EAAU9/B,IAAI2Z,EACtB,CACI,kBAAAmlB,GACQ,IAAAp1B,EACJ,MAAMs2B,gBAAEA,EAAArE,YAAiBA,GAAgBvsB,KAAK4F,WACxCpZ,EAASwT,KAAK/R,cAAc+O,aAC7BgD,KAAK/R,cAAc+O,WAAWxQ,OAC7BwT,KAAK/R,cAAc+O,WAAW6zB,SAAQ,GACG,QAAxCv2B,EAAK0F,KAAK/R,cAAc+O,kBAA+B,IAAP1C,OAAgB,EAASA,EAAG9N,OAC7EskC,EAAkB9wB,KAAKgvB,YACzB4B,GAAmB7mC,EAAY6mC,GAC1B5wB,KAAKgvB,cACDhvB,KAAAgvB,YAAchvB,KAAK+wB,yBAKxB/wB,KAAKgvB,eADL4B,IAAmBpkC,IP5KnC,SAAiCsjC,GAAW16B,IAAEA,OAAKG,EAAMD,OAAAA,EAAAD,MAAQA,IACtD,MAAA,CACH1D,EAAGs6B,GAA4B6D,EAAUn+B,EAAG4D,EAAMF,GAClDzD,EAAGq6B,GAA4B6D,EAAUl+B,EAAGwD,EAAKE,GAEzD,COwKmC07B,CAAwBxkC,EAAOsjC,UAAWc,GAMhE5wB,KAAAkvB,QPrHb,SAA4B3C,EAAcF,IAO/B,OANa,IAAhBE,EACcA,EAAA,GAEO,IAAhBA,IACSA,EAAAF,IAEX,CACH16B,EAAG26B,GAAmBC,EAAa,OAAQ,SAC3C36B,EAAG06B,GAAmBC,EAAa,MAAO,UAElD,CO0GuB0E,CAAmB1E,GAK9BuE,IAAoB9wB,KAAKgvB,aACzBxiC,GACAwT,KAAKgvB,cACJhvB,KAAKivB,uBACNrC,IAAUtB,IACFtrB,KAAK4vB,mBAAmBtE,KACnBtrB,KAAAgvB,YAAY1D,GP9IrC,SAA+B9+B,EAAQwiC,GACnC,MAAMkC,EAAsB,CAAE,EAOvB,YANiB,IAApBlC,EAAYv8B,MACQy+B,EAAAz+B,IAAMu8B,EAAYv8B,IAAMjG,EAAOiG,UAE/B,IAApBu8B,EAAYt8B,MACQw+B,EAAAx+B,IAAMs8B,EAAYt8B,IAAMlG,EAAOiG,KAEhDy+B,CACX,COqI6CC,CAAsB3kC,EAAOsjC,UAAUxE,GAAOtrB,KAAKgvB,YAAY1D,IAC5G,GAGA,CACI,qBAAAyF,GACI,MAAQH,gBAAiB5B,EAAAoC,yBAAaA,GAA6BpxB,KAAK4F,WACxE,IAAKopB,IAAgBjlC,EAAYilC,GACtB,OAAA,EACX,MAAMqC,EAAqBrC,EAAYvgC,SAEjCuO,WAAEA,GAAegD,KAAK/R,cAExB,IAAC+O,IAAeA,EAAWxQ,OACpB,OAAA,EACL,MAAA8kC,EF7Od,SAAwBx0B,EAASy0B,EAAoB1oC,GAC3C,MAAA2oC,EAAcpD,GAAmBtxB,EAASjU,IAC1C4oC,OAAEA,GAAWF,EAKZ,OAJHE,IACA9D,GAAc6D,EAAY7/B,EAAG8/B,EAAOh3B,OAAO9I,GAC3Cg8B,GAAc6D,EAAY5/B,EAAG6/B,EAAOh3B,OAAO7I,IAExC4/B,CACX,CEqO+BE,CAAeL,EAAoBr0B,EAAW8J,KAAM9G,KAAK/R,cAAcqiC,yBAC9F,IAAIqB,EPvLZ,SAAiC7B,EAAWwB,GACjC,MAAA,CACH3/B,EAAGu6B,GAA4B4D,EAAUn+B,EAAG2/B,EAAe3/B,GAC3DC,EAAGs6B,GAA4B4D,EAAUl+B,EAAG0/B,EAAe1/B,GAEnE,COkLkCggC,CAAwB50B,EAAWxQ,OAAOsjC,UAAWwB,GAK/E,GAAIF,EAA0B,CAC1B,MAAMS,EAAkBT,EL/OpC,UAAiCz/B,EAAEA,EAAGC,EAAAA,IAClC,MAAO,CAAEwD,IAAKxD,EAAEa,IAAK4C,MAAO1D,EAAEe,IAAK4C,OAAQ1D,EAAEc,IAAK6C,KAAM5D,EAAEc,IAC9D,CK6O6Dq/B,CAAwBH,IACpE3xB,KAAAivB,wBAA0B4C,EAC3BA,IACAF,EAAsB9E,GAAwBgF,GAE9D,CACe,OAAAF,CACf,CACI,cAAAtO,CAAezY,GACL,MAAE1e,KAAAA,EAAAA,aAAM6lC,EAAcxF,YAAAA,EAAAyF,eAAaA,mBAAgBzI,EAAkB0I,oBAAAA,GAAyBjyB,KAAK4F,WACnGopB,EAAchvB,KAAKgvB,aAAe,CAAE,EACpCkD,EAAqBtF,IAAUtB,IACjC,IAAKmF,GAAWnF,EAAMp/B,EAAM8T,KAAK+uB,kBAC7B,OAEJ,IAAIrvB,EAAcsvB,GAAeA,EAAY1D,IAAU,CAAE,EACrD/B,IACA7pB,EAAa,CAAEjN,IAAK,EAAGC,IAAK,IAO1B,MAAAulB,EAAkBsU,EAAc,IAAM,IACtCvU,EAAgBuU,EAAc,GAAK,IACnC1U,EAAU,CACZvlB,KAAM,UACNsY,SAAUmnB,EAAennB,EAAS0gB,GAAQ,EAC1CrT,kBACAD,gBACAD,aAAc,IACdrB,UAAW,EACXC,UAAW,MACRqb,KACAtyB,GAKA,OAAAM,KAAKmyB,wBAAwB7G,EAAMzT,EAAO,IAGrD,OAAO0C,QAAQ/S,IAAI0qB,GAAoBjW,KAAKgW,EACpD,CACI,uBAAAE,CAAwB7G,EAAM5rB,GACpB,MAAAgxB,EAAY1wB,KAAK4vB,mBAAmBtE,GAC1C,OAAOoF,EAAUhmC,MAAMm1B,GAAmByL,EAAMoF,EAAW,EAAGhxB,GACtE,CACI,aAAA6vB,GACI3C,IAAUtB,GAAStrB,KAAK4vB,mBAAmBtE,GAAMvS,QACzD,CACI,cAAAuW,GACI1C,IAAUtB,IAAe,IAAAhxB,EAAY,OAAkD,QAAlDA,EAAK0F,KAAK4vB,mBAAmBtE,GAAMt/B,iBAA8B,IAAPsO,OAAgB,EAASA,EAAGgiB,OAAO,GAC1I,CACI,iBAAA+T,CAAkB/E,GACV,IAAAhxB,EACI,OAAkD,QAAlDA,EAAK0F,KAAK4vB,mBAAmBtE,GAAMt/B,iBAA8B,IAAPsO,OAAgB,EAASA,EAAG5C,KACtG,CAOI,kBAAAk4B,CAAmBtE,GACT,MAAA8G,EAAU,QAAU9G,EAAKztB,cACzB/S,EAAQkV,KAAK/R,cAAc2X,WAC3BysB,EAAsBvnC,EAAMsnC,GAClC,OAAOC,GAEDryB,KAAK/R,cAAck2B,SAASmH,GAAOxgC,EAAMQ,QAAUR,EAAMQ,QAAQggC,QAAQ,IAAc,EACrG,CACI,YAAA8D,CAAajrB,GACTyoB,IAAUtB,IACN,MAAQp/B,KAAAA,GAAS8T,KAAK4F,WAEtB,IAAK6qB,GAAWnF,EAAMp/B,EAAM8T,KAAK+uB,kBAC7B,OACE,MAAA/xB,WAAEA,GAAegD,KAAK/R,cACtByiC,EAAY1wB,KAAK4vB,mBAAmBtE,GACtC,GAAAtuB,GAAcA,EAAWxQ,OAAQ,CACjC,MAAMiG,IAAEA,EAAKC,IAAAA,GAAQsK,EAAWxQ,OAAOsjC,UAAUxE,GACvCoF,EAAA9/B,IAAIuT,EAAMmnB,GAAQ9sB,GAAI/L,EAAKC,EAAK,IAC1D,IAEA,CAMI,8BAAA4/B,GACQ,IAACtyB,KAAK/R,cAAcQ,QACpB,OACJ,MAAQvC,KAAAA,EAAAA,gBAAM0kC,GAAoB5wB,KAAK4F,YACjC5I,WAAEA,GAAegD,KAAK/R,cAC5B,IAAKlE,EAAY6mC,KAAqB5zB,IAAegD,KAAKgvB,YACtD,OAKJhvB,KAAKuvB,gBAKL,MAAMgD,EAAc,CAAE5gC,EAAG,EAAGC,EAAG,GAC/Bg7B,IAAUtB,IACA,MAAAoF,EAAY1wB,KAAK4vB,mBAAmBtE,GAC1C,GAAIoF,EAAW,CACL,MAAAt1B,EAASs1B,EAAUjgC,MACzB8hC,EAAYjH,GPpS5B,SAAoBtyB,EAAQD,GACxB,IAAIyB,EAAS,GACP,MAAAg4B,EAAenH,GAAWryB,GAC1By5B,EAAepH,GAAWtyB,GAOzB,OANH05B,EAAeD,EACfh4B,EAASsV,GAAS/W,EAAOtG,IAAKsG,EAAOrG,IAAM8/B,EAAcx5B,EAAOvG,KAE3D+/B,EAAeC,IACpBj4B,EAASsV,GAAS9W,EAAOvG,IAAKuG,EAAOtG,IAAM+/B,EAAc15B,EAAOtG,MAE7DD,EAAM,EAAG,EAAGgI,EACvB,COyRoCD,CAAW,CAAE9H,IAAK2I,EAAQ1I,IAAK0I,GAAU4E,KAAKgvB,YAAY1D,GAC9F,KAKQ,MAAMzzB,kBAAEA,GAAsBmI,KAAK/R,cAAc2X,WAC5C5F,KAAA/R,cAAcQ,QAAQqJ,MAAMvF,UAAYsF,EACvCA,EAAkB,CAAE,EAAE,IACtB,OACKmF,EAAA8J,MAAQ9J,EAAW8J,KAAK4rB,eACnC11B,EAAW21B,eACX3yB,KAAK0vB,qBAKL9C,IAAUtB,IACN,IAAKmF,GAAWnF,EAAMp/B,EAAM,MACxB,OAIE,MAAAwkC,EAAY1wB,KAAK4vB,mBAAmBtE,IACpC74B,IAAEA,EAAKC,IAAAA,GAAQsN,KAAKgvB,YAAY1D,GACtCoF,EAAU9/B,IAAI4N,GAAI/L,EAAKC,EAAK6/B,EAAYjH,IAAM,GAE1D,CACI,YAAAsH,GACQ,IAAC5yB,KAAK/R,cAAcQ,QACpB,OACgBkgC,GAAA/9B,IAAIoP,KAAK/R,cAAe+R,MACtC,MAIA6yB,EAAsBzuB,GAJZpE,KAAK/R,cAAcQ,QAIkB,eAAgBoV,IACjE,MAAQ3X,KAAAA,EAAAA,aAAMqN,GAAe,GAASyG,KAAK4F,WAC3C1Z,GAAQqN,GAAgByG,KAAKtV,MAAMmZ,EAAK,IAEtCivB,EAAyB,KAC3B,MAAMlC,gBAAEA,GAAoB5wB,KAAK4F,WAC7B7b,EAAY6mC,KACP5wB,KAAAgvB,YAAchvB,KAAK+wB,wBACxC,GAEc/zB,WAAEA,GAAegD,KAAK/R,cACtB8kC,EAA4B/1B,EAAW0G,iBAAiB,UAAWovB,GACrE91B,IAAeA,EAAWxQ,SACfwQ,EAAA8J,MAAQ9J,EAAW8J,KAAK4rB,eACnC11B,EAAW21B,gBAESG,IAKxB,MAAME,EAAqB1vB,GAAYxU,OAAQ,UAAU,IAAMkR,KAAKsyB,mCAK9DW,EAA2Bj2B,EAAW0G,iBAAiB,aAAc,EAAGpC,QAAO4xB,uBAC7ElzB,KAAK8uB,YAAcoE,IACnBtG,IAAUtB,IACA1H,MAAAA,EAAc5jB,KAAK4vB,mBAAmBtE,GACvC1H,IAEL5jB,KAAK0rB,YAAYJ,IAAShqB,EAAMgqB,GAAMK,UACtC/H,EAAYhzB,IAAIgzB,EAAYnzB,MAAQ6Q,EAAMgqB,GAAMK,WAAS,IAE7D3rB,KAAK/R,cAAce,SACnC,IAEQ,MAAO,KACiBgkC,IACCH,IACME,IAC3BE,GAA4BA,GAA0B,CAElE,CACI,QAAArtB,GACU,MAAA9a,EAAQkV,KAAK/R,cAAc2X,YACzB1Z,KAAAA,GAAO,EAAA6jC,kBAAOA,GAAoB,EAAOP,gBAAAA,GAAkB,EAAOoB,gBAAAA,GAAkB,EAAOrE,YAAAA,EAAcF,GAAgB0F,aAAAA,GAAe,GAAUjnC,EACnJ,MAAA,IACAA,EACHoB,KAAAA,EACA6jC,oBACAP,kBACAoB,kBACArE,cACAwF,eAEZ,EAEA,SAAStB,GAAWnT,EAAWpxB,EAAM6iC,GACjC,SAAkB,IAAT7iC,GAAiBA,IAASoxB,GACT,OAArByR,GAA6BA,IAAqBzR,EAC3D,CEtcA,MAAM6V,GAAgB3vB,GAAY,CAACK,EAAO8B,KAClCnC,GACA3C,GAAMjS,QAAO,IAAM4U,EAAQK,EAAO8B,IAC1C,ECgDA,SAASytB,KACL,OAGmB,QADJ7nC,EAFEG,aAAWxC,KAGKqC,EAAQu9B,UAD7C,IAAmBv9B,CADnB,CCvDA,MAAM8nC,GAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCbpB,SAASC,GAAgBC,EAAQnI,GACzB,OAAAA,EAAK54B,MAAQ44B,EAAK74B,IACX,EACHghC,GAAUnI,EAAK54B,IAAM44B,EAAK74B,KAAQ,GAC9C,CAQA,MAAMihC,GAAsB,CACxBC,QAAS,CAACv4B,EAAQkK,KACd,IAAKA,EAAKvM,OACC,OAAAqC,EAKP,GAAkB,iBAAXA,EAAqB,CACxB,IAAAtH,GAAG7C,KAAKmK,GAID,OAAAA,EAHPA,EAAStI,WAAWsI,EAKpC,CAOe,MAAA,GAFGo4B,GAAgBp4B,EAAQkK,EAAKvM,OAAOpH,OACpC6hC,GAAgBp4B,EAAQkK,EAAKvM,OAAOnH,KAC7B,GCjCnBgiC,GAAmB,CACrBD,QAAS,CAACv4B,GAAUy4B,YAAWC,sBAC3B,MAAMC,EAAW34B,EACX44B,EAASjiB,GAAQlf,MAAMuI,GAE7B,GAAI44B,EAAOhiC,OAAS,EACT,OAAA+hC,EACL,MAAAnhB,EAAWb,GAAQJ,kBAAkBvW,GACrCX,EAA8B,iBAAdu5B,EAAO,GAAkB,EAAI,EAE7CC,EAASH,EAAgBniC,EAAEqB,MAAQ6gC,EAAUliC,EAC7CuiC,EAASJ,EAAgBliC,EAAEoB,MAAQ6gC,EAAUjiC,EAC5CoiC,EAAA,EAAIv5B,IAAWw5B,EACfD,EAAA,EAAIv5B,IAAWy5B,EAOtB,MAAMC,EAAe31B,GAAIy1B,EAAQC,EAAQ,IAOzC,MALkC,iBAAvBF,EAAO,EAAIv5B,KACXu5B,EAAA,EAAIv5B,IAAW05B,GAEQ,iBAAvBH,EAAO,EAAIv5B,KACXu5B,EAAA,EAAIv5B,IAAW05B,GACnBvhB,EAASohB,EAAM,GCpB9B,MAAMI,WAAiCC,EAAe7mC,UAMlD,iBAAA8mC,GACI,MAAMrmC,cAAEA,EAAesmC,YAAAA,EAAAC,kBAAaA,EAAmB1mC,SAAAA,GAAakS,KAAKlV,OACnEkS,WAAEA,GAAe/O,ElJjB/B,IAA2BwmC,IkJkBDC,GlJjBfzqC,OAAAiP,OAAOhI,EAAiBujC,GkJkBvBz3B,IACIu3B,EAAYI,OACAJ,EAAAI,MAAMx0B,IAAInD,GACtBw3B,GAAqBA,EAAkBrL,UAAYr7B,GACnD0mC,EAAkBrL,SAASnsB,GAE/BA,EAAW8J,KAAK8tB,YACL53B,EAAA0G,iBAAiB,qBAAqB,KAC7C1D,KAAK60B,cAAc,IAEvB73B,EAAW83B,WAAW,IACf93B,EAAWpF,QACdmxB,eAAgB,IAAM/oB,KAAK60B,kBAGnCxB,GAAsBE,gBAAiB,CAC/C,CACI,uBAAAwB,CAAwBt3B,GACd,MAAAu3B,iBAAEA,gBAAkB/mC,EAAe/B,KAAAA,EAAM48B,UAAAA,GAAc9oB,KAAKlV,MAC5DkS,EAAa/O,EAAc+O,WACjC,OAAKA,GASLA,EAAW8rB,UAAYA,EACnB58B,GACAuR,EAAUu3B,mBAAqBA,QACV,IAArBA,EACAh4B,EAAWi4B,aAGXj1B,KAAK60B,eAELp3B,EAAUqrB,YAAcA,IACpBA,EACA9rB,EAAWk4B,UAELl4B,EAAWm4B,YAMjBt0B,GAAMshB,YAAW,KACP,MAAAiT,EAAQp4B,EAAWq4B,WACpBD,GAAUA,EAAME,QAAQtjC,QACzBgO,KAAK60B,cAC7B,KAIe,MAnCI,IAoCnB,CACI,kBAAAU,GACI,MAAMv4B,WAAEA,GAAegD,KAAKlV,MAAMmD,cAC9B+O,IACAA,EAAW8J,KAAK8tB,YAChBY,gBAAe,MACNx4B,EAAWy4B,kBAAoBz4B,EAAW04B,UAC3C11B,KAAK60B,cACzB,IAGA,CACI,oBAAAc,GACI,MAAM1nC,cAAEA,EAAesmC,YAAAA,EAAaC,kBAAmBoB,GAAoB51B,KAAKlV,OAC1EkS,WAAEA,GAAe/O,EACnB+O,IACAA,EAAW64B,4BACPtB,GAAeA,EAAYI,OACfJ,EAAAI,MAAMr0B,OAAOtD,GACzB44B,GAAkBA,EAAeE,YACjCF,EAAeE,WAAW94B,GAE1C,CACI,YAAA63B,GACU,MAAAA,aAAEA,GAAiB70B,KAAKlV,MAC9B+pC,GAAgBA,GACxB,CACI,MAAA7lC,GACW,OAAA,IACf,EAEA,SAASpB,GAAc9C,GACnB,MAAOg+B,EAAW+L,GJnFtB,WACU,MAAAtpC,EAAUG,EAAUA,WAACxC,GAC3B,GAAgB,OAAZqC,EACO,MAAA,EAAC,EAAM,MAClB,MAAQu9B,UAAAA,EAAWC,eAAAA,EAAAI,SAAgBA,GAAa59B,EAG1C0E,EAAK8lC,EAAAA,QAGJ,OAFPxsC,EAAAA,WAAU,IAAM4/B,EAASl5B,IAAK,KAEtB64B,GAAaC,EAAiB,EAAC,EADlB,IAAMA,GAAkBA,EAAe94B,IACE,EAAC,EACnE,CIwEsC+lC,GAC5BzB,EAAc7oC,EAAUA,WAACoB,GAC/B,OAAQunC,EAAe7kC,cAAc4kC,GAA0B,IAAKtpC,EAAOypC,cAA0BC,kBAAmB9oC,EAAUA,WAACqB,GAA2B+7B,UAAWA,EAAW+L,gBACxL,CACA,MAAMH,GAAyB,CAC3BjgC,aAAc,IACPi/B,GACHuC,QAAS,CACL,sBACA,uBACA,yBACA,4BAGRthC,oBAAqB++B,GACrB9+B,qBAAsB8+B,GACtB5+B,uBAAwB4+B,GACxB7+B,wBAAyB6+B,GACzBwC,UAAWtC,ICzHTuC,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQnkC,OACrBqkC,GAAY3mC,GAA2B,iBAAVA,EAAqBoD,WAAWpD,GAASA,EACtE4mC,GAAQ5mC,GAA2B,iBAAVA,GAAsBoE,GAAG7C,KAAKvB,GA0C7D,SAAS6mC,GAAU/5B,EAAQg6B,GACvB,YAA8B,IAAvBh6B,EAAOg6B,GACRh6B,EAAOg6B,GACPh6B,EAAO/H,YACjB,CAwBA,MAAMgiC,GAAkBC,GAAS,EAAG,GAAKzqB,IACnC0qB,GAAmBD,GAAS,GAAK,IAAM92B,IAC7C,SAAS82B,GAASjkC,EAAKC,EAAK0Y,GACxB,OAAQtiB,GAEAA,EAAI2J,EACG,EACP3J,EAAI4J,EACG,EACJ0Y,EAAO0E,GAASrd,EAAKC,EAAK5J,GAEzC,CCrFA,SAAS8tC,GAAatL,EAAMuL,GACxBvL,EAAK74B,IAAMokC,EAAWpkC,IACtB64B,EAAK54B,IAAMmkC,EAAWnkC,GAC1B,CAMA,SAASokC,GAAYvJ,EAAKwJ,GACTH,GAAArJ,EAAI57B,EAAGolC,EAAUplC,GACjBilC,GAAArJ,EAAI37B,EAAGmlC,EAAUnlC,EAClC,CCVA,SAASolC,GAAiB7yB,EAAOwnB,EAAW34B,EAAO04B,EAAa0B,GAMrD,OAJPjpB,EAAQ+oB,GADC/oB,GAAAwnB,EACiB,EAAI34B,EAAO04B,QACpB,IAAb0B,IACAjpB,EAAQ+oB,GAAW/oB,EAAO,EAAIipB,EAAU1B,IAErCvnB,CACX,CAsBA,SAAS8yB,GAAqB3L,EAAMuC,GAAanhC,EAAKohC,EAAUC,GAAYvzB,EAAQ08B,IAlBpF,SAAyB5L,EAAMK,EAAY,EAAG34B,EAAQ,EAAGwH,EAAS,GAAK4yB,EAAUyJ,EAAavL,EAAM4L,EAAa5L,GACzGz3B,EAAQ5C,KAAK06B,KACbA,EAAY74B,WAAW64B,GAEvBA,EADyBntB,GAAI04B,EAAWzkC,IAAKykC,EAAWxkC,IAAKi5B,EAAY,KAC1CuL,EAAWzkC,KAE9C,GAAyB,iBAAdk5B,EACP,OACJ,IAAID,EAAcltB,GAAIq4B,EAAWpkC,IAAKokC,EAAWnkC,IAAK8H,GAClD8wB,IAASuL,IACMnL,GAAAC,GACnBL,EAAK74B,IAAMukC,GAAiB1L,EAAK74B,IAAKk5B,EAAW34B,EAAO04B,EAAa0B,GACrE9B,EAAK54B,IAAMskC,GAAiB1L,EAAK54B,IAAKi5B,EAAW34B,EAAO04B,EAAa0B,EACzE,CAMI+J,CAAgB7L,EAAMuC,EAAWnhC,GAAMmhC,EAAWC,GAAWD,EAAWE,GAAYF,EAAW76B,MAAOwH,EAAQ08B,EAClH,CAIA,MAAMjJ,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASkJ,GAAoB7J,EAAKM,EAAYkJ,EAAWM,GAChCJ,GAAA1J,EAAI57B,EAAGk8B,EAAYI,GAAO8I,EAAYA,EAAUplC,OAAI,EAAW0lC,EAAYA,EAAU1lC,OAAI,GACzFslC,GAAA1J,EAAI37B,EAAGi8B,EAAYK,GAAO6I,EAAYA,EAAUnlC,OAAI,EAAWylC,EAAYA,EAAUzlC,OAAI,EAClH,CCjDA,SAAS0lC,GAAgBh2B,GACrB,OAA2B,IAApBA,EAAMqqB,WAAmC,IAAhBrqB,EAAMtO,KAC1C,CACA,SAASukC,GAAYj2B,GACjB,OAAOg2B,GAAgBh2B,EAAM3P,IAAM2lC,GAAgBh2B,EAAM1P,EAC7D,CAOA,SAAS4lC,GAAiBjzB,EAAGC,GACjB,OAAA7R,KAAKQ,MAAMoR,EAAE5S,EAAEc,OAASE,KAAKQ,MAAMqR,EAAE7S,EAAEc,MAC3CE,KAAKQ,MAAMoR,EAAE5S,EAAEe,OAASC,KAAKQ,MAAMqR,EAAE7S,EAAEe,MACvCC,KAAKQ,MAAMoR,EAAE3S,EAAEa,OAASE,KAAKQ,MAAMqR,EAAE5S,EAAEa,MACvCE,KAAKQ,MAAMoR,EAAE3S,EAAEc,OAASC,KAAKQ,MAAMqR,EAAE5S,EAAEc,IAC/C,CACA,SAAS+kC,GAAYlK,GACjB,OAAOlC,GAAWkC,EAAI57B,GAAK05B,GAAWkC,EAAI37B,EAC9C,CCpBA,MAAM8lC,GACF,WAAA33B,GACIC,KAAKs1B,QAAU,EACvB,CACI,GAAAn1B,CAAImF,GACc8b,GAAAphB,KAAKs1B,QAAShwB,GAC5BA,EAAKqyB,gBACb,CACI,MAAAr3B,CAAOgF,GAKC,GAJOgc,GAAAthB,KAAKs1B,QAAShwB,GACrBA,IAAStF,KAAK43B,WACd53B,KAAK43B,cAAW,GAEhBtyB,IAAStF,KAAK63B,KAAM,CACpB,MAAMD,EAAW53B,KAAKs1B,QAAQt1B,KAAKs1B,QAAQtjC,OAAS,GAChD4lC,GACA53B,KAAKk1B,QAAQ0C,EAE7B,CACA,CACI,QAAAzC,CAAS7vB,GACL,MAAMwyB,EAAc93B,KAAKs1B,QAAQyC,WAAWC,GAAW1yB,IAAS0yB,IAChE,GAAoB,IAAhBF,EACO,OAAA,EAIP,IAAAF,EACJ,IAAA,IAASl/B,EAAIo/B,EAAap/B,GAAK,EAAGA,IAAK,CAC7B,MAAAs/B,EAASh4B,KAAKs1B,QAAQ58B,GACxB,IAAqB,IAArBs/B,EAAOlP,UAAqB,CACjB8O,EAAAI,EACX,KAChB,CACA,CACQ,QAAIJ,IACA53B,KAAKk1B,QAAQ0C,IACN,EAKnB,CACI,OAAA1C,CAAQ5vB,EAAM2yB,GACV,MAAML,EAAW53B,KAAK63B,KACtB,GAAIvyB,IAASsyB,IAEb53B,KAAK43B,SAAWA,EAChB53B,KAAK63B,KAAOvyB,EACZA,EAAK4yB,OACDN,GAAU,CACDA,EAAAhoC,UAAYgoC,EAASD,iBAC9BryB,EAAKqyB,iBACLryB,EAAK6yB,WAAaP,EACdK,IACA3yB,EAAK6yB,WAAWC,iBAAkB,GAElCR,EAASS,WACT/yB,EAAK+yB,SAAWT,EAASS,SACzB/yB,EAAK+yB,SAAS1gC,aACVigC,EAASU,iBAAmBV,EAASjgC,cAEzC2N,EAAKwB,MAAQxB,EAAKwB,KAAKyxB,aACvBjzB,EAAKkzB,eAAgB,GAEnB,MAAAC,UAAEA,GAAcnzB,EAAK1N,SACT,IAAd6gC,GACAb,EAASc,MAczB,CACA,CACI,qBAAAC,GACS34B,KAAAs1B,QAAQ/1B,SAAS+F,IACZ,MAAA1N,QAAEA,EAASghC,aAAAA,GAAiBtzB,EAC1B1N,EAAAmxB,gBAAkBnxB,EAAQmxB,iBAC9B6P,GACAA,EAAahhC,QAAQmxB,gBACjB6P,EAAahhC,QAAQmxB,gBACzC,GAEA,CACI,cAAA4O,GACS33B,KAAAs1B,QAAQ/1B,SAAS+F,IACbA,EAAA1V,UAAY0V,EAAKqyB,gBAAe,EAAK,GAEtD,CAKI,kBAAAkB,GACQ74B,KAAK63B,MAAQ73B,KAAK63B,KAAKQ,WACvBr4B,KAAK63B,KAAKQ,cAAW,EAEjC,EC5GA,SAASS,GAAyBx3B,EAAOuyB,EAAWkF,GAChD,IAAIxmC,EAAY,GAOhB,MAAMymC,EAAa13B,EAAM3P,EAAEg6B,UAAYkI,EAAUliC,EAC3CsnC,EAAa33B,EAAM1P,EAAE+5B,UAAYkI,EAAUjiC,EAWjD,IAVIonC,GAAcC,KACF1mC,EAAA,eAAeymC,QAAiBC,YAM5B,IAAhBpF,EAAUliC,GAA2B,IAAhBkiC,EAAUjiC,IAC/BW,GAAa,SAAS,EAAIshC,EAAUliC,MAAM,EAAIkiC,EAAUjiC,OAExDmnC,EAAiB,CACjB,MAAM7iC,OAAEA,EAAAC,QAAQA,EAASC,QAAAA,GAAY2iC,EACjC7iC,IACA3D,GAAa,UAAU2D,UACvBC,IACA5D,GAAa,WAAW4D,UACxBC,IACA7D,GAAa,WAAW6D,SACpC,CAKI,MAAM8iC,EAAgB53B,EAAM3P,EAAEqB,MAAQ6gC,EAAUliC,EAC1CwnC,EAAgB73B,EAAM1P,EAAEoB,MAAQ6gC,EAAUjiC,EAIhD,OAHsB,IAAlBsnC,GAAyC,IAAlBC,IACV5mC,GAAA,SAAS2mC,MAAkBC,MAErC5mC,GAAa,MACxB,CCvCA,MAAM6mC,GAAiB,CAAC70B,EAAGC,IAAMD,EAAE80B,MAAQ70B,EAAE60B,MCG7C,MAAMC,GACF,WAAAv5B,GACIC,KAAKrD,SAAW,GAChBqD,KAAKu5B,SAAU,CACvB,CACI,GAAAp5B,CAAI6F,GACcob,GAAAphB,KAAKrD,SAAUqJ,GAC7BhG,KAAKu5B,SAAU,CACvB,CACI,MAAAj5B,CAAO0F,GACQsb,GAAAthB,KAAKrD,SAAUqJ,GAC1BhG,KAAKu5B,SAAU,CACvB,CACI,OAAAh6B,CAAQ2C,GACJlC,KAAKu5B,SAAWv5B,KAAKrD,SAASopB,KAAKqT,IACnCp5B,KAAKu5B,SAAU,EACVv5B,KAAArD,SAAS4C,QAAQ2C,EAC9B,ECMA,MAAMs3B,GAAgB,CAAC,GAAI,IAAK,IAAK,KAC/BC,GAAmB,CAAEC,WAAY,UAMvC,IAAIzpC,GAAK,EAKT,MAAM0pC,GAAsB,CACxBrnC,KAAM,kBACNsnC,WAAY,EACZC,qBAAsB,EACtBC,uBAAwB,GAE5B,SAASC,IAAqBC,qBAAEA,EAAAC,cAAsBA,gBAAeC,EAAeC,kBAAAA,EAAAC,eAAmBA,IACnG,OAAO,MACH,WAAAr6B,CAAYpI,EAAe,GAAIzJ,GAAS+rC,aAAqD,EAASA,MAIlGj6B,KAAK/P,GAAKA,KAIV+P,KAAKq6B,YAAc,EAOdr6B,KAAArD,aAAetL,IAKpB2O,KAAKpI,QAAU,CAAE,EAMjBoI,KAAKs6B,iBAAkB,EACvBt6B,KAAK2vB,oBAAqB,EAO1B3vB,KAAKw4B,eAAgB,EAKrBx4B,KAAKu6B,mBAAoB,EAKzBv6B,KAAKw6B,yBAA0B,EAK/Bx6B,KAAKy6B,kBAAmB,EAIxBz6B,KAAK06B,uBAAwB,EAC7B16B,KAAK26B,uBAAwB,EAK7B36B,KAAKu4B,YAAa,EAIlBv4B,KAAK46B,OAAQ,EAKb56B,KAAK66B,YAAa,EAIlB76B,KAAK86B,sBAAuB,EAS5B96B,KAAK6zB,UAAY,CAAEliC,EAAG,EAAGC,EAAG,GAIvBoO,KAAA+6B,kBAAoBvqC,IACzBwP,KAAKg7B,iBAAkB,EAEvBh7B,KAAKi7B,iBAAkB,EACvBj7B,KAAKk7B,2BAA4B,EACjCl7B,KAAKm7B,kBAAoB,KACjBn7B,KAAKu4B,aACLv4B,KAAKu4B,YAAa,EAClBv4B,KAAKo7B,oBACzB,EAOYp7B,KAAKq7B,iBAAmB,KCnJpC,IAAgBC,EDoJAt7B,KAAKk7B,2BAA4B,EAKjCvB,GAAoBC,WAChBD,GAAoBE,qBAChBF,GAAoBG,uBAChB,EACP95B,KAAAu7B,MAAMh8B,QAAQi8B,IACdx7B,KAAAu7B,MAAMh8B,QAAQk8B,IACdz7B,KAAAu7B,MAAMh8B,QAAQm8B,IACd17B,KAAAu7B,MAAMh8B,QAAQo8B,IChKnBL,EDiKO3B,GChKf7qC,OAAO8sC,aACA9sC,OAAA8sC,YAAYC,OAAOP,ED+JQ,EAE9Bt7B,KAAK87B,cAAe,EACpB97B,KAAK+7B,WAAY,EACjB/7B,KAAKg8B,kBAAoB,EAKpBh8B,KAAAi8B,gBAAkBzrC,IACvBwP,KAAKrI,aAAeA,EACpBqI,KAAK8G,KAAO5Y,EAASA,EAAO4Y,MAAQ5Y,EAAS8R,KACxCA,KAAAk8B,KAAOhuC,EAAS,IAAIA,EAAOguC,KAAMhuC,GAAU,GAChD8R,KAAK9R,OAASA,EACd8R,KAAKq5B,MAAQnrC,EAASA,EAAOmrC,MAAQ,EAAI,EACzC,IAAA,IAAS3gC,EAAI,EAAGA,EAAIsH,KAAKk8B,KAAKlqC,OAAQ0G,IAC7BsH,KAAAk8B,KAAKxjC,GAAGoiC,sBAAuB,EAEpC96B,KAAK8G,OAAS9G,OACTA,KAAAu7B,MAAQ,IAAIjC,GACjC,CACQ,gBAAA51B,CAAiBzY,EAAMuY,GAInB,OAHKxD,KAAK+6B,cAAcpqC,IAAI1F,IACxB+U,KAAK+6B,cAAcnqC,IAAI3F,EAAM,IAAIs2B,IAE9BvhB,KAAK+6B,cAActqC,IAAIxF,GAAMkV,IAAIqD,EACpD,CACQ,eAAA24B,CAAgBlxC,KAASmxC,GACrB,MAAMC,EAAsBr8B,KAAK+6B,cAActqC,IAAIxF,GAC5BoxC,GAAAA,EAAoB5a,UAAU2a,EACjE,CACQ,YAAAE,CAAarxC,GACF,OAAA+U,KAAK+6B,cAAcpqC,IAAI1F,EAC1C,CAIQ,KAAA4E,CAAMD,EAAU4oC,EAAgBx4B,KAAK8G,KAAKk0B,iBACtC,GAAIh7B,KAAKpQ,SACL,OExMhB,IAAsBkN,EFyMLkD,KAAA46B,OEzMK99B,EFyMgBlN,aExMR2sC,YAAkC,QAApBz/B,EAAQsG,QFyMxCpD,KAAKpQ,SAAWA,EAChB,MAAM9B,SAAEA,EAAUtB,OAAAA,EAAQyB,cAAAA,GAAkB+R,KAAKpI,QASjD,GARI3J,IAAkBA,EAAcQ,SAChCR,EAAc4B,MAAMD,GAEnBoQ,KAAA8G,KAAKy0B,MAAMp7B,IAAIH,MACpBA,KAAK9R,QAAU8R,KAAK9R,OAAOyO,SAASwD,IAAIH,MACpCw4B,IAAkBhsC,GAAUsB,KAC5BkS,KAAKw4B,eAAgB,GAErBwB,EAAsB,CAClB,IAAAwC,EACJ,MAAMC,EAAsB,IAAOz8B,KAAK8G,KAAK6zB,uBAAwB,EACrEX,EAAqBpqC,GAAU,KAC3BoQ,KAAK8G,KAAK6zB,uBAAwB,EAClC6B,GAAeA,IACDA,EGrNlC,SAAet6B,EAAUw6B,GACf,MAAAhyC,EAAQiY,YAAYC,MACpB+5B,EAAe,EAAGp7B,gBACpB,MAAMga,EAAUha,EAAY7W,EACxB6wB,GAAWmhB,IACX37B,GAAY47B,GACZz6B,EAASqZ,EAAUmhB,GAC/B,EAGW,OADD77B,GAAAmC,KAAK25B,GAAc,GAClB,IAAM57B,GAAY47B,EAC7B,CH0MkCnjB,CAAMijB,EAAqB,KACrCpJ,GAAsBC,yBACtBD,GAAsBC,wBAAyB,EAC1CtzB,KAAAu7B,MAAMh8B,QAAQq9B,IAC3C,GAEA,CACgB9uC,GACKkS,KAAA8G,KAAK+1B,mBAAmB/uC,EAAUkS,OAGd,IAAzBA,KAAKpI,QAAQ7M,SACbkD,IACCH,GAAYtB,IACRwT,KAAA0D,iBAAiB,aAAa,EAAGpC,QAAO4xB,mBAAkB4J,2BAA0BtwC,OAAQuwC,MACzF,GAAA/8B,KAAKg9B,yBAGL,OAFAh9B,KAAKjH,YAAS,OACdiH,KAAKi9B,oBAAiB,GAI1B,MAAMC,EAAmBl9B,KAAKpI,QAAQ8H,YAClCzR,EAAckwB,wBACdgf,IACEC,uBAAEA,EAAAC,0BAAwBA,GAA+BpvC,EAAc2X,WAKvE03B,GAAiBt9B,KAAKu9B,eACvB/F,GAAiBx3B,KAAKu9B,aAAcR,IACrCD,EAMEU,GAAgCtK,GAAoB4J,EAC1D,GAAI98B,KAAKpI,QAAQ6lC,YACZz9B,KAAKm4B,YAAcn4B,KAAKm4B,WAAWvoC,UACpC4tC,GACCtK,IACIoK,IAAkBt9B,KAAKy1B,kBAAoB,CAC5Cz1B,KAAKm4B,aACLn4B,KAAK44B,aAAe54B,KAAKm4B,WACzBn4B,KAAK44B,aAAaA,kBAAe,GAEhC54B,KAAA09B,mBAAmBp8B,EAAOk8B,GAC/B,MAAMG,EAAmB,IAClBhe,GAAmBud,EAAkB,UACxCpjB,OAAQsjB,EACRpjB,WAAYqjB,IAEZpvC,EAAco3B,oBACdrlB,KAAKpI,QAAQ6lC,cACbE,EAAiBnkB,MAAQ,EACzBmkB,EAAiBrrC,MAAO,GAE5B0N,KAAKqjB,eAAesa,EAC5C,MAO6BzK,GACD0J,GAAgB58B,MAEhBA,KAAK01B,UAAY11B,KAAKpI,QAAQmxB,gBAC9B/oB,KAAKpI,QAAQmxB,iBAGrB/oB,KAAKu9B,aAAeR,CAAA,GAGxC,CACQ,OAAAjtC,GACSkQ,KAAApI,QAAQ9J,UAAYkS,KAAKi1B,aACzBj1B,KAAA8G,KAAKy0B,MAAMj7B,OAAON,MACjB,MAAAo1B,EAAQp1B,KAAKq1B,WACVD,GAAAA,EAAM90B,OAAON,MACtBA,KAAK9R,QAAU8R,KAAK9R,OAAOyO,SAAS8D,OAAOT,MAC3CA,KAAKpQ,cAAW,EAChBmR,GAAYf,KAAKq7B,iBAC7B,CAEQ,WAAAuC,GACI59B,KAAK06B,uBAAwB,CACzC,CACQ,aAAAmD,GACI79B,KAAK06B,uBAAwB,CACzC,CACQ,eAAAoD,GACW,OAAA99B,KAAK06B,uBAAyB16B,KAAK26B,qBACtD,CACQ,sBAAAqC,GACI,OAAQh9B,KAAK2vB,oBACR3vB,KAAK9R,QAAU8R,KAAK9R,OAAO8uC,2BAC5B,CAChB,CAEQ,WAAAe,GACQ/9B,KAAK89B,oBAET99B,KAAKu4B,YAAa,EAClBv4B,KAAKu7B,OAASv7B,KAAKu7B,MAAMh8B,QAAQy+B,IAC5Bh+B,KAAAq6B,cACjB,CACQ,oBAAA4D,GACU,MAAAhwC,cAAEA,GAAkB+R,KAAKpI,QACxB,OAAA3J,GAAiBA,EAAc2X,WAAW/N,iBAC7D,CACQ,UAAAo9B,CAAWiJ,GAAwB,GAE3B,GADJl+B,KAAK8G,KAAKk0B,iBAAkB,EACxBh7B,KAAK8G,KAAKg3B,kBAEV,YADA99B,KAAKpI,QAAQmxB,gBAAkB/oB,KAAKpI,QAAQmxB,kBAIhD,IADC/oB,KAAK8G,KAAKyxB,YAAcv4B,KAAK8G,KAAKi3B,cAC/B/9B,KAAKw4B,cACL,OACJx4B,KAAKw4B,eAAgB,EACrB,IAAA,IAAS9/B,EAAI,EAAGA,EAAIsH,KAAKk8B,KAAKlqC,OAAQ0G,IAAK,CACjC,MAAA4M,EAAOtF,KAAKk8B,KAAKxjC,GACvB4M,EAAKw1B,sBAAuB,EAC5Bx1B,EAAKotB,aAAa,YACdptB,EAAK1N,QAAQ6lC,YACbn4B,EAAK2vB,YAAW,EAEpC,CACY,MAAMnnC,SAAEA,EAAUtB,OAAAA,GAAWwT,KAAKpI,QAC9B,QAAa,IAAb9J,IAA2BtB,EAC3B,OACE,MAAAqL,EAAoBmI,KAAKi+B,uBAC/Bj+B,KAAKm+B,2BAA6BtmC,EAC5BA,EAAkBmI,KAAKrI,aAAc,SACrC,EACNqI,KAAKo+B,iBACoBF,GAAAl+B,KAAKm8B,gBAAgB,aAC1D,CACQ,MAAAvtC,GACIoR,KAAKi7B,iBAAkB,EAKvB,GAJyBj7B,KAAK89B,kBAQ1B,OAHA99B,KAAK69B,gBACL79B,KAAKo7B,yBACAp7B,KAAAu7B,MAAMh8B,QAAQ8+B,IAGlBr+B,KAAKu4B,YACDv4B,KAAAu7B,MAAMh8B,QAAQ++B,IAEvBt+B,KAAKu4B,YAAa,EAIbv4B,KAAAu7B,MAAMh8B,QAAQg/B,IAKdv+B,KAAAu7B,MAAMh8B,QAAQozB,IAKd3yB,KAAAu7B,MAAMh8B,QAAQi/B,IACnBx+B,KAAKo7B,oBAMC,MAAAx4B,EAAMD,YAAYC,MACxB5B,GAAUM,MAAQ9O,EAAM,EAAG,IAAO,GAAIoQ,EAAM5B,GAAUO,WACtDP,GAAUO,UAAYqB,EACtB5B,GAAUQ,cAAe,EACnBP,GAAArS,OAAOwR,QAAQY,IACfC,GAAAw9B,UAAUr+B,QAAQY,IAClBC,GAAAjS,OAAOoR,QAAQY,IACrBA,GAAUQ,cAAe,CACrC,CACQ,SAAAozB,GACS50B,KAAKi7B,kBACNj7B,KAAKi7B,iBAAkB,EACRzF,gBAAA,IAAMx1B,KAAKpR,WAE1C,CACQ,iBAAAwsC,GACSp7B,KAAAu7B,MAAMh8B,QAAQm/B,IACd1+B,KAAAi8B,YAAY18B,QAAQo/B,GACrC,CACQ,wBAAAC,GACS5+B,KAAKk7B,4BACNl7B,KAAKk7B,2BAA4B,EACjCr6B,GAAM49B,UAAUz+B,KAAKq7B,kBAAkB,GAAO,GAE9D,CACQ,yBAAAxF,GAMIh1B,GAAMshB,YAAW,KACTniB,KAAKw4B,cACLx4B,KAAK8G,KAAK8tB,YAGV50B,KAAK8G,KAAKq0B,mBAC9B,GAEA,CAIQ,cAAAiD,IACQp+B,KAAKq4B,UAAar4B,KAAKpQ,WAEtBoQ,KAAAq4B,SAAWr4B,KAAK6wB,UACjC,CACQ,YAAA8B,GACI,IAAK3yB,KAAKpQ,SACN,OAGA,GADJoQ,KAAK0yB,iBACC1yB,KAAKpI,QAAQinC,qBAAuB7+B,KAAK01B,UAC1C11B,KAAKw4B,eACN,OASJ,GAAIx4B,KAAKm4B,aAAen4B,KAAKm4B,WAAWvoC,SACpC,IAAA,IAAS8I,EAAI,EAAGA,EAAIsH,KAAKk8B,KAAKlqC,OAAQ0G,IAAK,CAC1BsH,KAAKk8B,KAAKxjC,GAClBg6B,cACzB,CAEY,MAAMoM,EAAa9+B,KAAKxT,OACnBwT,KAAAxT,OAASwT,KAAK6wB,SAAQ,GAC3B7wB,KAAK++B,gBfxcQ,CACrBptC,EAFsB,CAAEc,IAAK,EAAGC,IAAK,GAGrCd,EAHsB,CAAEa,IAAK,EAAGC,IAAK,Ie0c7BsN,KAAKw4B,eAAgB,EACrBx4B,KAAK8zB,qBAAkB,EACvB9zB,KAAKm8B,gBAAgB,UAAWn8B,KAAKxT,OAAOsjC,WACtC,MAAA7hC,cAAEA,GAAkB+R,KAAKpI,QAE3B3J,GAAAA,EAAcwzB,OAAO,gBAAiBzhB,KAAKxT,OAAOsjC,UAAWgP,EAAaA,EAAWhP,eAAY,EACjH,CACQ,YAAA4C,CAAasM,EAAQ,WACjB,IAAIC,EAAmB9zC,QAAQ6U,KAAKpI,QAAQsnC,cAAgBl/B,KAAKpQ,UAC7DoQ,KAAKyxB,QACLzxB,KAAKyxB,OAAO4I,cAAgBr6B,KAAK8G,KAAKuzB,aACtCr6B,KAAKyxB,OAAOuN,QAAUA,IACHC,GAAA,GAEnBA,IACAj/B,KAAKyxB,OAAS,CACV4I,YAAar6B,KAAK8G,KAAKuzB,YACvB2E,QACAG,OAAQhF,EAAkBn6B,KAAKpQ,UAC/B6K,OAAQy/B,EAAcl6B,KAAKpQ,WAG/C,CACQ,cAAAwqC,GACI,IAAKA,EACD,OACE,MAAAgF,EAAmBp/B,KAAKw4B,eAAiBx4B,KAAK86B,qBAC9CuE,EAAgBr/B,KAAK8zB,kBAAoByD,GAAYv3B,KAAK8zB,iBAC1Dj8B,EAAoBmI,KAAKi+B,uBACzBqB,EAAyBznC,EACzBA,EAAkBmI,KAAKrI,aAAc,SACrC,EACA4nC,EAA8BD,IAA2Bt/B,KAAKm+B,2BAChEiB,IACCC,GACGpnC,GAAa+H,KAAKrI,eAClB4nC,KACWnF,EAAAp6B,KAAKpQ,SAAU0vC,GAC9Bt/B,KAAK86B,sBAAuB,EAC5B96B,KAAK23B,iBAErB,CACQ,OAAA9G,CAAQ2O,GAAkB,GAChB,MAAAC,EAAUz/B,KAAK0xB,iBACjB,IAAA5B,EAAY9vB,KAAK0/B,oBAAoBD,GA+8BrD,IAAkBlS,EAr8BC,OAJHiS,IACY1P,EAAA9vB,KAAKw/B,gBAAgB1P,IAy8B7C6P,IADcpS,EAt8BGuC,GAu8BHn+B,GACdguC,GAAUpS,EAAI37B,GAv8BC,CACHyoC,YAAar6B,KAAK8G,KAAKuzB,YACvBuF,YAAaH,EACb3P,YACAn4B,aAAc,CAAE,EAChBqB,OAAQgH,KAAK/P,GAE7B,CACQ,cAAAyhC,GACU,MAAAzjC,cAAEA,GAAkB+R,KAAKpI,QAC/B,IAAK3J,EACD,Mf1gBS,CACrB0D,EAFsB,CAAEc,IAAK,EAAGC,IAAK,GAGrCd,EAHsB,CAAEa,IAAK,EAAGC,IAAK,Ie4gBvB,MAAA66B,EAAMt/B,EAAcmgC,sBAEpBqD,OAAEA,GAAWzxB,KAAK8G,KAKjB,OAJH2qB,IACA9D,GAAcJ,EAAI57B,EAAG8/B,EAAOh3B,OAAO9I,GACnCg8B,GAAcJ,EAAI37B,EAAG6/B,EAAOh3B,OAAO7I,IAEhC27B,CACnB,CACQ,mBAAAmS,CAAoBnS,GAChB,MAAMsS,EfrhBO,CACrBluC,EAFsB,CAAEc,IAAK,EAAGC,IAAK,GAGrCd,EAHsB,CAAEa,IAAK,EAAGC,IAAK,IeuhB7BokC,GAAY+I,EAAkBtS,GAK9B,IAAA,IAAS70B,EAAI,EAAGA,EAAIsH,KAAKk8B,KAAKlqC,OAAQ0G,IAAK,CACjC,MAAA4M,EAAOtF,KAAKk8B,KAAKxjC,IACjB+4B,OAAEA,EAAQ75B,QAAAA,GAAY0N,EAC5B,GAAIA,IAAStF,KAAK8G,MAAQ2qB,GAAU75B,EAAQsnC,aAAc,CAKtD,GAAIzN,EAAO0N,OAAQ,CACfrI,GAAY+I,EAAkBtS,GAC9B,MAAQkE,OAAQqO,GAAe9/B,KAAK8G,KAKhCg5B,IACAnS,GAAckS,EAAiBluC,GAAImuC,EAAWrlC,OAAO9I,GACrDg8B,GAAckS,EAAiBjuC,GAAIkuC,EAAWrlC,OAAO7I,GAEjF,CACoB+7B,GAAckS,EAAiBluC,EAAG8/B,EAAOh3B,OAAO9I,GAChDg8B,GAAckS,EAAiBjuC,EAAG6/B,EAAOh3B,OAAO7I,EACpE,CACA,CACmB,OAAAiuC,CACnB,CACQ,cAAAE,CAAexS,EAAKyS,GAAgB,GAChC,MAAMC,EftjBO,CACrBtuC,EAFsB,CAAEc,IAAK,EAAGC,IAAK,GAGrCd,EAHsB,CAAEa,IAAK,EAAGC,IAAK,IewjB7BokC,GAAYmJ,EAAgB1S,GAC5B,IAAA,IAAS70B,EAAI,EAAGA,EAAIsH,KAAKk8B,KAAKlqC,OAAQ0G,IAAK,CACjC,MAAA4M,EAAOtF,KAAKk8B,KAAKxjC,IAClBsnC,GACD16B,EAAK1N,QAAQsnC,cACb55B,EAAKmsB,QACLnsB,IAASA,EAAKwB,MACdqnB,GAAa8R,EAAgB,CACzBtuC,GAAI2T,EAAKmsB,OAAOh3B,OAAO9I,EACvBC,GAAI0T,EAAKmsB,OAAOh3B,OAAO7I,IAG1BqG,GAAaqN,EAAK3N,eAEVw2B,GAAA8R,EAAgB36B,EAAK3N,aAClD,CAImB,OAHHM,GAAa+H,KAAKrI,eACLw2B,GAAA8R,EAAgBjgC,KAAKrI,cAE/BsoC,CACnB,CACQ,eAAAT,CAAgBjS,GACZ,MAAM2S,Ef7kBO,CACrBvuC,EAFsB,CAAEc,IAAK,EAAGC,IAAK,GAGrCd,EAHsB,CAAEa,IAAK,EAAGC,IAAK,Ie+kB7BokC,GAAYoJ,EAAqB3S,GACjC,IAAA,IAAS70B,EAAI,EAAGA,EAAIsH,KAAKk8B,KAAKlqC,OAAQ0G,IAAK,CACjC,MAAA4M,EAAOtF,KAAKk8B,KAAKxjC,GACvB,IAAK4M,EAAK1V,SACN,SACA,IAACqI,GAAaqN,EAAK3N,cACnB,SACJo1B,GAASznB,EAAK3N,eAAiB2N,EAAK84B,iBACpC,MAAM/G,EftlBG,CACrB1lC,EAFsB,CAAEc,IAAK,EAAGC,IAAK,GAGrCd,EAHsB,CAAEa,IAAK,EAAGC,IAAK,IeylBzBokC,GAAYO,EADI/xB,EAAKosB,kBAED0F,GAAA8I,EAAqB56B,EAAK3N,aAAc2N,EAAK+yB,SAAW/yB,EAAK+yB,SAASvI,eAAY,EAAWuH,EACjI,CAImB,OAHHp/B,GAAa+H,KAAKrI,eACEy/B,GAAA8I,EAAqBlgC,KAAKrI,cAE3CuoC,CACnB,CACQ,cAAAC,CAAe7+B,GACXtB,KAAKogC,YAAc9+B,EACnBtB,KAAK8G,KAAK83B,2BACV5+B,KAAKu6B,mBAAoB,CACrC,CACQ,UAAAzF,CAAWl9B,GACPoI,KAAKpI,QAAU,IACRoI,KAAKpI,WACLA,EACH6gC,eAAiC,IAAtB7gC,EAAQ6gC,WAA0B7gC,EAAQ6gC,UAErE,CACQ,iBAAA4F,GACIr+B,KAAKyxB,YAAS,EACdzxB,KAAKxT,YAAS,EACdwT,KAAKq4B,cAAW,EAChBr4B,KAAKm+B,gCAA6B,EAClCn+B,KAAKogC,iBAAc,EACnBpgC,KAAKjH,YAAS,EACdiH,KAAKw4B,eAAgB,CACjC,CACQ,kCAAA6H,GACSrgC,KAAKsgC,gBAQNtgC,KAAKsgC,eAAeC,2BACpBv/B,GAAUO,WACLvB,KAAAsgC,eAAe7E,oBAAmB,EAEvD,CACQ,kBAAAA,CAAmB+E,GAAqB,GAChC,IAAAlmC,EAME,MAAAu9B,EAAO73B,KAAKygC,UACbzgC,KAAAu6B,oBAAsBv6B,KAAKu6B,kBAAoB1C,EAAK0C,mBACpDv6B,KAAAy6B,mBAAqBz6B,KAAKy6B,iBAAmB5C,EAAK4C,kBAClDz6B,KAAAw6B,0BAA4Bx6B,KAAKw6B,wBAA0B3C,EAAK2C,yBACrE,MAAMkG,EAAWv1C,QAAQ6U,KAAK44B,eAAiB54B,OAAS63B,EAUpD,KALc2I,GACbE,GAAY1gC,KAAKw6B,yBAClBx6B,KAAKu6B,oBACmB,QAAtBjgC,EAAK0F,KAAK9R,cAA2B,IAAPoM,OAAgB,EAASA,EAAGigC,oBAC5Dv6B,KAAK2gC,gCAEL,OACJ,MAAQn0C,OAAAA,EAAQsB,SAAAA,GAAakS,KAAKpI,QAIlC,GAAKoI,KAAKxT,SAAYA,GAAUsB,GAAhC,CASA,GAPAkS,KAAKugC,yBAA2Bv/B,GAAUO,WAOrCvB,KAAKogC,cAAgBpgC,KAAKi9B,eAAgB,CAErC,MAAAqD,EAAiBtgC,KAAK4gC,6BACxBN,GACAA,EAAe9zC,QACY,IAA3BwT,KAAKg8B,mBACLh8B,KAAKsgC,eAAiBA,EACtBtgC,KAAKqgC,qCACLrgC,KAAKi9B,ef/qBA,CACrBtrC,EAFsB,CAAEc,IAAK,EAAGC,IAAK,GAGrCd,EAHsB,CAAEa,IAAK,EAAGC,IAAK,IeirBrBsN,KAAK6gC,qBfhrBA,CACrBlvC,EAFsB,CAAEc,IAAK,EAAGC,IAAK,GAGrCd,EAHsB,CAAEa,IAAK,EAAGC,IAAK,IekrBrBs5B,GAAqBhsB,KAAK6gC,qBAAsB7gC,KAAKxT,OAAOsjC,UAAWwQ,EAAe9zC,OAAOsjC,WACjFgH,GAAA92B,KAAKi9B,eAAgBj9B,KAAK6gC,uBAGjC7gC,KAAAsgC,eAAiBtgC,KAAKi9B,oBAAiB,CAEhE,CAKY,GAAKj9B,KAAKi9B,gBAAmBj9B,KAAKogC,YAAlC,CxB5qBZ,IAAyBrnC,EAAQ+yB,EAAU59B,EwBqtB/B,GApCK8R,KAAKjH,SACNiH,KAAKjH,OflsBI,CACrBpH,EAFsB,CAAEc,IAAK,EAAGC,IAAK,GAGrCd,EAHsB,CAAEa,IAAK,EAAGC,IAAK,IeosBzBsN,KAAK8gC,qBfnsBI,CACrBnvC,EAFsB,CAAEc,IAAK,EAAGC,IAAK,GAGrCd,EAHsB,CAAEa,IAAK,EAAGC,IAAK,KeysBzBsN,KAAKi9B,gBACLj9B,KAAK6gC,sBACL7gC,KAAKsgC,gBACLtgC,KAAKsgC,eAAevnC,QACpBiH,KAAKqgC,qCxB5rBItnC,EwB6rBOiH,KAAKjH,OxB7rBJ+yB,EwB6rBY9rB,KAAKi9B,exB7rBP/uC,EwB6rBuB8R,KAAKsgC,eAAevnC,OxB5rBlF8yB,GAAiB9yB,EAAOpH,EAAGm6B,EAASn6B,EAAGzD,EAAOyD,GAC9Ck6B,GAAiB9yB,EAAOnH,EAAGk6B,EAASl6B,EAAG1D,EAAO0D,IwBgsB7BoO,KAAKogC,aACNj1C,QAAQ6U,KAAK44B,cAEb54B,KAAKjH,OAASiH,KAAK+/B,eAAe//B,KAAKxT,OAAOsjC,WAG9CgH,GAAY92B,KAAKjH,OAAQiH,KAAKxT,OAAOsjC,WAE3BxC,GAAAttB,KAAKjH,OAAQiH,KAAKogC,cAMhCtJ,GAAY92B,KAAKjH,OAAQiH,KAAKxT,OAAOsjC,WAKrC9vB,KAAK2gC,+BAAgC,CACrC3gC,KAAK2gC,gCAAiC,EAChC,MAAAL,EAAiBtgC,KAAK4gC,6BACxBN,GACAn1C,QAAQm1C,EAAe1H,gBACnBztC,QAAQ6U,KAAK44B,gBAChB0H,EAAe1oC,QAAQsnC,cACxBoB,EAAevnC,QACY,IAA3BiH,KAAKg8B,mBACLh8B,KAAKsgC,eAAiBA,EACtBtgC,KAAKqgC,qCACLrgC,KAAKi9B,efhvBA,CACrBtrC,EAFsB,CAAEc,IAAK,EAAGC,IAAK,GAGrCd,EAHsB,CAAEa,IAAK,EAAGC,IAAK,IekvBrBsN,KAAK6gC,qBfjvBA,CACrBlvC,EAFsB,CAAEc,IAAK,EAAGC,IAAK,GAGrCd,EAHsB,CAAEa,IAAK,EAAGC,IAAK,IemvBrBs5B,GAAqBhsB,KAAK6gC,qBAAsB7gC,KAAKjH,OAAQunC,EAAevnC,QAChE+9B,GAAA92B,KAAKi9B,eAAgBj9B,KAAK6gC,uBAGjC7gC,KAAAsgC,eAAiBtgC,KAAKi9B,oBAAiB,CAEhE,CAIgCtD,GAAAE,sBA/DhB,CA9BA,CA8FhB,CACQ,0BAAA+G,GACI,GAAK5gC,KAAK9R,SACN6+B,GAAS/sB,KAAK9R,OAAOyJ,gBACrBq1B,GAAehtB,KAAK9R,OAAOyJ,cAG3B,OAAAqI,KAAK9R,OAAO6yC,eACL/gC,KAAK9R,OAGL8R,KAAK9R,OAAO0yC,4BAEnC,CACQ,YAAAG,GACW,OAAA51C,SAAS6U,KAAKi9B,gBACjBj9B,KAAKogC,aACLpgC,KAAKpI,QAAQ6lC,aACbz9B,KAAKxT,OACrB,CACQ,cAAAkvC,GACQ,IAAAphC,EACE,MAAAu9B,EAAO73B,KAAKygC,UACZC,EAAWv1C,QAAQ6U,KAAK44B,eAAiB54B,OAAS63B,EACxD,IAAIzS,GAAU,EAuBV,IAlBAplB,KAAKu6B,oBAA6C,QAAtBjgC,EAAK0F,KAAK9R,cAA2B,IAAPoM,OAAgB,EAASA,EAAGigC,sBAC5EnV,GAAA,GAMVsb,IACC1gC,KAAKw6B,yBAA2Bx6B,KAAKy6B,oBAC5BrV,GAAA,GAMVplB,KAAKugC,2BAA6Bv/B,GAAUO,YAClC6jB,GAAA,GAEVA,EACA,OACJ,MAAQ54B,OAAAA,EAAQsB,SAAAA,GAAakS,KAAKpI,QAWlC,GANKoI,KAAAs6B,gBAAkBnvC,QAAS6U,KAAK9R,QAAU8R,KAAK9R,OAAOosC,iBACvDt6B,KAAKy1B,kBACLz1B,KAAKghC,kBACJhhC,KAAKs6B,kBACDt6B,KAAAogC,YAAcpgC,KAAKi9B,oBAAiB,IAExCj9B,KAAKxT,SAAYA,IAAUsB,EAC5B,OAKJgpC,GAAY92B,KAAK++B,gBAAiB/+B,KAAKxT,OAAOsjC,WAIxC,MAAAmR,EAAiBjhC,KAAK6zB,UAAUliC,EAChCuvC,EAAiBlhC,KAAK6zB,UAAUjiC,GnBvyBlD,SAAyB27B,EAAKsG,EAAWsN,EAAUC,GAAqB,GACpE,MAAMC,EAAaF,EAASnvC,OAC5B,IAAKqvC,EACD,OAGA,IAAA/7B,EACAhE,EAFMuyB,EAAAliC,EAAIkiC,EAAUjiC,EAAI,EAG5B,IAAA,IAAS8G,EAAI,EAAGA,EAAI2oC,EAAY3oC,IAAK,CACjC4M,EAAO67B,EAASzoC,GAChB4I,EAAQgE,EAAKwuB,gBAKb,MAAMlkC,EAAW0V,EAAK1V,SAClBA,GACAA,EAASkI,OACkB,aAA3BlI,EAASkI,MAAMwpC,UAGfF,GACA97B,EAAK1N,QAAQsnC,cACb55B,EAAKmsB,QACLnsB,IAASA,EAAKwB,MACdqnB,GAAaZ,EAAK,CACd57B,GAAI2T,EAAKmsB,OAAOh3B,OAAO9I,EACvBC,GAAI0T,EAAKmsB,OAAOh3B,OAAO7I,IAG3B0P,IAEUuyB,EAAAliC,GAAK2P,EAAM3P,EAAEqB,MACb6gC,EAAAjiC,GAAK0P,EAAM1P,EAAEoB,MAEvBs6B,GAAcC,EAAKjsB,IAEnB8/B,GAAsBnpC,GAAaqN,EAAK3N,eAC3Bw2B,GAAAZ,EAAKjoB,EAAK3N,cAEnC,CAKck8B,EAAAliC,EAAI67B,GAAcqG,EAAUliC,GAC5BkiC,EAAAjiC,EAAI47B,GAAcqG,EAAUjiC,EAC1C,CmB6vBY2vC,CAAgBvhC,KAAK++B,gBAAiB/+B,KAAK6zB,UAAW7zB,KAAKk8B,KAAMwE,IAK7D7I,EAAKrrC,QACJqrC,EAAK9+B,QACgB,IAArBiH,KAAK6zB,UAAUliC,GAAgC,IAArBqO,KAAK6zB,UAAUjiC,IACrCimC,EAAA9+B,OAAS8+B,EAAKrrC,OAAOsjC,WAExB,MAAA/2B,OAAEA,GAAW8+B,EACnB,IAAK9+B,EAWD,YALIiH,KAAKwhC,sBACLxhC,KAAK8zB,gBfh2BE,CACvBniC,EAP2B,CAC3Bg6B,UAAW,EACX34B,MAAO,EACPwH,OAAQ,EACRkxB,YAAa,GAIb95B,EAR2B,CAC3B+5B,UAAW,EACX34B,MAAO,EACPwH,OAAQ,EACRkxB,YAAa,Iem2BG1rB,KAAKwhC,oBAAsB,OAC3BxhC,KAAK23B,mBAIR33B,KAAK8zB,kBACN9zB,KAAK8zB,gBfv2BM,CACvBniC,EAP2B,CAC3Bg6B,UAAW,EACX34B,MAAO,EACPwH,OAAQ,EACRkxB,YAAa,GAIb95B,EAR2B,CAC3B+5B,UAAW,EACX34B,MAAO,EACPwH,OAAQ,EACRkxB,YAAa,Ie02BD1rB,KAAKyhC,6Bfx2BM,CACvB9vC,EAP2B,CAC3Bg6B,UAAW,EACX34B,MAAO,EACPwH,OAAQ,EACRkxB,YAAa,GAIb95B,EAR2B,CAC3B+5B,UAAW,EACX34B,MAAO,EACPwH,OAAQ,EACRkxB,YAAa,Ke42BL,MAAMgW,EAA0B1hC,KAAKwhC,oBAUrC5V,GAAa5rB,KAAK8zB,gBAAiB9zB,KAAK++B,gBAAiBhmC,EAAQiH,KAAKrI,cACtEqI,KAAKwhC,oBAAsB1I,GAAyB94B,KAAK8zB,gBAAiB9zB,KAAK6zB,WAC3E7zB,KAAKwhC,sBAAwBE,GAC7B1hC,KAAK6zB,UAAUliC,IAAMsvC,GACrBjhC,KAAK6zB,UAAUjiC,IAAMsvC,IACrBlhC,KAAK87B,cAAe,EACpB97B,KAAK23B,iBACA33B,KAAAm8B,gBAAgB,mBAAoBpjC,IAKzB4gC,GAAAG,wBAChC,CACQ,IAAApB,GACI14B,KAAK+7B,WAAY,CAE7B,CACQ,IAAA7D,GACIl4B,KAAK+7B,WAAY,CAE7B,CACQ,cAAApE,CAAegK,GAAY,GAEvB,GADA3hC,KAAKpI,QAAQ+/B,gBAAkB33B,KAAKpI,QAAQ+/B,iBACxCgK,EAAW,CACL,MAAAvM,EAAQp1B,KAAKq1B,WACnBD,GAASA,EAAMuC,gBAC/B,CACgB33B,KAAK44B,eAAiB54B,KAAK44B,aAAahpC,WACxCoQ,KAAK44B,kBAAe,EAEpC,CACQ,kBAAA8E,CAAmBp8B,EAAOk8B,GAA+B,GACrD,MAAMnF,EAAWr4B,KAAKq4B,SAChBuJ,EAAuBvJ,EACvBA,EAAS1gC,aACT,CAAE,EACFkqC,EAAc,IAAK7hC,KAAKrI,cACxByoC,Ef15BS,CACvBzuC,EAP2B,CAC3Bg6B,UAAW,EACX34B,MAAO,EACPwH,OAAQ,EACRkxB,YAAa,GAIb95B,EAR2B,CAC3B+5B,UAAW,EACX34B,MAAO,EACPwH,OAAQ,EACRkxB,YAAa,Ie65BA1rB,KAAKsgC,gBACLtgC,KAAKsgC,eAAe1oC,QAAQ6lC,aACxBz9B,KAAAi9B,eAAiBj9B,KAAK6gC,0BAAuB,GAEtD7gC,KAAK2gC,gCAAkCnD,EACvC,MAAMsE,Ef35BO,CACrBnwC,EAFsB,CAAEc,IAAK,EAAGC,IAAK,GAGrCd,EAHsB,CAAEa,IAAK,EAAGC,IAAK,Ie+5BvBqvC,GAFiB1J,EAAWA,EAASr/B,YAAS,MAC/BgH,KAAKxT,OAASwT,KAAKxT,OAAOwM,YAAS,GAElDo8B,EAAQp1B,KAAKq1B,WACb2M,GAAgB5M,GAASA,EAAME,QAAQtjC,QAAU,EACjDiwC,EAAyB92C,QAAQ42C,IAClCC,IAC0B,IAA3BhiC,KAAKpI,QAAQ6gC,YACZz4B,KAAKk8B,KAAKlxC,KAAKk3C,KAEhB,IAAAC,EADJniC,KAAKg8B,kBAAoB,EAEpBh8B,KAAAoiC,eAAkBhnC,IACnB,MAAM0U,EAAW1U,EAAS,IL36B1C,IAAmBmJ,EAAGC,EK66CNqN,EAAQjC,EAAMC,EAAI/mB,EAjgBlBu5C,GAAajC,EAAYzuC,EAAG2P,EAAM3P,EAAGme,GACrCuyB,GAAajC,EAAYxuC,EAAG0P,EAAM1P,EAAGke,GACrC9P,KAAKmgC,eAAeC,GAChBpgC,KAAKi9B,gBACLj9B,KAAK6gC,sBACL7gC,KAAKxT,QACLwT,KAAKsgC,gBACLtgC,KAAKsgC,eAAe9zC,SACpBw/B,GAAqB8V,EAAgB9hC,KAAKxT,OAAOsjC,UAAW9vB,KAAKsgC,eAAe9zC,OAAOsjC,WAyf3Fje,EAxfW7R,KAAKi9B,eAwfRrtB,EAxfwB5P,KAAK6gC,qBAwfvBhxB,EAxf6CiyB,EAwfzCh5C,EAxfyDgnB,EAyfvFwyB,GAAQzwB,EAAOlgB,EAAGie,EAAKje,EAAGke,EAAGle,EAAG7I,GAChCw5C,GAAQzwB,EAAOjgB,EAAGge,EAAKhe,EAAGie,EAAGje,EAAG9I,GArfZq5C,IL17BL59B,EK27BevE,KAAKi9B,eL37BjBz4B,EK27BiC29B,EL17B3C59B,EAAE5S,EAAEc,MAAQ+R,EAAE7S,EAAEc,KACpB8R,EAAE5S,EAAEe,MAAQ8R,EAAE7S,EAAEe,KAChB6R,EAAE3S,EAAEa,MAAQ+R,EAAE5S,EAAEa,KAChB8R,EAAE3S,EAAEc,MAAQ8R,EAAE5S,EAAEc,OKw7BAsN,KAAKu6B,mBAAoB,GAExB4H,IACDA,Ef57BC,CACrBxwC,EAFsB,CAAEc,IAAK,EAAGC,IAAK,GAGrCd,EAHsB,CAAEa,IAAK,EAAGC,IAAK,Ke87BTokC,GAAAqL,EAAoBniC,KAAKi9B,iBAErC8E,IACA/hC,KAAKs4B,gBAAkBuJ,ERj8B3C,SAAmB9oC,EAAQwpC,EAAQ1K,EAAM/nB,EAAUmyB,EAAwBD,GACnEC,GACAlpC,EAAO9B,QAAUuH,GAAI,OAEJ,IAAjBq5B,EAAK5gC,QAAwB4gC,EAAK5gC,QAAU,EAAGw/B,GAAgB3mB,IACxD/W,EAAAypC,YAAchkC,QAAuB,IAAnB+jC,EAAOtrC,QAAwBsrC,EAAOtrC,QAAU,EAAG,EAAG0/B,GAAiB7mB,KAE3FkyB,IACLjpC,EAAO9B,QAAUuH,QAAuB,IAAnB+jC,EAAOtrC,QAAwBsrC,EAAOtrC,QAAU,OAAoB,IAAjB4gC,EAAK5gC,QAAwB4gC,EAAK5gC,QAAU,EAAG6Y,IAK3H,IAAA,IAASpX,EAAI,EAAGA,EAAI09B,GAAY19B,IAAK,CACjC,MAAM+pC,EAAc,SAAStM,GAAQz9B,WACjC,IAAAgqC,EAAenM,GAAUgM,EAAQE,GACjCE,EAAapM,GAAUsB,EAAM4K,QACZ,IAAjBC,QAA6C,IAAfC,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACArM,GAAKoM,KAAkBpM,GAAKqM,IAE5B5pC,EAAO0pC,GAAe9vC,KAAKD,IAAI8L,GAAI63B,GAASqM,GAAerM,GAASsM,GAAa7yB,GAAW,IACxFjc,EAAQ5C,KAAK0xC,IAAe9uC,EAAQ5C,KAAKyxC,MACzC3pC,EAAO0pC,IAAgB,MAI3B1pC,EAAO0pC,GAAeE,EAElC,EAIQJ,EAAOrsC,QAAU2hC,EAAK3hC,UACf6C,EAAA7C,OAASsI,GAAI+jC,EAAOrsC,QAAU,EAAG2hC,EAAK3hC,QAAU,EAAG4Z,GAElE,CQ05BoB8yB,CAAUf,EAAaD,EAAsB5hC,KAAKrI,aAAcmY,EAAUmyB,EAAwBD,IAEtGhiC,KAAK8G,KAAK83B,2BACV5+B,KAAK23B,iBACL33B,KAAKg8B,kBAAoBlsB,CAAAA,EAE7B9P,KAAKoiC,eAAepiC,KAAKpI,QAAQ6lC,WAAa,IAAO,EACjE,CACQ,cAAApa,CAAezrB,GACXoI,KAAKm8B,gBAAgB,kBAChBn8B,KAAAy1B,kBAAoBz1B,KAAKy1B,iBAAiB1c,OAC3C/Y,KAAK44B,cAAgB54B,KAAK44B,aAAanD,kBAClCz1B,KAAA44B,aAAanD,iBAAiB1c,OAEnC/Y,KAAKghC,mBACLjgC,GAAYf,KAAKghC,kBACjBhhC,KAAKghC,sBAAmB,GAOvBhhC,KAAAghC,iBAAmBngC,GAAMjS,QAAO,KACjCykC,GAAsBC,wBAAyB,EAC1CtzB,KAAAy1B,iBIj+BrB,SAA4B/lC,EAAO0kB,EAAWxc,GAC1C,MAAMirC,EAAgBrxC,EAAc9B,GAASA,EAAQk0B,GAAYl0B,GAEjE,OADAmzC,EAAcn4C,MAAMm1B,GAAmB,GAAIgjB,EAAezuB,EAAWxc,IAC9DirC,EAAc72C,SACzB,CJ69BwC82C,CAAmB,EAr8BnC,IAq8BuD,IACxDlrC,EACHqiB,SAAW7e,IACP4E,KAAKoiC,eAAehnC,GACZxD,EAAAqiB,UAAYriB,EAAQqiB,SAAS7e,EAAM,EAE/C4e,WAAY,KACApiB,EAAAoiB,YAAcpiB,EAAQoiB,aAC9Bha,KAAK+iC,mBAAmB,IAG5B/iC,KAAK44B,eACA54B,KAAA44B,aAAanD,iBAAmBz1B,KAAKy1B,kBAE9Cz1B,KAAKghC,sBAAmB,CAAA,GAExC,CACQ,iBAAA+B,GACQ/iC,KAAK44B,eACL54B,KAAK44B,aAAanD,sBAAmB,EACrCz1B,KAAK44B,aAAaR,qBAAkB,GAElC,MAAAhD,EAAQp1B,KAAKq1B,WACnBD,GAASA,EAAMuD,wBACf34B,KAAK44B,aACD54B,KAAKy1B,iBACDz1B,KAAKs4B,qBACD,EACZt4B,KAAKm8B,gBAAgB,oBACjC,CACQ,eAAAS,GACQ58B,KAAKy1B,mBACAz1B,KAAAoiC,gBAAkBpiC,KAAKoiC,eAr+BpB,KAs+BRpiC,KAAKy1B,iBAAiB1c,QAE1B/Y,KAAK+iC,mBACjB,CACQ,uBAAAC,GACU,MAAAnL,EAAO73B,KAAKygC,UAClB,IAAIK,qBAAEA,EAAsB/nC,OAAAA,EAAQvM,OAAAA,EAAAA,aAAQmL,GAAiBkgC,EAC7D,GAAKiJ,GAAyB/nC,GAAWvM,EAAzC,CAOA,GAAIwT,OAAS63B,GACT73B,KAAKxT,QACLA,GACAy2C,GAA0BjjC,KAAKpI,QAAQsrC,cAAeljC,KAAKxT,OAAOsjC,UAAWtjC,EAAOsjC,WAAY,CACvF/2B,EAAAiH,KAAKjH,Qf7gCL,CACrBpH,EAFsB,CAAEc,IAAK,EAAGC,IAAK,GAGrCd,EAHsB,CAAEa,IAAK,EAAGC,IAAK,Ie+gCzB,MAAMywC,EAAU9X,GAAWrrB,KAAKxT,OAAOsjC,UAAUn+B,GACjDoH,EAAOpH,EAAEc,IAAMolC,EAAK9+B,OAAOpH,EAAEc,IAC7BsG,EAAOpH,EAAEe,IAAMqG,EAAOpH,EAAEc,IAAM0wC,EAC9B,MAAMC,EAAU/X,GAAWrrB,KAAKxT,OAAOsjC,UAAUl+B,GACjDmH,EAAOnH,EAAEa,IAAMolC,EAAK9+B,OAAOnH,EAAEa,IAC7BsG,EAAOnH,EAAEc,IAAMqG,EAAOnH,EAAEa,IAAM2wC,CAC9C,CACYtM,GAAYgK,EAAsB/nC,GAMlCo1B,GAAa2S,EAAsBnpC,GAOnCi0B,GAAa5rB,KAAKyhC,6BAA8BzhC,KAAK++B,gBAAiB+B,EAAsBnpC,EA/BxF,CAgChB,CACQ,kBAAAklC,CAAmB/uC,EAAUwX,GACpBtF,KAAKi8B,YAAYtrC,IAAI7C,IACtBkS,KAAKi8B,YAAYrrC,IAAI9C,EAAU,IAAI4pC,IAEzB13B,KAAKi8B,YAAYxrC,IAAI3C,GAC7BqS,IAAImF,GACJ,MAAA3G,EAAS2G,EAAK1N,QAAQyrC,uBAC5B/9B,EAAK4vB,QAAQ,CACTx1B,WAAYf,EAASA,EAAOe,gBAAa,EACzCu4B,sBAAuBt5B,GAAUA,EAAO2kC,4BAClC3kC,EAAO2kC,4BAA4Bh+B,QACnC,GAEtB,CACQ,MAAAowB,GACU,MAAAN,EAAQp1B,KAAKq1B,WACZ,OAAAD,GAAQA,EAAMyC,OAAS73B,IAC1C,CACQ,OAAAygC,GACQ,IAAAnmC,EACE,MAAAxM,SAAEA,GAAakS,KAAKpI,QACnB,OAAA9J,IAAuC,QAA1BwM,EAAK0F,KAAKq1B,kBAA+B,IAAP/6B,OAAgB,EAASA,EAAGu9B,OAAgB73B,IAC9G,CACQ,WAAAujC,GACQ,IAAAjpC,EACE,MAAAxM,SAAEA,GAAakS,KAAKpI,QACnB,OAAA9J,EAAsC,QAA1BwM,EAAK0F,KAAKq1B,kBAA+B,IAAP/6B,OAAgB,EAASA,EAAGs9B,cAAW,CACxG,CACQ,QAAAvC,GACU,MAAAvnC,SAAEA,GAAakS,KAAKpI,QACtB,GAAA9J,EACA,OAAOkS,KAAK8G,KAAKm1B,YAAYxrC,IAAI3C,EACjD,CACQ,OAAAonC,EAAQ2F,WAAEA,EAAAn7B,WAAYA,wBAAYu4B,GAA2B,CAAA,GACnD,MAAA7C,EAAQp1B,KAAKq1B,WACfD,GACMA,EAAAF,QAAQl1B,KAAMi4B,GACpB4C,IACA76B,KAAK8zB,qBAAkB,EACvB9zB,KAAK66B,YAAa,GAElBn7B,GACKM,KAAA80B,WAAW,CAAEp1B,cAClC,CACQ,QAAAy1B,GACU,MAAAC,EAAQp1B,KAAKq1B,WACnB,QAAID,GACOA,EAAMD,SAASn1B,KAKtC,CACQ,aAAAg+B,GACU,MAAA/vC,cAAEA,GAAkB+R,KAAKpI,QAC/B,IAAK3J,EACD,OAEJ,IAAIu1C,GAAY,EAKV,MAAA7rC,aAAEA,GAAiB1J,EAQzB,IAPI0J,EAAazB,QACbyB,EAAaxB,SACbwB,EAAavB,SACbuB,EAAatB,WACDmtC,GAAA,IAGXA,EACD,OACJ,MAAMC,EAAc,CAAE,EAEtB,IAAA,IAAS/qC,EAAI,EAAGA,EAAI8gC,GAAcxnC,OAAQ0G,IAAK,CACrC,MAAAhM,EAAM,SAAW8sC,GAAc9gC,GAEjCf,EAAajL,KACD+2C,EAAA/2C,GAAOiL,EAAajL,GAClBuB,EAAAy1C,eAAeh3C,EAAK,GAEtD,CAGYuB,EAAce,SAEd,IAAA,MAAWtC,KAAO+2C,EACdx1C,EAAcy1C,eAAeh3C,EAAK+2C,EAAY/2C,IAIlDuB,EAAc0pC,gBAC1B,CACQ,mBAAA16B,CAAoBF,GAChB,IAAIzC,EAAI0X,EACJ,IAAChS,KAAKpQ,UAAYoQ,KAAK46B,MAChB,OACP,IAAC56B,KAAK+7B,UACC,OAAAtC,GAEX,MAAMkK,EAAS,CACXjK,WAAY,IAEV7hC,EAAoBmI,KAAKi+B,uBAC/B,GAAIj+B,KAAK66B,WAQE,OAPP76B,KAAK66B,YAAa,EAClB8I,EAAO1sC,QAAU,GACV0sC,EAAAC,cACHtlC,GAAmBvB,aAA6C,EAASA,EAAU6mC,gBAAkB,GACzGD,EAAOpxC,UAAYsF,EACbA,EAAkBmI,KAAKrI,aAAc,IACrC,OACCgsC,EAEL,MAAA9L,EAAO73B,KAAKygC,UACd,IAACzgC,KAAK8zB,kBAAoB9zB,KAAKxT,SAAWqrC,EAAK9+B,OAAQ,CACvD,MAAM8qC,EAAc,CAAE,EAef,OAdH7jC,KAAKpI,QAAQ9J,WACb+1C,EAAY5sC,aACsB,IAA9B+I,KAAKrI,aAAaV,QACZ+I,KAAKrI,aAAaV,QAClB,EACE4sC,EAAAD,cACRtlC,GAAmBvB,aAA6C,EAASA,EAAU6mC,gBAAkB,IAEzG5jC,KAAK87B,eAAiB7jC,GAAa+H,KAAKrI,gBACxCksC,EAAYtxC,UAAYsF,EAClBA,EAAkB,CAAE,EAAE,IACtB,OACNmI,KAAK87B,cAAe,GAEjB+H,CACvB,CACkB,MAAAC,EAAiBjM,EAAKS,iBAAmBT,EAAKlgC,aACpDqI,KAAKgjC,0BACLW,EAAOpxC,UAAYumC,GAAyB94B,KAAKyhC,6BAA8BzhC,KAAK6zB,UAAWiQ,GAC3FjsC,IACA8rC,EAAOpxC,UAAYsF,EAAkBisC,EAAgBH,EAAOpxC,YAEhE,MAAMZ,EAAEA,EAAAC,EAAGA,GAAMoO,KAAK8zB,gBACf6P,EAAA3rC,gBAAkB,GAAc,IAAXrG,EAAE6I,WAA4B,IAAX5I,EAAE4I,YAC7Cq9B,EAAKS,gBAKEqL,EAAA1sC,QACH4gC,IAAS73B,KACiG,QAAnGgS,EAAuC,QAAjC1X,EAAKwpC,EAAe7sC,eAA4B,IAAPqD,EAAgBA,EAAK0F,KAAKrI,aAAaV,eAA4B,IAAP+a,EAAgBA,EAAK,EACjIhS,KAAKo4B,gBACDp4B,KAAKrI,aAAaV,QAClB6sC,EAAetB,YAO7BmB,EAAO1sC,QACH4gC,IAAS73B,UACwB,IAA3B8jC,EAAe7sC,QACX6sC,EAAe7sC,QACf,QAC2B,IAA/B6sC,EAAetB,YACXsB,EAAetB,YACf,EAKlB,IAAA,MAAW91C,KAAOwE,EAAiB,CAC3B,QAAwB,IAAxB4yC,EAAep3C,GACf,SACJ,MAAMinC,QAAEA,EAAAsC,QAASA,GAAY/kC,EAAgBxE,GAOvCq3C,EAAiC,SAArBJ,EAAOpxC,UACnBuxC,EAAep3C,GACfinC,EAAQmQ,EAAep3C,GAAMmrC,GACnC,GAAI5B,EAAS,CACT,MAAM+N,EAAM/N,EAAQjkC,OACpB,IAAA,IAAS0G,EAAI,EAAGA,EAAIsrC,EAAKtrC,IACdirC,EAAA1N,EAAQv9B,IAAMqrC,CAE7C,MAEoBJ,EAAOj3C,GAAOq3C,CAElC,CAYmB,OANH/jC,KAAKpI,QAAQ9J,WACb61C,EAAOC,cACH/L,IAAS73B,KACH1B,GAAmBvB,aAA6C,EAASA,EAAU6mC,gBAAkB,GACrG,QAEPD,CACnB,CACQ,aAAAjF,GACS1+B,KAAAm4B,WAAan4B,KAAKq4B,cAAW,CAC9C,CAEQ,SAAA4L,GACIjkC,KAAK8G,KAAKy0B,MAAMh8B,SAAS+F,IAAe,IAAAhL,EAAY,OAAgC,QAAhCA,EAAKgL,EAAKmwB,wBAAqC,IAAPn7B,OAAgB,EAASA,EAAGye,MAAM,IACzH/Y,KAAA8G,KAAKy0B,MAAMh8B,QAAQ8+B,IACnBr+B,KAAA8G,KAAKm1B,YAAYv7B,OAClC,EAEA,CACA,SAASiyB,GAAartB,GAClBA,EAAKqtB,cACT,CACA,SAAS6L,GAAmBl5B,GACpB,IAAAhL,EACE,MAAA+9B,GAAuC,QAA1B/9B,EAAKgL,EAAK6yB,kBAA+B,IAAP79B,OAAgB,EAASA,EAAG+9B,WAAa/yB,EAAK+yB,SAC/F,GAAA/yB,EAAKowB,UACLpwB,EAAK9Y,QACL6rC,GACA/yB,EAAKg3B,aAAa,aAAc,CAChC,MAAQxM,UAAWtjC,EAAQozC,YAAasE,GAAmB5+B,EAAK9Y,QAC1D02C,cAAEA,GAAkB59B,EAAK1N,QACzB8oC,EAAWrI,EAASr/B,SAAWsM,EAAK9Y,OAAOwM,OAG3B,SAAlBkqC,EACAtW,IAAUtB,IACA,MAAA6Y,EAAezD,EACfrI,EAASuH,YAAYtU,GACrB+M,EAASvI,UAAUxE,GACnBt5B,EAASq5B,GAAW8Y,GACbA,EAAA1xC,IAAMjG,EAAO8+B,GAAM74B,IACnB0xC,EAAAzxC,IAAMyxC,EAAa1xC,IAAMT,CAAA,IAGrCixC,GAA0BC,EAAe7K,EAASvI,UAAWtjC,IAClEogC,IAAUtB,IACA,MAAA6Y,EAAezD,EACfrI,EAASuH,YAAYtU,GACrB+M,EAASvI,UAAUxE,GACnBt5B,EAASq5B,GAAW7+B,EAAO8+B,IACpB6Y,EAAAzxC,IAAMyxC,EAAa1xC,IAAMT,EAIlCsT,EAAK23B,iBAAmB33B,EAAKmwB,mBAC7BnwB,EAAKi1B,mBAAoB,EACpBj1B,EAAA23B,eAAe3R,GAAM54B,IACtB4S,EAAK23B,eAAe3R,GAAM74B,IAAMT,EACxD,IAGQ,MAAMoyC,Ef7yCa,CACvBzyC,EAP2B,CAC3Bg6B,UAAW,EACX34B,MAAO,EACPwH,OAAQ,EACRkxB,YAAa,GAIb95B,EAR2B,CAC3B+5B,UAAW,EACX34B,MAAO,EACPwH,OAAQ,EACRkxB,YAAa,IegzCIE,GAAAwY,EAAa53C,EAAQ6rC,EAASvI,WAC3C,MAAMuU,Ef/yCa,CACvB1yC,EAP2B,CAC3Bg6B,UAAW,EACX34B,MAAO,EACPwH,OAAQ,EACRkxB,YAAa,GAIb95B,EAR2B,CAC3B+5B,UAAW,EACX34B,MAAO,EACPwH,OAAQ,EACRkxB,YAAa,IekzCLgV,EACA9U,GAAayY,EAAa/+B,EAAKy6B,eAAemE,GAAgB,GAAO7L,EAASuH,aAGjEhU,GAAAyY,EAAa73C,EAAQ6rC,EAASvI,WAEzC,MAAAoD,GAAoBqE,GAAY6M,GACtC,IAAItH,GAA2B,EAC3B,IAACx3B,EAAK6yB,WAAY,CACZ,MAAAmI,EAAiBh7B,EAAKs7B,6BAKxB,GAAAN,IAAmBA,EAAenI,WAAY,CAC9C,MAAQE,SAAUiM,EAAgB93C,OAAQ+3C,GAAiBjE,EAC3D,GAAIgE,GAAkBC,EAAc,CAChC,MAAMC,Ef5zCD,CACrB7yC,EAFsB,CAAEc,IAAK,EAAGC,IAAK,GAGrCd,EAHsB,CAAEa,IAAK,EAAGC,IAAK,Ie8zCrBs5B,GAAqBwY,EAAkBnM,EAASvI,UAAWwU,EAAexU,WAC1E,MAAMgS,Ef9zCD,CACrBnwC,EAFsB,CAAEc,IAAK,EAAGC,IAAK,GAGrCd,EAHsB,CAAEa,IAAK,EAAGC,IAAK,Ieg0CAs5B,GAAA8V,EAAgBt1C,EAAQ+3C,EAAazU,WACrD0H,GAAiBgN,EAAkB1C,KACThF,GAAA,GAE3BwD,EAAe1oC,QAAQ6lC,aACvBn4B,EAAK23B,eAAiB6E,EACtBx8B,EAAKu7B,qBAAuB2D,EAC5Bl/B,EAAKg7B,eAAiBA,EAE9C,CACA,CACA,CACQh7B,EAAK62B,gBAAgB,YAAa,CAC9B3vC,OAAAA,EACA6rC,WACA/2B,MAAO+iC,EACPD,cACAlR,mBACA4J,4BAEZ,MAAA,GACax3B,EAAKowB,SAAU,CACd,MAAA3M,eAAEA,GAAmBzjB,EAAK1N,QAChCmxB,GAAkBA,GAC1B,CAMIzjB,EAAK1N,QAAQ8H,gBAAa,CAC9B,CACA,SAAS87B,GAAoBl2B,GAILq0B,GAAAC,aACft0B,EAAKpX,SAQLoX,EAAKy7B,iBACDz7B,EAAAi1B,kBAAoBj1B,EAAKpX,OAAOqsC,mBAOpCj1B,EAAAk1B,0BAA4Bl1B,EAAKk1B,wBAA0BrvC,QAAQma,EAAKi1B,mBACzEj1B,EAAKpX,OAAOqsC,mBACZj1B,EAAKpX,OAAOssC,0BAChBl1B,EAAKm1B,mBAAqBn1B,EAAKm1B,iBAAmBn1B,EAAKpX,OAAOusC,kBAClE,CACA,SAASkB,GAAgBr2B,GACrBA,EAAKi1B,kBACDj1B,EAAKk1B,wBACDl1B,EAAKm1B,kBACD,CAChB,CACA,SAASiE,GAAcp5B,GACnBA,EAAKo5B,eACT,CACA,SAASL,GAAkB/4B,GACvBA,EAAK+4B,mBACT,CACA,SAASC,GAAmBh5B,GACxBA,EAAKkzB,eAAgB,CACzB,CACA,SAAS+F,GAAoBj5B,GACnB,MAAArX,cAAEA,GAAkBqX,EAAK1N,QAC3B3J,GAAiBA,EAAc2X,WAAW6+B,uBAC1Cx2C,EAAcwzB,OAAO,uBAEzBnc,EAAK80B,gBACT,CACA,SAASwC,GAAgBt3B,GACrBA,EAAKs3B,kBACLt3B,EAAK86B,YAAc96B,EAAK23B,eAAiB33B,EAAKvM,YAAS,EACvDuM,EAAKi1B,mBAAoB,CAC7B,CACA,SAASkB,GAAmBn2B,GACxBA,EAAKm2B,oBACT,CACA,SAASC,GAAep2B,GACpBA,EAAKo2B,gBACT,CACA,SAASsC,GAAc14B,GACnBA,EAAK04B,eACT,CACA,SAASW,GAAoBvJ,GACzBA,EAAMyD,oBACV,CACA,SAASwJ,GAAaxwB,EAAQvQ,EAAOxY,GACjC+oB,EAAO8Z,UAAYntB,GAAI8C,EAAMqqB,UAAW,EAAG7iC,GAC3C+oB,EAAO7e,MAAQwL,GAAI8C,EAAMtO,MAAO,EAAGlK,GACnC+oB,EAAOrX,OAAS8G,EAAM9G,OACtBqX,EAAO6Z,YAAcpqB,EAAMoqB,WAC/B,CACA,SAAS4W,GAAQzwB,EAAQjC,EAAMC,EAAI/mB,GAC/B+oB,EAAOpf,IAAM+L,GAAIoR,EAAKnd,IAAKod,EAAGpd,IAAK3J,GACnC+oB,EAAOnf,IAAM8L,GAAIoR,EAAKld,IAAKmd,EAAGnd,IAAK5J,EACvC,CAKA,SAASo5C,GAAoB58B,GACzB,OAAQA,EAAKgzB,sBAAwD,IAArChzB,EAAKgzB,gBAAgBkK,WACzD,CACA,MAAMrF,GAA0B,CAC5B9oB,SAAU,IACVzI,KAAM,CAAC,GAAK,EAAG,GAAK,IAElB84B,GAAqBC,GAAgC,oBAAdC,WACzCA,UAAUC,UAAUh7C,cAAckH,SAAS4zC,GAMzCG,GAAaJ,GAAkB,kBAAoBA,GAAkB,WACrE/xC,KAAKQ,MACLyM,GACN,SAAS+/B,GAAUrU,GAEVA,EAAA74B,IAAMqyC,GAAWxZ,EAAK74B,KACtB64B,EAAA54B,IAAMoyC,GAAWxZ,EAAK54B,IAC/B,CAKA,SAASuwC,GAA0BC,EAAe7K,EAAU7rC,GACxD,MAA0B,aAAlB02C,GACe,oBAAlBA,IACI3X,GAAOkM,GAAYY,GAAWZ,GAAYjrC,GAAS,GAChE,CKp9CA,MAAMu4C,GAAyBhL,GAAqB,CAChDC,qBAAsB,CAAChwC,EAAKy3B,IAAWne,GAAYtZ,EAAK,SAAUy3B,GAClEyY,cAAe,KAAO,CAClBvoC,EAAGvI,SAAS47C,gBAAgBC,YAAc77C,SAAS87C,KAAKD,WACxDrzC,EAAGxI,SAAS47C,gBAAgBG,WAAa/7C,SAAS87C,KAAKC,YAE3DhL,kBAAmB,KAAM,ICNvB5I,GAAqB,CACvB9iC,aAAS,GAEP22C,GAAqBrL,GAAqB,CAC5CG,cAAgBtqC,IAAc,CAC1B+B,EAAG/B,EAASq1C,WACZrzC,EAAGhC,EAASu1C,YAEhBlL,cAAe,KACP,IAAC1I,GAAmB9iC,QAAS,CAC7B,MAAM42C,EAAe,IAAIN,GAAuB,IAChDM,EAAax1C,MAAMf,QACnBu2C,EAAavQ,WAAW,CAAEoK,cAAc,IACxC3N,GAAmB9iC,QAAU42C,CACzC,CACQ,OAAO9T,GAAmB9iC,OAAA,EAE9B2rC,eAAgB,CAACxqC,EAAUF,KACvBE,EAASkI,MAAMvF,eAAsB,IAAV7C,EAAsBA,EAAQ,MAAA,EAE7DyqC,kBAAoBvqC,GAAazE,QAAuD,UAA/C2D,OAAOw2C,iBAAiB11C,GAAU21C,YClBzEr5C,GAAO,CACTI,IAAK,CACD+Y,QrBKR,cAAyBA,GACrB,WAAAtF,GACI2H,SAASC,WACT3H,KAAKwlC,0BAA4B5lC,EACzC,CACI,aAAA6lC,CAAcC,GACV1lC,KAAK2lC,QAAU,IAAIvc,GAAWsc,EAAkB1lC,KAAK4lC,oBAAqB,CACtE/8C,mBAAoBmX,KAAKsF,KAAKgrB,wBAC9BhH,cAAekF,GAAiBxuB,KAAKsF,OAEjD,CACI,iBAAAsgC,GACU,MAAAC,kBAAEA,aAAmBC,EAAYC,MAAAA,EAAAC,SAAOA,GAAahmC,KAAKsF,KAAKM,WAC9D,MAAA,CACHilB,eAAgBsI,GAAa0S,GAC7B3b,QAASiJ,GAAa2S,GACtB3b,OAAQ4b,EACRvb,MAAO,CAAC3mB,EAAO8B,YACJ3F,KAAK2lC,QACRK,GACAnlC,GAAMjS,QAAO,IAAMo3C,EAASniC,EAAO8B,IACvD,EAGA,CACI,KAAA9V,GACSmQ,KAAAwlC,0BAA4BphC,GAAgBpE,KAAKsF,KAAK7W,QAAS,eAAgBoV,GAAU7D,KAAKylC,cAAc5hC,IACzH,CACI,MAAAjV,GACIoR,KAAK2lC,SAAW3lC,KAAK2lC,QAAQ5a,eAAe/qB,KAAK4lC,oBACzD,CACI,OAAA91C,GACIkQ,KAAKwlC,4BACAxlC,KAAA2lC,SAAW3lC,KAAK2lC,QAAQpb,KACrC,IqBrCIr+B,KAAM,CACFmZ,QCNR,cAA0BA,GACtB,WAAAtF,CAAYuF,GACRoC,MAAMpC,GACNtF,KAAKimC,oBAAsBrmC,GAC3BI,KAAK8qB,gBAAkBlrB,GAClBI,KAAAgc,SAAW,IAAI4S,GAA0BtpB,EACtD,CACI,KAAAzV,GAGI,MAAMq2C,aAAEA,GAAiBlmC,KAAKsF,KAAKM,WAC/BsgC,IACAlmC,KAAKimC,oBAAsBC,EAAatd,UAAU5oB,KAAKgc,WAE3Dhc,KAAK8qB,gBAAkB9qB,KAAKgc,SAAS4W,gBAAkBhzB,EAC/D,CACI,OAAA9P,GACIkQ,KAAKimC,sBACLjmC,KAAK8qB,iBACb,GDZQqb,eAAgBf,GAChBx3C,mBECFw4C,GAAwB,uDAS9B,SAASC,GAAiB53C,EAASqO,EAASu8B,EAAQ,GAEhD,MAAOnnC,EAAOo0C,GAVlB,SAA0B73C,GAChB,MAAAkgB,EAAQy3B,GAAsBG,KAAK93C,GACzC,IAAKkgB,EACD,MAAO,CAAG,GACd,MAAS,CAAAzc,EAAOo0C,GAAY33B,EACrB,MAAA,CAACzc,EAAOo0C,EACnB,CAI8BE,CAAiB/3C,GAE3C,IAAKyD,EACD,OAEJ,MAAMsN,EAAW1Q,OAAOw2C,iBAAiBxoC,GAAS2pC,iBAAiBv0C,GACnE,GAAIsN,EAAU,CACJ,MAAAknC,EAAUlnC,EAAS7G,OACzB,OAAOwoB,GAAkBulB,GAAW5zC,WAAW4zC,GAAWA,CAClE,CAAA,OACat0C,EAAmBk0C,GAEjBD,GAAiBC,EAAUxpC,EAASu8B,EAAQ,GAG5CiN,CAEf,CCjCA,MAAMK,OAAqBt1C,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,IACA,aACA,eAEEu1C,GAAmBl6C,GAAQi6C,GAAeh2C,IAAIjE,GAI9Cm6C,GAAiBv8C,GAAMA,IAAMsI,GAAUtI,IAAMwJ,GAC7CgzC,GAAmB,CAACC,EAAQC,IAAQl0C,WAAWi0C,EAAOpzC,MAAM,MAAMqzC,IAClEC,GAAyB,CAACC,EAAMC,IAAS,CAACC,GAAS70C,gBACjD,GAAc,SAAdA,IAAyBA,EAClB,OAAA,EACL,MAAA80C,EAAW90C,EAAUoc,MAAM,sBACjC,GAAI04B,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAEpC,CACK,MAAAJ,EAASx0C,EAAUoc,MAAM,oBAC/B,OAAIo4B,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,CAEnB,GAEMI,GAAoB,IAAAj2C,IAAI,CAAC,IAAK,IAAK,MACnCk2C,GAAgCp2C,EAAmBwtB,QAAQjyB,IAAS46C,GAAc32C,IAAIjE,KAe5F,MAAM86C,GAAmB,CAErBzyC,MAAO,EAAGpD,MAAOiE,cAAc,IAAKF,eAAe,OAAU/D,EAAEe,IAAMf,EAAEc,IAAMK,WAAW8C,GAAe9C,WAAW4C,GAClHT,OAAQ,EAAGrD,MAAO6D,aAAa,IAAKE,gBAAgB,OAAU/D,EAAEc,IAAMd,EAAEa,IAAMK,WAAW2C,GAAc3C,WAAW6C,GAClHP,IAAK,CAACgyC,GAAShyC,SAAUtC,WAAWsC,GACpCG,KAAM,CAAC6xC,GAAS7xC,UAAWzC,WAAWyC,GACtCD,OAAQ,EAAG1D,MAAOwD,SAAUtC,WAAWsC,IAAQxD,EAAEc,IAAMd,EAAEa,KACzD4C,MAAO,EAAG1D,MAAO4D,UAAWzC,WAAWyC,IAAS5D,EAAEe,IAAMf,EAAEc,KAE1Dd,EAAGs1C,GAAuB,EAAG,IAC7Br1C,EAAGq1C,GAAuB,EAAG,KAGjCO,GAAiB3wC,WAAa2wC,GAAiB71C,EAC/C61C,GAAiB1wC,WAAa0wC,GAAiB51C,EAC/C,MA6BM61C,GAAmC,CAACx5C,EAAe8K,EAAQyB,EAAS,CAAE,EAAEiF,EAAgB,MACjF1G,EAAA,IAAKA,GACE0G,EAAA,IAAKA,GACrB,MAAMioC,EAAuBz9C,OAAO2R,KAAK7C,GAAQ4lB,OAAOioB,IAGxD,IAAIe,EAAyB,GACzBC,GAAsC,EAC1C,MAAMC,EAAuB,GAkF7B,GAjFqBH,EAAAnoC,SAAS7S,IACpB,MAAAgD,EAAQzB,EAAck2B,SAASz3B,GACjC,IAACuB,EAAci2B,SAASx3B,GACxB,OACA,IAAAkjB,EAAOpV,EAAO9N,GACdo7C,EAAW/jB,GAAuBnU,GAChC,MAAAC,EAAK9W,EAAOrM,GACd,IAAAq7C,EAKA,GAAA1pC,GAAkBwR,GAAK,CACvB,MAAMm4B,EAAen4B,EAAG7d,OAClBi2C,EAAsB,OAAVp4B,EAAG,GAAc,EAAI,EACvCD,EAAOC,EAAGo4B,GACVH,EAAW/jB,GAAuBnU,GAClC,IAAA,IAASlX,EAAIuvC,EAAWvvC,EAAIsvC,GAKV,OAAVn4B,EAAGnX,GAL+BA,IAOjCqvC,EAMDl9B,GAAUkZ,GAAuBlU,EAAGnX,MAAQqvC,GALnCA,EAAAhkB,GAAuBlU,EAAGnX,GAQvD,MAEYqvC,EAAShkB,GAAuBlU,GAEpC,GAAIi4B,IAAaC,EAGb,GAAIlB,GAAciB,IAAajB,GAAckB,GAAS,CAC5C,MAAAt5C,EAAUiB,EAAMe,MACC,iBAAZhC,GACDiB,EAAAkB,IAAIkC,WAAWrE,IAEP,iBAAPohB,EACA9W,EAAArM,GAAOoG,WAAW+c,GAEpBtlB,MAAMC,QAAQqlB,IAAOk4B,IAAWj0C,KACrCiF,EAAOrM,GAAOmjB,EAAGxD,IAAIvZ,YAEzC,MACsBg1C,aAA2C,EAASA,EAASv1C,aAClEw1C,aAAuC,EAASA,EAAOx1C,aAC9C,IAATqd,GAAqB,IAAPC,GAGF,IAATD,EACAlgB,EAAMkB,IAAIm3C,EAAOx1C,UAAUqd,IAG3B7W,EAAOrM,GAAOo7C,EAASv1C,UAAUsd,IAMhC+3B,IACDD,EAvIpB,SAAyC15C,GACrC,MAAMi6C,EAAoB,GAWnB,OAVuBX,GAAAhoC,SAAS7S,IAC7B,MAAAgD,EAAQzB,EAAck2B,SAASz3B,QACvB,IAAVgD,IACAw4C,EAAkB7nC,KAAK,CAAC3T,EAAKgD,EAAMe,QACnCf,EAAMkB,IAAIlE,EAAI6E,WAAW,SAAW,EAAI,GACpD,IAGQ22C,EAAkBl2C,QAClB/D,EAAce,SACXk5C,CACX,CA2HwBC,CAAgCl6C,GACE25C,GAAA,GAE1CC,EAAqBxnC,KAAK3T,GACZ+S,EAAA/S,QACa,IAAvB+S,EAAc/S,GACR+S,EAAc/S,GACdqM,EAAOrM,GACjBgD,EAAMyzB,KAAKtT,GAE3B,IAEQg4B,EAAqB71C,OAAQ,CAC7B,MAAMo2C,EAAUP,EAAqB72C,QAAQ,WAAa,EACpDlC,OAAOu5C,YACP,KACAC,EA3HmB,EAACvvC,EAAQ9K,EAAes6C,KAC/C,MAAAC,EAAav6C,EAAcmgC,qBAC3BtxB,EAAU7O,EAAcQ,QACxBg6C,EAAuBnD,iBAAiBxoC,IACxCwkC,QAAEA,GAAYmH,EACdjuC,EAAS,CAAE,EAGD,SAAZ8mC,GACArzC,EAAcy1C,eAAe,UAAW3qC,EAAOuoC,SAAW,SAKlDiH,EAAAhpC,SAAS7S,IACjB8N,EAAO9N,GAAO86C,GAAiB96C,GAAK87C,EAAYC,EAAoB,IAGxEx6C,EAAce,SACR,MAAA05C,EAAaz6C,EAAcmgC,qBAQ1B,OAPKma,EAAAhpC,SAAS7S,IAGX,MAAAgD,EAAQzB,EAAck2B,SAASz3B,GACrCgD,GAASA,EAAMyzB,KAAK3oB,EAAO9N,IAC3BqM,EAAOrM,GAAO86C,GAAiB96C,GAAKg8C,EAAYD,EAAoB,IAEjE1vC,CAAA,EAgGqB4vC,CAAyB5vC,EAAQ9K,EAAe45C,GAajE,OAXHF,EAAuB31C,QACvB21C,EAAuBpoC,SAAQ,EAAE7S,EAAKgD,MAClCzB,EAAck2B,SAASz3B,GAAKkE,IAAIlB,EAAK,IAI7CzB,EAAce,SAEV7F,GAAyB,OAAZi/C,GACbt5C,OAAO85C,SAAS,CAAExzC,IAAKgzC,IAEpB,CAAErvC,OAAQuvC,EAAiB7oC,gBAC1C,CAEe,MAAA,CAAE1G,SAAQ0G,gBACzB,EASA,SAASopC,GAAe56C,EAAe8K,EAAQyB,EAAQiF,GAC5C,MA3Mc,CAAC1G,GACf9O,OAAO2R,KAAK7C,GAAQ/N,KAAK47C,IA0MzBkC,CAAiB/vC,GAClB0uC,GAAiCx5C,EAAe8K,EAAQyB,EAAQiF,GAChE,CAAE1G,SAAQ0G,gBACpB,CC5NA,MAAMspC,GAAkB,CAAC96C,EAAe8K,EAAQyB,EAAQiF,KACpD,MAAMD,EFuCV,SAA6BvR,MAAoB8K,GAAU0G,GACvD,MAAM3C,EAAU7O,EAAcQ,QAC9B,KAAMqO,aAAmB6f,SACd,MAAA,CAAE5jB,SAAQ0G,iBAGjBA,IACgBA,EAAA,IAAKA,IAGXxR,EAAAuO,OAAO+C,SAAS7P,IACpB,MAAAjB,EAAUiB,EAAMe,MAClB,IAAC2B,EAAmB3D,GACpB,OACE,MAAA+Q,EAAW6mC,GAAiB53C,EAASqO,GACvC0C,GACA9P,EAAMkB,IAAI4O,EAAQ,IAI1B,IAAA,MAAW9S,KAAOqM,EAAQ,CAChB,MAAAtK,EAAUsK,EAAOrM,GACnB,IAAC0F,EAAmB3D,GACpB,SACE,MAAA+Q,EAAW6mC,GAAiB53C,EAASqO,GACtC0C,IAGLzG,EAAOrM,GAAO8S,EACTC,IACDA,EAAgB,CAAE,QAIK,IAAvBA,EAAc/S,KACd+S,EAAc/S,GAAO+B,GAEjC,CACW,MAAA,CAAEsK,SAAQ0G,gBACrB,CE9EqBupC,CAAoB/6C,EAAe8K,EAAQ0G,GAG5D,OAAOopC,GAAe56C,EAFtB8K,EAASyG,EAASzG,OAE2ByB,EAD7CiF,EAAgBD,EAASC,cACyC,ECVhEwpC,GAAuB,CAAEx6C,QAAS,MAClCy6C,GAA2B,CAAEz6C,SAAS,GCF5C,MAAM06C,OAAyB7iC,QCoBzB8iC,GAAen/C,OAAO2R,KAAKnP,GAC3B48C,GAAcD,GAAap3C,OAC3Bs3C,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAEEC,GAAkB3+C,EAAaoH,OAKrC,MAAMw3C,GACF,WAAAzpC,EAAY7R,OAAEA,EAAApD,MAAQA,EAAOsD,gBAAAA,EAAAC,oBAAiBA,cAAqBL,GAAgB4J,EAAU,IAKzFoI,KAAKvR,QAAU,KAIVuR,KAAArD,aAAetL,IAIpB2O,KAAK9U,eAAgB,EACrB8U,KAAKnV,uBAAwB,EAQ7BmV,KAAKqlB,mBAAqB,KAMrBrlB,KAAAxD,WAAahM,IAIlBwP,KAAKnT,SAAW,CAAC,EAKZmT,KAAAypC,uBAAyBj5C,IAM9BwP,KAAK0pC,iBAAmB,CAAC,EAIzB1pC,KAAKiiB,OAAS,CAAC,EAMfjiB,KAAK2pC,uBAAyB,CAAC,EAC/B3pC,KAAK4pC,aAAe,IAAM5pC,KAAKyhB,OAAO,SAAUzhB,KAAKrI,cACrDqI,KAAKhR,OAAS,KACLgR,KAAKvR,UAEVuR,KAAK6pC,eACA7pC,KAAA8pC,eAAe9pC,KAAKvR,QAASuR,KAAK3C,YAAa2C,KAAKlV,MAAMgN,MAAOkI,KAAKhD,YAAU,EAEzFgD,KAAK23B,eAAiB,IAAM92B,GAAM7R,OAAOgR,KAAKhR,QAAQ,GAAO,GACvD,MAAA2I,aAAEA,EAAc0F,YAAAA,GAAgBrP,EACtCgS,KAAKrI,aAAeA,EACfqI,KAAA+pC,WAAa,IAAKpyC,GACvBqI,KAAKgqC,cAAgBl/C,EAAMQ,QAAU,IAAKqM,GAAiB,CAAC,EAC5DqI,KAAK3C,YAAcA,EACnB2C,KAAK9R,OAASA,EACd8R,KAAKlV,MAAQA,EACbkV,KAAK5R,gBAAkBA,EACvB4R,KAAKq5B,MAAQnrC,EAASA,EAAOmrC,MAAQ,EAAI,EACzCr5B,KAAK3R,oBAAsBA,EAC3B2R,KAAKpI,QAAUA,EACVoI,KAAAnV,sBAAwBA,EAAsBC,GAC9CkV,KAAA9U,cAAgBA,EAAcJ,GAC/BkV,KAAK9U,gBACA8U,KAAA2lB,oBAAsBt0B,KAE/B2O,KAAK0nB,uBAAyBv8B,QAAQ+C,GAAUA,EAAOO,SAWjD,MAAAq2B,WAAEA,KAAemlB,GAAwBjqC,KAAKxC,4BAA4B1S,EAAO,IACvF,IAAA,MAAW4B,KAAOu9C,EAAqB,CAC7B,MAAAv6C,EAAQu6C,EAAoBv9C,QACR,IAAtBiL,EAAajL,IAAsB8E,EAAc9B,KACjDA,EAAMkB,IAAI+G,EAAajL,IAAM,GACzBw0B,GAAwB4D,IACxBA,EAAW3kB,IAAIzT,GAEvB,CACJ,CASJ,2BAAA8Q,CAA4B0sC,EAAQC,GAChC,MAAO,CAAC,CAAA,CAEZ,KAAAt6C,CAAMD,GACFoQ,KAAKvR,QAAUmB,EACIu5C,GAAAv4C,IAAIhB,EAAUoQ,MAC7BA,KAAKhD,aAAegD,KAAKhD,WAAWpN,UAC/BoQ,KAAAhD,WAAWnN,MAAMD,GAEtBoQ,KAAK9R,QAAU8R,KAAK9U,gBAAkB8U,KAAKnV,wBAC3CmV,KAAKoqC,sBAAwBpqC,KAAK9R,OAAOm8C,gBAAgBrqC,OAExDA,KAAAxD,OAAO+C,SAAQ,CAAC7P,EAAOhD,IAAQsT,KAAKsqC,kBAAkB59C,EAAKgD,KAC3Dw5C,GAAyBz6C,SC1JtC,WAEI,GADAy6C,GAAyBz6C,SAAU,EAC9BtF,EAEL,GAAI2F,OAAOy7C,WAAY,CACb,MAAAC,EAAmB17C,OAAOy7C,WAAW,4BACrCE,EAA8B,IAAOxB,GAAqBx6C,QAAU+7C,EAAiBpgC,QAC3FogC,EAAiBE,YAAYD,GACAA,GACrC,MAEQxB,GAAqBx6C,SAAU,CAEvC,CD8IqCk8C,GAExB3qC,KAAAqlB,mBAC4B,UAA7BrlB,KAAK3R,sBAE8B,WAA7B2R,KAAK3R,qBAED46C,GAAqBx6C,SAI/BuR,KAAK9R,QACA8R,KAAA9R,OAAOyO,SAASwD,IAAIH,MAC7BA,KAAKpR,OAAOoR,KAAKlV,MAAOkV,KAAK5R,gBAAe,CAEhD,OAAA0B,GACuBq5C,GAAA1oC,OAAOT,KAAKvR,SAC1BuR,KAAAhD,YAAcgD,KAAKhD,WAAWlN,UACnCiR,GAAYf,KAAK4pC,cACjB7oC,GAAYf,KAAKhR,QACjBgR,KAAKypC,mBAAmBlqC,SAASe,GAAWA,MACvCN,KAAAoqC,uBAAyBpqC,KAAKoqC,wBACnCpqC,KAAK9R,QAAU8R,KAAK9R,OAAOyO,SAAS8D,OAAOT,MAChC,IAAA,MAAAtT,KAAOsT,KAAKiiB,OACdjiB,KAAAiiB,OAAOv1B,GAAKgU,QAEV,IAAA,MAAAhU,KAAOsT,KAAKnT,SACdmT,KAAAnT,SAASH,GAAKoD,UAEvBkQ,KAAKvR,QAAU,IAAA,CAEnB,iBAAA67C,CAAkB59C,EAAKgD,GACb,MAAAk7C,EAAmBx5C,EAAeT,IAAIjE,GACtCm+C,EAAiBn7C,EAAMkzB,GAAG,UAAWkoB,IAClC9qC,KAAArI,aAAajL,GAAOo+C,EACzB9qC,KAAKlV,MAAMmvB,UACPpZ,GAAMjS,OAAOoR,KAAK4pC,cAAc,GAAO,GACvCgB,GAAoB5qC,KAAKhD,aACzBgD,KAAKhD,WAAWy9B,kBAAmB,EAAA,IAGrCsQ,EAAwBr7C,EAAMkzB,GAAG,gBAAiB5iB,KAAK23B,gBACxD33B,KAAAypC,mBAAmB74C,IAAIlE,GAAK,KACdm+C,IACOE,GAAA,GACzB,CAEL,gBAAA3kB,CAAiB4kB,GAIT,OAAChrC,KAAKvR,SACLuR,KAAKirC,0BACNjrC,KAAK1N,OAAS04C,EAAM14C,KAGjB0N,KAAKirC,yBAAyBjrC,KAAKvR,QAASu8C,EAAMv8C,SAF9C,CAEqD,CAEpE,YAAA7B,EAAa+P,SAAEA,KAAauuC,GAAiB57C,EAAUlC,EAAmBiC,GAClE,IAAA87C,EACAv9C,EAaJ,IAAA,IAAS8K,EAAI,EAAGA,EAAI2wC,GAAa3wC,IAAK,CAC5B,MAAAzN,EAAOm+C,GAAa1wC,IACpB/L,UAAEA,EAAW0Y,QAAS+lC,EAAAjF,eAAoBA,EAAgBv4C,cAAey9C,GAA4B5+C,EAAmBxB,GAC1Hk7C,IAC4BgF,EAAAhF,GAC5Bx5C,EAAUu+C,MACLlrC,KAAKnT,SAAS5B,IAASmgD,IACxBprC,KAAKnT,SAAS5B,GAAQ,IAAImgD,EAAmBprC,OAE7CqrC,IACgBz9C,EAAAy9C,GAExB,CAEC,IAAc,SAAdrrC,KAAK1N,MAAiC,QAAd0N,KAAK1N,QAC7B0N,KAAKhD,YACNmuC,EAA2B,CACtBnrC,KAAAhD,WAAa,IAAImuC,EAA0BnrC,KAAKrI,aAAcqI,KAAK9R,QAAU8R,KAAK9R,OAAO8O,YACxF,MAAAlP,SAAEA,EAAUtB,OAAAA,EAAQN,KAAAA,EAAM0kC,gBAAAA,EAAAsO,aAAiBA,EAAczB,WAAAA,GAAgByN,EAC/ElrC,KAAKhD,WAAW83B,WAAW,CACvBhnC,WACAtB,OAAAA,EACAqyC,oBAAqB1zC,QAAQe,IACxB0kC,GAAmB7mC,EAAY6mC,GACpC3iC,cAAe+R,KACf23B,eAAgB,IAAM33B,KAAK23B,iBAQ3BuL,cAAiC,iBAAX12C,EAAsBA,EAAS,OACrD62C,uBAAwBh0C,EACxB6vC,eACAzB,cACH,CAEE7vC,OAAAA,CAAA,CAEX,cAAAuB,GACe,IAAA,MAAAzC,KAAOsT,KAAKnT,SAAU,CACvB,MAAAy+C,EAAUtrC,KAAKnT,SAASH,GAC1B4+C,EAAQ/lC,UACR+lC,EAAQ18C,UAGR08C,EAAQz7C,QACRy7C,EAAQ/lC,WAAY,EACxB,CACJ,CAEJ,YAAAskC,GACS7pC,KAAAurC,MAAMvrC,KAAK3C,YAAa2C,KAAKrI,aAAcqI,KAAKpI,QAASoI,KAAKlV,MAAK,CAO5E,kBAAAsjC,GACW,OAAApuB,KAAKvR,QACNuR,KAAKwrC,2BAA2BxrC,KAAKvR,QAASuR,KAAKlV,O7B3RxC,CACrB6G,EAFsB,CAAEc,IAAK,EAAGC,IAAK,GAGrCd,EAHsB,CAAEa,IAAK,EAAGC,IAAK,G6B6RjB,CAEpB,cAAA+4C,CAAe/+C,GACJ,OAAAsT,KAAKrI,aAAajL,EAAG,CAEhC,cAAAg3C,CAAeh3C,EAAKgD,GACXsQ,KAAArI,aAAajL,GAAOgD,CAAA,CAS7B,oBAAAm1B,CAAqB9rB,EAAQ2yC,GAAY,GACrC,OAAO1rC,KAAK2rC,iCAAiC5yC,EAAQiH,KAAKlV,MAAO4gD,EAAS,CAM9E,MAAA98C,CAAO9D,EAAOsD,IACNtD,EAAM+M,mBAAqBmI,KAAKlV,MAAM+M,oBACtCmI,KAAK23B,iBAET33B,KAAKvC,UAAYuC,KAAKlV,MACtBkV,KAAKlV,MAAQA,EACbkV,KAAKipB,oBAAsBjpB,KAAK5R,gBAChC4R,KAAK5R,gBAAkBA,EAIvB,IAAA,IAASsK,EAAI,EAAGA,EAAI4wC,GAAkBt3C,OAAQ0G,IAAK,CACzC,MAAAhM,EAAM48C,GAAkB5wC,GAC1BsH,KAAK2pC,uBAAuBj9C,KACvBsT,KAAA2pC,uBAAuBj9C,YACrBsT,KAAK2pC,uBAAuBj9C,IAEjC,MAAAk/C,EAAW9gD,EAAM,KAAO4B,GAC1Bk/C,IACA5rC,KAAK2pC,uBAAuBj9C,GAAOsT,KAAK4iB,GAAGl2B,EAAKk/C,GACpD,CAEC5rC,KAAA0pC,iBE9Ub,SAAqC5sC,EAASyN,EAAMC,GAC1C,MAAAsa,WAAEA,GAAeva,EACvB,IAAA,MAAW7d,KAAO6d,EAAM,CACd,MAAAshC,EAAYthC,EAAK7d,GACjBo/C,EAAYthC,EAAK9d,GACnB,GAAA8E,EAAcq6C,GAKN/uC,EAAAsnB,SAAS13B,EAAKm/C,GAClB3qB,GAAwB4D,IACxBA,EAAW3kB,IAAIzT,QAQnB,GAEK8E,EAAcs6C,GAKXhvC,EAAAsnB,SAAS13B,EAAKk3B,GAAYioB,EAAW,CAAEruB,MAAO1gB,KAClDokB,GAAwB4D,IACxBA,EAAWxkB,OAAO5T,QACtB,GAEKo/C,IAAcD,EAMf,GAAA/uC,EAAQonB,SAASx3B,GAAM,CACjB,MAAAq/C,EAAgBjvC,EAAQqnB,SAASz3B,IAEtCq/C,EAActpB,aAAespB,EAAcn7C,IAAIi7C,EAAS,KAExD,CACK,MAAAf,EAAchuC,EAAQ2uC,eAAe/+C,GACnCoQ,EAAAsnB,SAAS13B,EAAKk3B,QAA4B,IAAhBknB,EAA4BA,EAAce,EAAW,CAAEruB,MAAO1gB,IAAU,CAElH,CAGJ,IAAA,MAAWpQ,KAAO8d,OACI,IAAdD,EAAK7d,IACLoQ,EAAQkvC,YAAYt/C,GAErB,OAAA6d,CACX,CFuRgC0hC,CAA4BjsC,KAAMA,KAAKxC,4BAA4B1S,EAAOkV,KAAKvC,WAAYuC,KAAK0pC,kBACpH1pC,KAAKksC,wBACLlsC,KAAKksC,wBACT,CAEJ,QAAAtmC,GACI,OAAO5F,KAAKlV,KAAA,CAKhB,UAAAqhD,CAAWlhD,GACP,OAAO+U,KAAKlV,MAAMM,SAAW4U,KAAKlV,MAAMM,SAASH,QAAQ,CAAA,CAK7D,oBAAAkzB,GACI,OAAOne,KAAKlV,MAAM4U,UAAA,CAEtB,qBAAA4wB,GACI,OAAOtwB,KAAKlV,MAAMjC,kBAAA,CAEtB,qBAAAujD,GACW,OAAApsC,KAAK9U,cACN8U,KACAA,KAAK9R,OACD8R,KAAK9R,OAAOk+C,6BACZ,CAAA,CAEd,iBAAAllB,CAAkBmlB,GAAgB,GAC9B,GAAIA,EACA,OAAOrsC,KAAK9R,OAAS8R,KAAK9R,OAAOg5B,yBAAsB,EAEvD,IAAClnB,KAAKnV,sBAAuB,CACvBU,MAAAA,EAAUyU,KAAK9R,QACf8R,KAAK9R,OAAOg5B,qBACZ,CAAC,EAIA37B,YAHoB,IAAvByU,KAAKlV,MAAMQ,UACHghD,EAAAhhD,QAAU0U,KAAKlV,MAAMQ,SAE1BC,CAAA,CAEX,MAAMA,EAAU,CAAC,EACjB,IAAA,IAASmN,EAAI,EAAGA,EAAI6wC,GAAiB7wC,IAAK,CAChC,MAAAzN,EAAOL,EAAa8N,GACpB7M,EAAOmU,KAAKlV,MAAMG,IACpBZ,EAAewB,KAAkB,IAATA,KACxBN,EAAQN,GAAQY,EACpB,CAEG,OAAAN,CAAA,CAKX,eAAA8+C,CAAgBrkC,GACN,MAAAumC,EAAqBvsC,KAAKosC,wBAChC,GAAIG,EAGA,OAFAA,EAAmB5mB,iBACf4mB,EAAmB5mB,gBAAgBxlB,IAAI6F,GACpC,IAAMumC,EAAmB5mB,gBAAgBllB,OAAOuF,EAC3D,CAKJ,QAAAoe,CAAS13B,EAAKgD,GAENA,IAAUsQ,KAAKxD,OAAO/L,IAAI/D,KAC1BsT,KAAKgsC,YAAYt/C,GACZsT,KAAAsqC,kBAAkB59C,EAAKgD,IAE3BsQ,KAAAxD,OAAO5L,IAAIlE,EAAKgD,GACrBsQ,KAAKrI,aAAajL,GAAOgD,EAAMe,KAAI,CAKvC,WAAAu7C,CAAYt/C,GACHsT,KAAAxD,OAAOiE,OAAO/T,GACnB,MAAMm2B,EAAc7iB,KAAKypC,mBAAmBh5C,IAAI/D,GAC5Cm2B,IACYA,IACP7iB,KAAAypC,mBAAmBhpC,OAAO/T,WAE5BsT,KAAKrI,aAAajL,GACpBsT,KAAAwsC,2BAA2B9/C,EAAKsT,KAAK3C,YAAW,CAKzD,QAAA6mB,CAASx3B,GACE,OAAAsT,KAAKxD,OAAO7L,IAAIjE,EAAG,CAE9B,QAAAy3B,CAASz3B,EAAK+xB,GACV,GAAIze,KAAKlV,MAAM0R,QAAUwD,KAAKlV,MAAM0R,OAAO9P,GAChC,OAAAsT,KAAKlV,MAAM0R,OAAO9P,GAE7B,IAAIgD,EAAQsQ,KAAKxD,OAAO/L,IAAI/D,GAKrB,YAJO,IAAVgD,QAAwC,IAAjB+uB,IACvB/uB,EAAQk0B,GAAYnF,EAAc,CAAEjB,MAAOxd,OACtCA,KAAAokB,SAAS13B,EAAKgD,IAEhBA,CAAA,CAOX,SAAA+8C,CAAU//C,GACF,IAAA4N,EACJ,YAAkC,IAA3B0F,KAAKrI,aAAajL,IAAuBsT,KAAKvR,QAES,QAAvD6L,EAAK0F,KAAK0sC,uBAAuB1sC,KAAKlV,MAAO4B,UAAyB,IAAP4N,EAAgBA,EAAK0F,KAAK2sC,sBAAsB3sC,KAAKvR,QAAS/B,EAAKsT,KAAKpI,SADxIoI,KAAKrI,aAAajL,EAC6H,CAMzJ,aAAAkgD,CAAclgD,EAAKgD,GACVsQ,KAAA+pC,WAAWr9C,GAAOgD,CAAA,CAM3B,aAAA64B,CAAc77B,GACN,IAAA4N,EACE,MAAAhP,QAAEA,GAAY0U,KAAKlV,MACnB+hD,EAAsC,iBAAZvhD,GAA2C,iBAAZA,EACD,QAAvDgP,EAAKyD,GAAwBiC,KAAKlV,MAAOQ,UAA6B,IAAPgP,OAAgB,EAASA,EAAG5N,QAC5F,EAIF,GAAApB,QAAgC,IAArBuhD,EACJ,OAAAA,EAMX,MAAM9zC,EAASiH,KAAK0sC,uBAAuB1sC,KAAKlV,MAAO4B,GACvD,YAAe,IAAXqM,GAAyBvH,EAAcuH,QAMR,IAA5BiH,KAAKgqC,cAAct9C,SACD,IAArBmgD,OACE,EACA7sC,KAAK+pC,WAAWr9C,GARXqM,CAQc,CAE7B,EAAA6pB,CAAGrf,EAAWrB,GAIV,OAHKlC,KAAKiiB,OAAO1e,KACbvD,KAAKiiB,OAAO1e,GAAa,IAAIge,IAE1BvhB,KAAKiiB,OAAO1e,GAAWpD,IAAI+B,EAAQ,CAE9C,MAAAuf,CAAOle,KAAc64B,GACbp8B,KAAKiiB,OAAO1e,IACZvD,KAAKiiB,OAAO1e,GAAWke,UAAU2a,EACrC,EGpfR,MAAM0Q,WAAyBtD,GAC3B,wBAAAyB,CAAyB1mC,EAAGC,GAMxB,OAAsC,EAA/BD,EAAEwoC,wBAAwBvoC,GAAS,GAAI,CACtD,CACI,sBAAAkoC,CAAuB5hD,EAAO4B,GAC1B,OAAO5B,EAAMgN,MAAQhN,EAAMgN,MAAMpL,QAAO,CAChD,CACI,0BAAA8/C,CAA2B9/C,GAAKqL,KAAEA,EAAAD,MAAMA,WAC7BC,EAAKrL,UACLoL,EAAMpL,EACrB,CACI,gCAAAi/C,EAAiCjsC,WAAEA,EAAAD,cAAYA,KAAkB1G,IAAUK,gBAAEA,GAAmBmM,GAC5F,IAAI/K,EnDqFZ,SAAmBzB,EAAQ2G,EAAYzR,GACnC,MAAMuM,EAAS,CAAE,EACjB,IAAA,MAAW9N,KAAOqM,EAAQ,CAChB,MAAAi0C,EAAmB3oB,GAAwB33B,EAAKgT,GACtD,QAAyB,IAArBstC,EACAxyC,EAAO9N,GAAOsgD,MAEb,CACK,MAAAt9C,EAAQzB,EAAck2B,SAASz3B,GACjCgD,IACO8K,EAAA9N,GAAOgD,EAAMe,MAEpC,CACA,CACW,OAAA+J,CACX,CmDpGqByyC,CAAUl0C,EAAQ2G,GAAc,CAAA,EAAIM,MAYjD,GARI5G,IACIqG,IACAA,EAAgBrG,EAAgBqG,IAChC1G,IACAA,EAASK,EAAgBL,IACzByB,IACAA,EAASpB,EAAgBoB,KAE7B+K,EAAW,EnDoBvB,SAAiCtX,EAAe8K,EAAQyB,GACpD,IAAIF,EAAI0X,EACR,MAAMk7B,EAAejjD,OAAO2R,KAAK7C,GAAQ4lB,QAAQjyB,IAASuB,EAAci2B,SAASx3B,KAC3EygD,EAAeD,EAAal7C,OD5ChB,IAAC1H,EC6CnB,GAAK6iD,EAEL,IAAA,IAASz0C,EAAI,EAAGA,EAAIy0C,EAAcz0C,IAAK,CAC7B,MAAAhM,EAAMwgD,EAAax0C,GACnB00C,EAAcr0C,EAAOrM,GAC3B,IAAIgD,EAAQ,KAKRnF,MAAMC,QAAQ4iD,KACd19C,EAAQ09C,EAAY,IAOV,OAAV19C,IACAA,EAAoG,QAA3FsiB,EAA4B,QAAtB1X,EAAKE,EAAO9N,UAAyB,IAAP4N,EAAgBA,EAAKrM,EAAcw+C,UAAU//C,UAAyB,IAAPslB,EAAgBA,EAAKjZ,EAAOrM,IAMxIgD,UAEiB,iBAAVA,IACNyxB,GAAkBzxB,IAAU+vB,GAAkB/vB,IAE/CA,EAAQoD,WAAWpD,ID3ERpF,EC6ESoF,GD7EHs0B,GAAW1T,KAAKuT,GAAcv5B,KC6EjBynB,GAAQ9gB,KAAKm8C,KACnC19C,EAAAwiB,GAAkBxlB,EAAK0gD,KAErBn/C,EAAAm2B,SAAS13B,EAAKk3B,GAAYl0B,EAAO,CAAE8tB,MAAOvvB,UACpC,IAAhBuM,EAAO9N,KACP8N,EAAO9N,GAAOgD,GAEJ,OAAVA,GACczB,EAAA2+C,cAAclgD,EAAKgD,GAC7C,CACA,CmDjEoC29C,CAAArtC,KAAMjH,EAAQyB,GACtC,MAAM2X,EAAS42B,GAAgB/oC,KAAMjH,EAAQyB,EAAQiF,GACrDA,EAAgB0S,EAAO1S,cACvB1G,EAASoZ,EAAOpZ,MAC5B,CACe,MAAA,CACH2G,aACAD,mBACG1G,EAEf,EC/BA,MAAMu0C,WAA0BR,GAC5B,WAAA/sC,GACI2H,SAASC,WACT3H,KAAK1N,KAAO,MACpB,CACI,qBAAAq6C,CAAsB/8C,EAAUlD,GACxB,GAAA0E,EAAeT,IAAIjE,GAAM,CACnB,MAAA6gD,EAAchuB,GAAoB7yB,GACjC,OAAA6gD,GAAcA,EAAYt6C,SAAe,CAC5D,CACa,CACK,MAAAu6C,GAdQ1wC,EAcyBlN,EAbxCd,OAAOw2C,iBAAiBxoC,IAcjBpN,GAASyC,EAAkBzF,GAC3B8gD,EAAc/G,iBAAiB/5C,GAC/B8gD,EAAc9gD,KAAS,EAC7B,MAAwB,iBAAVgD,EAAqBA,EAAMiJ,OAASjJ,CAC9D,CAnBA,IAA0BoN,CAoB1B,CACI,0BAAA0uC,CAA2B57C,GAAU/G,mBAAEA,IAC5B,OAAAulC,GAAmBx+B,EAAU/G,EAC5C,CACI,KAAA0iD,CAAMluC,EAAa1F,EAAcC,EAAS9M,GACtC2M,GAAgB4F,EAAa1F,EAAcC,EAAS9M,EAAM+M,kBAClE,CACI,2BAAA2F,CAA4B1S,EAAO2S,GACxBD,OAAAA,GAA4B1S,EAAO2S,EAClD,CACI,sBAAAyuC,GACQlsC,KAAKytC,oBACLztC,KAAKytC,2BACEztC,KAAKytC,mBAEV,MAAA9wC,SAAEA,GAAaqD,KAAKlV,MACtB0G,EAAcmL,KACdqD,KAAKytC,kBAAoB9wC,EAASimB,GAAG,UAAWxnB,IACxC4E,KAAKvR,UACAuR,KAAAvR,QAAQi/C,YAAc,GAAGtyC,IAAM,IAGxD,CACI,cAAA0uC,CAAel6C,EAAUyN,EAAaN,EAAWC,GAClCH,GAAAjN,EAAUyN,EAAaN,EAAWC,EACrD,EC5CA,MAAM2wC,WAAyBb,GAC3B,WAAA/sC,GACI2H,SAASC,WACT3H,KAAK1N,KAAO,MACZ0N,KAAK3E,UAAW,CACxB,CACI,sBAAAqxC,CAAuB5hD,EAAO4B,GAC1B,OAAO5B,EAAM4B,EACrB,CACI,qBAAAigD,CAAsB/8C,EAAUlD,GACxB,GAAA0E,EAAeT,IAAIjE,GAAM,CACnB,MAAA6gD,EAAchuB,GAAoB7yB,GACjC,OAAA6gD,GAAcA,EAAYt6C,SAAe,CAC5D,CAEe,OADPvG,EAAOyQ,GAAoBxM,IAAIjE,GAA0BA,EAAnBhD,EAAYgD,GAC3CkD,EAASg+C,aAAalhD,EACrC,CACI,0BAAA8+C,GACI,MlClBiB,CACrB75C,EAFsB,CAAEc,IAAK,EAAGC,IAAK,GAGrCd,EAHsB,CAAEa,IAAK,EAAGC,IAAK,GkCoBzC,CACI,2BAAA8K,CAA4B1S,EAAO2S,GACxB,OAAAD,GAA4B1S,EAAO2S,EAClD,CACI,KAAA8tC,CAAMluC,EAAa1F,EAAcC,EAAS9M,GACtC+P,GAAcwC,EAAa1F,EAAcC,EAASoI,KAAK3E,SAAUvQ,EAAM+M,kBAC/E,CACI,cAAAiyC,CAAel6C,EAAUyN,EAAaN,EAAWC,GACnCI,GAAAxN,EAAUyN,EAAaN,EAAWC,EACpD,CACI,KAAAnN,CAAMD,GACGoQ,KAAA3E,SAAWA,GAASzL,EAASwT,SAClCsE,MAAM7X,MAAMD,EACpB,ECvCA,MAAMi+C,GAAyB,CAACrgD,EAAWoK,IAChC9G,EAAetD,GAChB,IAAImgD,GAAiB/1C,EAAS,CAAEU,4BAA4B,IAC5D,IAAIg1C,GAAkB11C,EAAS,CAAEU,4BAA4B,ICJjE9L,GAAS,CACXA,OAAQ,CACJ25C,eAAgBf,GAChBx3C,mBCGFR,GAAoB,IACnB23B,MACAtd,MACAvb,MACAM,IAQDshD,GAAyC59C,GAAA,CAAC1C,EAAWmR,IChB3D,SAA+BnR,GAAW6O,mBAAEA,GAAqB,GAASjP,EAAmBC,GAIlF,MAAA,IAHYyD,EAAetD,GAC5BuV,GACAM,GAGFjW,kBAAAA,EACAE,UAAW8O,GAAgBC,GAC3BhP,sBACAG,YAER,CDKsEugD,CAAsBvgD,EAAWmR,EAAQvR,GAAmBygD,MElBlI,SAASG,KACC,MAAAzoC,EAAYhX,EAAMA,QAAC,GAOlB,OANPlF,GAA0B,KACtBkc,EAAU9W,SAAU,EACb,KACH8W,EAAU9W,SAAU,CAAA,IAEzB,IACI8W,CACX,CCLA,MAAM0oC,WAAwBC,EAAAA,UAC1B,uBAAAnZ,CAAwBt3B,GACd,MAAAX,EAAUkD,KAAKlV,MAAMqjD,SAAS1/C,QACpC,GAAIqO,GAAWW,EAAUqrB,YAAc9oB,KAAKlV,MAAMg+B,UAAW,CACnD,MAAA3zB,EAAO6K,KAAKlV,MAAMsjD,QAAQ3/C,QAC3B0G,EAAAF,OAAS6H,EAAQuxC,cAAgB,EACjCl5C,EAAAJ,MAAQ+H,EAAQwxC,aAAe,EACpCn5C,EAAKC,IAAM0H,EAAQyxC,UACnBp5C,EAAKI,KAAOuH,EAAQ0xC,UAChC,CACe,OAAA,IACf,CAII,kBAAAjZ,GAAqB,CACrB,MAAAvmC,GACI,OAAOgR,KAAKlV,MAAM6R,QAC1B,EAEA,SAAS8xC,IAAS9xC,SAAEA,EAAUmsB,UAAAA,IACpB74B,MAAAA,EAAK8lC,EAAAA,QACL/rC,EAAMuE,EAAMA,OAAC,MACb4G,EAAO5G,EAAAA,OAAO,CAChBwG,MAAO,EACPE,OAAQ,EACRG,IAAK,EACLG,KAAM,IAiCV,OAtBA5G,EAAAA,oBAAmB,KACf,MAAMoG,MAAEA,EAAOE,OAAAA,EAAAG,IAAQA,EAAKG,KAAAA,GAASJ,EAAK1G,QAC1C,GAAIq6B,IAAc9+B,EAAIyE,UAAYsG,IAAUE,EACxC,OACAjL,EAAAyE,QAAQigD,QAAQC,YAAc1+C,EAC5B,MAAA6H,EAAQ1O,SAASoG,cAAc,SAarC,OAZSpG,SAAAwlD,KAAKC,YAAY/2C,GACtBA,EAAMg3C,OACNh3C,EAAMg3C,MAAMC,WAAW,oCACF9+C,yEAEZ8E,wCACCE,qCACHG,sCACCG,0CAIL,KACMnM,SAAAwlD,KAAKI,YAAYl3C,EAAK,CAClC,GACF,CAACgxB,IACIv5B,EAAmBC,cAACy+C,GAAiB,CAAEnlB,UAAWA,EAAWqlB,SAAUnkD,EAAKokD,QAASj5C,GAAQ85C,EAAkBC,aAACvyC,EAAU,CAAE3S,QACxI,CC9DA,MAAMmlD,GAAgB,EAAGxyC,WAAUrR,UAASw9B,UAAAA,EAAWC,iBAAgB34B,SAAQg/C,wBAAuBC,WAC5F,MAAAC,EAAmBnxC,GAAYoxC,IAC/Bt/C,EAAK8lC,EAAAA,QACLxqC,EAAUI,EAAAA,SAAQ,KAAO,CAC3BsE,GAAAA,EACA3E,UACAw9B,UAAAA,EACA14B,SACA24B,eAAiBymB,IACIF,EAAA1+C,IAAI4+C,GAAS,GACnB,IAAA,MAAAC,KAAcH,EAAiB9yC,SACtC,IAAKizC,EACD,OAER1mB,GAAkBA,GAAgB,EAEtCI,SAAWqmB,IACUF,EAAA1+C,IAAI4+C,GAAS,GACvB,IAAMF,EAAiB7uC,OAAO+uC,OAQ7CJ,OAAwB,EAAY,CAACtmB,IAiB7Bv5B,OAhBR5D,EAAAA,SAAQ,KACa2jD,EAAA/vC,SAAQ,CAACmwC,EAAGhjD,IAAQ4iD,EAAiB1+C,IAAIlE,GAAK,IAAM,GACtE,CAACo8B,IAKJ6mB,EAAAA,WAAgB,MACX7mB,IACIwmB,EAAiBn6C,MAClB4zB,GACAA,GAAgB,GACrB,CAACD,IACS,cAATumB,IACA1yC,EAAWpN,EAAmBC,cAACi/C,GAAU,CAAE3lB,UAAWA,GAAansB,IAE/DpN,EAAAA,cAAoBrG,EAAgBuG,SAAU,CAAEC,MAAOnE,GAAWoR,EAAQ,EAEtF,SAAS4yC,KACL,WAAW/+C,GACf,CC3CA,MAAMo/C,GAAe5pC,GAAUA,EAAMtZ,KAAO,GAiD5C,MAAMmjD,GAAkB,EAAGlzC,WAAUvM,SAAQ9E,WAAU,EAAMy9B,iBAAgB+mB,kBAAiBV,yBAAwB,EAAMC,OAAO,WAIzH,MAAAU,EAAcrkD,EAAAA,WAAWoB,GAAoBijD,aC3DvD,WACI,MAAMxqC,EAAYyoC,MACXgC,EAAmBC,GAAwBC,EAAAA,SAAS,GACrDH,EAAcpgD,EAAAA,aAAY,KAClB4V,EAAA9W,SAAWwhD,EAAqBD,EAAoB,EAAC,GAChE,CAACA,IAMG,MAAA,CADqBrgD,EAAWA,aAAC,IAAMkR,GAAMshB,WAAW4tB,IAAc,CAACA,IACjDC,EACjC,CD+CsEG,GAAiB,GAC7E5qC,EAAYyoC,KAEZoC,EAjDV,SAAsBzzC,GAClB,MAAM0zC,EAAW,GAMV,OAJEC,EAAAA,SAAA/wC,QAAQ5C,GAAWqJ,IACpBuqC,EAAAA,eAAevqC,IACfqqC,EAAShwC,KAAK2F,EAAK,IAEpBqqC,CACX,CAyC6BG,CAAa7zC,GACtC,IAAI8zC,EAAmBL,EACvB,MAAMM,EAAkBniD,EAAAA,OAAW,IAAAiC,KAAO/B,QAGpCkiD,EAAkBpiD,SAAOkiD,GAEzBG,EAAcriD,EAAAA,OAAW,IAAAiC,KAAO/B,QAGhCs4B,EAAkBx4B,UAAO,GE1EnC,IAA0B2T,EFqFtB,GAVA7Y,GAA0B,KACtB09B,EAAgBt4B,SAAU,EAnElC,SAA2BkO,EAAUi0C,GACxBj0C,EAAA4C,SAASyG,IACR,MAAAtZ,EAAMkjD,GAAY5pC,GACZ4qC,EAAAhgD,IAAIlE,EAAKsZ,EAAK,GAElC,CA+DQ6qC,CAAkBT,EAAkBQ,GACpCD,EAAgBliD,QAAUgiD,CAAA,IE9ERvuC,EFgFL,KACb6kB,EAAgBt4B,SAAU,EAC1BmiD,EAAYlwC,QACZgwC,EAAgBhwC,OAAM,EElFnBnX,aAAU,IAAM,IAAM2Y,KAAY,IFoFrC6kB,EAAgBt4B,QAChB,OAAQc,gBAAoBuhD,EAAAA,SAAgB,KAAML,EAAiBpkC,KAAKrG,GAAWzW,EAAoBC,cAAA2/C,GAAe,CAAEziD,IAAKkjD,GAAY5pC,GAAQ8iB,WAAW,EAAMx9B,UAASA,QAAU,EAAmB8jD,wBAA8CC,QAAcrpC,MAGrPyqC,EAAA,IAAIA,GAGvB,MAAMM,EAAcJ,EAAgBliD,QAAQ4d,IAAIujC,IAC1CoB,EAAaZ,EAAiB/jC,IAAIujC,IAElCqB,EAAaF,EAAY/+C,OAC/B,IAAA,IAAS0G,EAAI,EAAGA,EAAIu4C,EAAYv4C,IAAK,CAC3B,MAAAhM,EAAMqkD,EAAYr4C,QACpBs4C,EAAWhgD,QAAQtE,IAAgBgkD,EAAgB//C,IAAIjE,IACvCgkD,EAAA9/C,IAAIlE,OAAK,EAC7B,CA6DJ,MAzDa,SAAT2iD,GAAmBqB,EAAgBv7C,OACnCs7C,EAAmB,IAIPC,EAAAnxC,SAAQ,CAAC2xC,EAAWxkD,KAE5B,IAA4B,IAA5BskD,EAAWhgD,QAAQtE,GACnB,OACE,MAAAsZ,EAAQ4qC,EAAYngD,IAAI/D,GAC9B,IAAKsZ,EACD,OACE,MAAAmrC,EAAiBJ,EAAY//C,QAAQtE,GAC3C,IAAI0kD,EAAmBF,EACvB,IAAKE,EAAkB,CACnB,MAAMC,EAAS,KAEXX,EAAgBjwC,OAAO/T,GAIvB,MAAM4kD,EAAe/mD,MAAMqlB,KAAKghC,EAAYh1C,QAAQ+iB,QAAQ4yB,IAAcP,EAAWjgD,SAASwgD,KAa1F,GAXJD,EAAa/xC,SAASiyC,GAAgBZ,EAAYnwC,OAAO+wC,KAEzDb,EAAgBliD,QAAU2hD,EAAiBzxB,QAAQ8yB,IACzC,MAAAC,EAAkB9B,GAAY6B,GACpC,OAEAC,IAAoBhlD,GAEhB4kD,EAAavgD,SAAS2gD,EAAe,KAGxChB,EAAgBv7C,KAAM,CACvB,IAA0B,IAAtBoQ,EAAU9W,QACV,OACQshD,IACZhnB,GAAkBA,GAAe,GAGzCqoB,EAAoB7hD,EAAoBC,cAAA2/C,GAAe,CAAEziD,IAAKkjD,GAAY5pC,GAAQ8iB,WAAW,EAAOC,eAAgBsoB,EAAQjhD,SAAgBg/C,wBAA8CC,QAAcrpC,GACxL0qC,EAAA9/C,IAAIlE,EAAK0kD,EAAgB,CAE5BX,EAAAjwC,OAAO2wC,EAAgB,EAAGC,EAAgB,IAI5CX,EAAAA,EAAiBpkC,KAAKrG,IACrC,MAAMtZ,EAAMsZ,EAAMtZ,IAClB,OAAOgkD,EAAgB//C,IAAIjE,GAAQsZ,EAAUzW,EAAAA,cAAoB4/C,GAAe,CAAEziD,IAAKkjD,GAAY5pC,GAAQ8iB,WAAW,EAAMsmB,wBAA8CC,QAAcrpC,EAAK,IAOzLzW,EAAMC,cAAcshD,EAAMa,SAAU,KAAMjB,EAAgBv7C,KAC5Ds7C,EACAA,EAAiBpkC,KAAKrG,GAAUkpC,EAAAA,aAAalpC,KAAO,EG7H9D,SAAS4rC,IAAWj1C,SAAEA,EAAA9P,SAAUA,EAAUpD,OAAAA,GAAS,IACzC,MAAA,CAAGooD,GAAe3B,EAAAA,UAAU4B,GAAajlD,IACzCklD,EAAiBxjD,EAAMA,YAAC,GAI1B,IAACujD,GAAajlD,GAAW,CACzB,MAAM2B,SAAEA,KAAawjD,GAAmBnlD,EACxCklD,EAAetjD,QAAUD,EACzB5B,EAAaolD,EACrB,CAUI,OATAzoD,EAAAA,WAAU,KACFuoD,GAAajlD,IACbA,IAAWovB,MAAK,EAAGztB,cAAawjD,MAC5BplD,EAAaolD,GACbD,EAAetjD,QAAUD,EACzBqjD,GAAY,EAAI,GAEhC,GACO,IACKtiD,gBAAoB/F,EAAYiG,SAAU,CAAEC,MAAO,CAAElB,SAAUujD,EAAetjD,QAAShF,WAAYkT,EAC/G,CACA,SAASm1C,GAAajlD,GAClB,MAA2B,mBAAbA,CAClB,CCzDK,MAAColD,GAAe,CACjBzjD,SAAUq/C,MACP9oB,MACAtd,ICRDyqC,GAAaC,EAAW,CAC5BzmC,EAAG,kMACH0mC,YAAa,eCFTC,GAAkBF,EAAW,CACjCzmC,EAAG,gDACH0mC,YAAa,oBCFTE,GAAmBH,EAAW,CAClCzmC,EAAG,iDACH0mC,YAAa,qBCFTG,GAAWJ,EAAW,CAC1BzmC,EAAG,iYACH0mC,YAAa","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216]}