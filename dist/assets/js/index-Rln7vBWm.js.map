{"version":3,"file":"index-Rln7vBWm.js","sources":["../../../node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js","../../../node_modules/react-dom/client.js","../../../src/services/api.ts","../../../src/hooks/useSelectedRecipes.ts","../../../src/components/RecipeCard.tsx","../../../src/components/Pagination.tsx","../../../src/App.tsx","../../../src/components/Root.tsx","../../../src/pages/RecipesPage.tsx","../../../src/hooks/useDebounce.ts","../../../src/pages/RecipeDetailsPage.tsx","../../../src/pages/SelectedRecipesPage.tsx","../../../src/main.tsx"],"sourcesContent":["import * as ReactJSXRuntime from 'react/jsx-runtime';\nimport { h as hasOwn, E as Emotion, c as createEmotionProps } from '../../dist/emotion-element-f0de968e.browser.esm.js';\nimport 'react';\nimport '@emotion/cache';\nimport '@babel/runtime/helpers/extends';\nimport '@emotion/weak-memoize';\nimport '../../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js';\nimport 'hoist-non-react-statics';\nimport '@emotion/utils';\nimport '@emotion/serialize';\nimport '@emotion/use-insertion-effect-with-fallbacks';\n\nvar Fragment = ReactJSXRuntime.Fragment;\nvar jsx = function jsx(type, props, key) {\n  if (!hasOwn.call(props, 'css')) {\n    return ReactJSXRuntime.jsx(type, props, key);\n  }\n\n  return ReactJSXRuntime.jsx(Emotion, createEmotionProps(type, props), key);\n};\nvar jsxs = function jsxs(type, props, key) {\n  if (!hasOwn.call(props, 'css')) {\n    return ReactJSXRuntime.jsxs(type, props, key);\n  }\n\n  return ReactJSXRuntime.jsxs(Emotion, createEmotionProps(type, props), key);\n};\n\nexport { Fragment, jsx, jsxs };\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import axios from \"axios\";\nimport { RecipeResponse } from \"../types/recipe\";\n\nconst BASE_URL = \"https://www.themealdb.com/api/json/v1/1\";\n\nexport const api = {\n  async searchRecipes(query: string): Promise<RecipeResponse> {\n    const response = await axios.get(`${BASE_URL}/search.php?s=${query}`);\n    return response.data;\n  },\n\n  async getRecipeById(id: string): Promise<RecipeResponse> {\n    const response = await axios.get(`${BASE_URL}/lookup.php?i=${id}`);\n    return response.data;\n  },\n\n  async getRecipesByCategory(category: string): Promise<RecipeResponse> {\n    const response = await axios.get(`${BASE_URL}/filter.php?c=${category}`);\n    return response.data;\n  },\n\n  async getAllCategories(): Promise<{ meals: { strCategory: string }[] }> {\n    const response = await axios.get(`${BASE_URL}/categories.php`);\n    return response.data;\n  },\n\n  async getRandomMeal(): Promise<RecipeResponse> {\n    const response = await axios.get(`${BASE_URL}/random.php`);\n    return response.data;\n  },\n\n  async getRecipesByArea(area: string): Promise<RecipeResponse> {\n    const response = await axios.get(`${BASE_URL}/filter.php?a=${area}`);\n    return response.data;\n  },\n\n  async getRecipesByIngredient(ingredient: string): Promise<RecipeResponse> {\n    const response = await axios.get(`${BASE_URL}/filter.php?i=${ingredient}`);\n    return response.data;\n  },\n\n  async getAllAreas(): Promise<{ meals: { strArea: string }[] }> {\n    const response = await axios.get(`${BASE_URL}/list.php?a=list`);\n    return response.data;\n  },\n\n  async getAllIngredients(): Promise<{ meals: { strIngredient: string }[] }> {\n    const response = await axios.get(`${BASE_URL}/list.php?i=list`);\n    return response.data;\n  },\n\n  getSmallImageUrl(imageUrl: string): string {\n    return imageUrl.replace(\n      \"/images/media/meals/\",\n      \"/images/media/meals/preview/\"\n    );\n  },\n};\n","import { create } from 'zustand'\nimport { Recipe } from '../types/recipe'\n\ninterface SelectedRecipesStore {\n\tselectedRecipes: Recipe[]\n\taddRecipe: (recipe: Recipe) => void\n\tremoveRecipe: (recipe: Recipe) => void\n\tgetIngredients: () => { name: string; measure: string }[]\n}\n\nexport const useSelectedRecipes = create<SelectedRecipesStore>()(\n\t(set, get) => ({\n\t\tselectedRecipes: [],\n\n\t\taddRecipe: (recipe) =>\n\t\t\tset((state) => ({\n\t\t\t\tselectedRecipes: [...state.selectedRecipes, recipe],\n\t\t\t})),\n\n\t\tremoveRecipe: (recipe) =>\n\t\t\tset((state) => ({\n\t\t\t\tselectedRecipes: state.selectedRecipes.filter(\n\t\t\t\t\t(r) => r.idMeal !== recipe.idMeal\n\t\t\t\t),\n\t\t\t})),\n\n\t\tgetIngredients: () => {\n\t\t\tconst { selectedRecipes } = get()\n\t\t\tconst ingredientsMap = new Map<string, string>()\n\n\t\t\tselectedRecipes.forEach((recipe) => {\n\t\t\t\tObject.entries(recipe)\n\t\t\t\t\t.filter(\n\t\t\t\t\t\t([key, value]) =>\n\t\t\t\t\t\t\tkey.startsWith('strIngredient') && value\n\t\t\t\t\t)\n\t\t\t\t\t.forEach(([key, value]) => {\n\t\t\t\t\t\tconst measureKey = `strMeasure${key.slice(13)}`\n\t\t\t\t\t\tconst measure = recipe[\n\t\t\t\t\t\t\tmeasureKey as keyof Recipe\n\t\t\t\t\t\t] as string\n\t\t\t\t\t\tingredientsMap.set(value as string, measure)\n\t\t\t\t\t})\n\t\t\t})\n\n\t\t\treturn Array.from(ingredientsMap.entries()).map(\n\t\t\t\t([name, measure]) => ({\n\t\t\t\t\tname,\n\t\t\t\t\tmeasure,\n\t\t\t\t})\n\t\t\t)\n\t\t},\n\t})\n)\n","import {\n  Box,\n  Image,\n  VStack,\n  Button,\n  useToast,\n  HStack,\n  Badge,\n  useColorModeValue,\n  Text,\n  Icon,\n  Link as ChakraLink,\n  Tooltip,\n} from \"@chakra-ui/react\";\nimport { Recipe } from \"../types/recipe\";\nimport { useSelectedRecipes } from \"../hooks/useSelectedRecipes\";\nimport { Link } from \"@tanstack/react-router\";\nimport { StarIcon } from \"@chakra-ui/icons\";\n\ninterface RecipeCardProps {\n  recipe: Recipe;\n  onSelect?: (recipe: Recipe) => void;\n}\n\nexport const RecipeCard = ({ recipe, onSelect }: RecipeCardProps) => {\n  const { addRecipe, selectedRecipes, removeRecipe } = useSelectedRecipes();\n  const toast = useToast();\n\n  const bgColor = useColorModeValue(\"white\", \"gray.800\");\n  const borderColor = useColorModeValue(\"gray.200\", \"gray.700\");\n  const textColor = useColorModeValue(\"gray.600\", \"gray.400\");\n\n  const isSelected = selectedRecipes.some((r) => r.idMeal === recipe.idMeal);\n\n  const handleSelect = () => {\n    if (onSelect) {\n      onSelect(recipe);\n    } else {\n      if (isSelected) {\n        removeRecipe(recipe);\n        toast({\n          title: \"Рецепт видалено\",\n          description: `${recipe.strMeal} видалено з вибраних рецептів`,\n          status: \"info\",\n          duration: 3000,\n          isClosable: true,\n        });\n      } else {\n        addRecipe(recipe);\n        toast({\n          title: \"Рецепт додано\",\n          description: `${recipe.strMeal} додано до вибраних рецептів`,\n          status: \"success\",\n          duration: 3000,\n          isClosable: true,\n        });\n      }\n    }\n  };\n\n  const recipeLink = `/recipe/${recipe.idMeal}`;\n\n  return (\n    <Box\n      bg={bgColor}\n      borderWidth=\"1px\"\n      borderColor={borderColor}\n      borderRadius=\"lg\"\n      overflow=\"hidden\"\n      transition=\"all 0.3s\"\n      _hover={{ transform: \"translateY(-4px)\", shadow: \"lg\" }}\n      position=\"relative\"\n    >\n      <ChakraLink\n        as={Link}\n        to={recipeLink}\n        fontSize=\"1.25rem\"\n        fontWeight=\"bold\"\n        cursor=\"pointer\"\n        textDecoration=\"none\"\n        color={useColorModeValue(\"gray.800\", \"white\")}\n        _hover={{ color: \"blue.500\" }}\n      >\n        <Box position=\"relative\" paddingTop=\"75%\">\n          <Image\n            src={recipe.strMealThumb}\n            alt={recipe.strMeal}\n            position=\"absolute\"\n            top=\"0\"\n            left=\"0\"\n            width=\"100%\"\n            height=\"100%\"\n            objectFit=\"cover\"\n            cursor=\"pointer\"\n            transition=\"transform 0.3s\"\n            _hover={{ transform: \"scale(1.05)\" }}\n          />\n        </Box>\n      </ChakraLink>\n\n      <VStack p={4} align=\"start\" spacing={3}>\n        <ChakraLink\n          as={Link}\n          to={recipeLink}\n          fontSize=\"1.25rem\"\n          fontWeight=\"bold\"\n          cursor=\"pointer\"\n          textDecoration=\"none\"\n          color={useColorModeValue(\"gray.800\", \"white\")}\n          _hover={{ color: \"blue.500\" }}\n        >\n          {recipe.strMeal}\n        </ChakraLink>\n\n        <HStack spacing={2} flexWrap=\"wrap\">\n          <Badge colorScheme=\"blue\" borderRadius=\"full\" px={3} py={1}>\n            {recipe.strCategory}\n          </Badge>\n          <Badge colorScheme=\"green\" borderRadius=\"full\" px={3} py={1}>\n            {recipe.strArea}\n          </Badge>\n        </HStack>\n\n        <Text color={textColor} fontSize=\"sm\" noOfLines={2}>\n          {recipe.strInstructions}\n        </Text>\n\n        <Tooltip\n          label={isSelected ? \"Видалити з вибраних\" : \"Додати до вибраних\"}\n          placement=\"top\"\n        >\n          <Button\n            colorScheme={isSelected ? \"red\" : \"blue\"}\n            onClick={handleSelect}\n            width=\"100%\"\n            leftIcon={<Icon as={StarIcon} />}\n            variant={isSelected ? \"solid\" : \"outline\"}\n            transition=\"all 0.2s\"\n            _hover={{\n              transform: \"translateY(-1px)\",\n              shadow: \"md\",\n            }}\n          >\n            {isSelected ? \"Вибрано\" : \"Вибрати\"}\n          </Button>\n        </Tooltip>\n      </VStack>\n    </Box>\n  );\n};\n","import { Box, Button, HStack, useColorModeValue } from \"@chakra-ui/react\";\nimport { ChevronLeftIcon, ChevronRightIcon } from \"@chakra-ui/icons\";\n\ninterface PaginationProps {\n  currentPage: number;\n  totalPages: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination = ({\n  currentPage,\n  totalPages,\n  onPageChange,\n}: PaginationProps) => {\n  const bgColor = useColorModeValue(\"white\", \"gray.800\");\n  const borderColor = useColorModeValue(\"gray.200\", \"gray.700\");\n  const activeColor = useColorModeValue(\"blue.500\", \"blue.300\");\n  const inactiveColor = useColorModeValue(\"gray.600\", \"gray.400\");\n\n  const getPageNumbers = () => {\n    const pages = [];\n    const maxVisiblePages = 7;\n\n    if (totalPages <= maxVisiblePages) {\n      for (let i = 1; i <= totalPages; i++) {\n        pages.push(i);\n      }\n    } else {\n      if (currentPage <= 4) {\n        for (let i = 1; i <= 7; i++) {\n          pages.push(i);\n        }\n        pages.push(\"...\", totalPages);\n      } else if (currentPage >= totalPages - 3) {\n        pages.push(1, \"...\");\n        for (let i = totalPages - 6; i <= totalPages; i++) {\n          pages.push(i);\n        }\n      } else {\n        pages.push(1, \"...\");\n        for (let i = currentPage - 2; i <= currentPage + 2; i++) {\n          pages.push(i);\n        }\n        pages.push(\"...\", totalPages);\n      }\n    }\n\n    return pages;\n  };\n\n  return (\n    <HStack spacing={2} justify=\"center\" mt={8} mb={4}>\n      <Button\n        onClick={() => onPageChange(currentPage - 1)}\n        isDisabled={currentPage === 1}\n        leftIcon={<ChevronLeftIcon />}\n        variant=\"outline\"\n        colorScheme=\"blue\"\n        size=\"sm\"\n        transition=\"all 0.2s\"\n        _hover={{\n          transform: \"translateX(-2px)\",\n          shadow: \"sm\",\n        }}\n        _disabled={{\n          opacity: 0.5,\n          cursor: \"not-allowed\",\n        }}\n      >\n        Попередня\n      </Button>\n\n      {getPageNumbers().map((page, index) => (\n        <Box key={index}>\n          {page === \"...\" ? (\n            <Box px={3} py={1} color={inactiveColor} fontWeight=\"medium\">\n              ...\n            </Box>\n          ) : (\n            <Button\n              onClick={() => onPageChange(page as number)}\n              variant={currentPage === page ? \"solid\" : \"outline\"}\n              colorScheme={currentPage === page ? \"blue\" : \"gray\"}\n              size=\"sm\"\n              minW=\"40px\"\n              h=\"40px\"\n              p={0}\n              transition=\"all 0.2s\"\n              _hover={{\n                transform: \"translateY(-2px)\",\n                shadow: \"sm\",\n              }}\n              _active={{\n                transform: \"translateY(0)\",\n              }}\n              bg={currentPage === page ? activeColor : bgColor}\n              color={currentPage === page ? \"white\" : inactiveColor}\n              borderColor={currentPage === page ? activeColor : borderColor}\n            >\n              {page}\n            </Button>\n          )}\n        </Box>\n      ))}\n\n      <Button\n        onClick={() => onPageChange(currentPage + 1)}\n        isDisabled={currentPage === totalPages}\n        rightIcon={<ChevronRightIcon />}\n        variant=\"outline\"\n        colorScheme=\"blue\"\n        size=\"sm\"\n        transition=\"all 0.2s\"\n        _hover={{\n          transform: \"translateX(2px)\",\n          shadow: \"sm\",\n        }}\n        _disabled={{\n          opacity: 0.5,\n          cursor: \"not-allowed\",\n        }}\n      >\n        Наступна\n      </Button>\n    </HStack>\n  );\n};\n","import { ChakraProvider } from \"@chakra-ui/react\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport {\n  RouterProvider,\n  createRouter,\n  createRootRoute,\n  createRoute,\n} from \"@tanstack/react-router\";\nimport { RecipesPage } from \"./pages/RecipesPage\";\nimport { RecipeDetailsPage } from \"./pages/RecipeDetailsPage\";\nimport { SelectedRecipesPage } from \"./pages/SelectedRecipesPage\";\nimport { Root } from \"./components/Root\";\nimport \"./types/router\";\n\nconst queryClient = new QueryClient();\n\nconst rootRoute = createRootRoute({\n  component: Root,\n});\n\nconst recipesRoute = createRoute({\n  getParentRoute: () => rootRoute,\n  path: \"/\",\n  component: RecipesPage,\n});\n\nconst recipeDetailsRoute = createRoute({\n  getParentRoute: () => rootRoute,\n  path: \"/recipe/$recipeId\",\n  component: RecipeDetailsPage,\n});\n\nconst selectedRecipesRoute = createRoute({\n  getParentRoute: () => rootRoute,\n  path: \"/selected\",\n  component: SelectedRecipesPage,\n});\n\nconst routeTree = rootRoute.addChildren([\n  recipesRoute,\n  recipeDetailsRoute,\n  selectedRecipesRoute,\n]);\n\nconst router = createRouter({\n  routeTree,\n});\n\ndeclare module \"@tanstack/react-router\" {\n  interface Register {\n    router: typeof router;\n  }\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ChakraProvider>\n        <RouterProvider router={router} />\n      </ChakraProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","import {\n  Box,\n  Flex,\n  useColorModeValue,\n  Link as ChakraLink,\n} from \"@chakra-ui/react\";\nimport { Link, Outlet, useRouter } from \"@tanstack/react-router\";\n\nexport const Root = () => {\n  const router = useRouter();\n  const bgColor = useColorModeValue(\"blue.500\", \"blue.600\");\n  const activeLinkColor = useColorModeValue(\"white\", \"white\");\n  const inactiveLinkColor = useColorModeValue(\n    \"whiteAlpha.800\",\n    \"whiteAlpha.800\"\n  );\n\n  return (\n    <Box minH=\"100vh\" bg={useColorModeValue(\"gray.50\", \"gray.900\")}>\n      <Flex\n        as=\"nav\"\n        align=\"center\"\n        justify=\"space-between\"\n        wrap=\"wrap\"\n        padding=\"1rem 2rem\"\n        bg={bgColor}\n        color=\"white\"\n        boxShadow=\"sm\"\n      >\n        <Flex align=\"center\" mr={5}>\n          <ChakraLink\n            as={Link}\n            to=\"/\"\n            fontSize=\"1.5rem\"\n            fontWeight=\"bold\"\n            color=\"white\"\n            textDecoration=\"none\"\n            transition=\"opacity 0.2s\"\n            _hover={{ opacity: 0.8 }}\n          >\n            Рецепти\n          </ChakraLink>\n        </Flex>\n        <Flex gap={4}>\n          <ChakraLink\n            as={Link}\n            to=\"/\"\n            color={\n              router.state.location.pathname === \"/\"\n                ? activeLinkColor\n                : inactiveLinkColor\n            }\n            textDecoration=\"none\"\n            padding=\"0.5rem 1rem\"\n            borderRadius=\"md\"\n            transition=\"all 0.2s\"\n            _hover={{ bg: \"whiteAlpha.200\" }}\n          >\n            Всі рецепти\n          </ChakraLink>\n          <ChakraLink\n            as={Link}\n            to=\"/selected\"\n            color={\n              router.state.location.pathname === \"/selected\"\n                ? activeLinkColor\n                : inactiveLinkColor\n            }\n            textDecoration=\"none\"\n            padding=\"0.5rem 1rem\"\n            borderRadius=\"md\"\n            transition=\"all 0.2s\"\n            _hover={{ bg: \"whiteAlpha.200\" }}\n          >\n            Вибрані рецепти\n          </ChakraLink>\n        </Flex>\n      </Flex>\n\n      <Box as=\"main\" py={8}>\n        <Outlet />\n      </Box>\n    </Box>\n  );\n};\n","import { useState, useMemo } from \"react\";\nimport {\n  Box,\n  Container,\n  Grid,\n  Input,\n  Select,\n  VStack,\n  Heading,\n  useColorModeValue,\n  InputGroup,\n  InputLeftElement,\n  Skeleton,\n  Text,\n} from \"@chakra-ui/react\";\nimport { SearchIcon } from \"@chakra-ui/icons\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { api } from \"../services/api\";\nimport { RecipeCard } from \"../components/RecipeCard\";\nimport { useDebounce } from \"../hooks/useDebounce\";\nimport { Pagination } from \"../components/Pagination\";\n\nconst ITEMS_PER_PAGE = 12;\n\nexport const RecipesPage = () => {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [selectedArea, setSelectedArea] = useState(\"\");\n  const [selectedIngredient, setSelectedIngredient] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const debouncedSearch = useDebounce(searchQuery, 500);\n\n  const bgColor = useColorModeValue(\"white\", \"gray.800\");\n  const borderColor = useColorModeValue(\"gray.200\", \"gray.700\");\n\n  const { data: areasData, isLoading: isLoadingAreas } = useQuery({\n    queryKey: [\"areas\"],\n    queryFn: api.getAllAreas,\n  });\n\n  const { data: ingredientsData, isLoading: isLoadingIngredients } = useQuery({\n    queryKey: [\"ingredients\"],\n    queryFn: api.getAllIngredients,\n  });\n\n  const { data: recipesData, isLoading: isLoadingRecipes } = useQuery({\n    queryKey: [\"recipes\", debouncedSearch, selectedArea, selectedIngredient],\n    queryFn: async () => {\n      if (debouncedSearch) {\n        return api.searchRecipes(debouncedSearch);\n      }\n      if (selectedArea) {\n        return api.getRecipesByArea(selectedArea);\n      }\n      if (selectedIngredient) {\n        return api.getRecipesByIngredient(selectedIngredient);\n      }\n      const randomMeals = await Promise.all(\n        Array(14)\n          .fill(null)\n          .map(() => api.getRandomMeal())\n      );\n      return {\n        meals: randomMeals.flatMap((meal) => meal.meals || []),\n      };\n    },\n  });\n\n  const recipes = useMemo(() => {\n    return recipesData?.meals || [];\n  }, [recipesData]);\n\n  const totalPages = Math.ceil(recipes.length / ITEMS_PER_PAGE);\n  const paginatedRecipes = useMemo(() => {\n    return recipes.slice(\n      (currentPage - 1) * ITEMS_PER_PAGE,\n      currentPage * ITEMS_PER_PAGE\n    );\n  }, [recipes, currentPage]);\n\n  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(e.target.value);\n    setSelectedArea(\"\");\n    setSelectedIngredient(\"\");\n    setCurrentPage(1);\n  };\n\n  const handleAreaChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedArea(e.target.value);\n    setSearchQuery(\"\");\n    setSelectedIngredient(\"\");\n    setCurrentPage(1);\n  };\n\n  const handleIngredientChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedIngredient(e.target.value);\n    setSearchQuery(\"\");\n    setSelectedArea(\"\");\n    setCurrentPage(1);\n  };\n\n  return (\n    <Container maxW=\"container.xl\" py={8}>\n      <VStack spacing={8} align=\"stretch\">\n        <Heading textAlign=\"center\" size=\"xl\" mb={8}>\n          Рецепти\n        </Heading>\n\n        <Box width=\"100%\">\n          <InputGroup size=\"lg\">\n            <InputLeftElement pointerEvents=\"none\">\n              <SearchIcon color=\"gray.400\" />\n            </InputLeftElement>\n            <Input\n              placeholder=\"Пошук рецептів...\"\n              value={searchQuery}\n              onChange={handleSearch}\n              bg={bgColor}\n              borderColor={borderColor}\n              _hover={{ borderColor: \"blue.500\" }}\n              _focus={{ borderColor: \"blue.500\" }}\n            />\n          </InputGroup>\n        </Box>\n\n        <Grid templateColumns=\"repeat(2, 1fr)\" gap={4} width=\"100%\">\n          <Skeleton isLoaded={!isLoadingAreas}>\n            <Select\n              placeholder=\"Виберіть кухню\"\n              value={selectedArea}\n              onChange={handleAreaChange}\n              bg={bgColor}\n              borderColor={borderColor}\n              _hover={{ borderColor: \"blue.500\" }}\n              _focus={{ borderColor: \"blue.500\" }}\n            >\n              {areasData?.meals?.map((area) => (\n                <option key={area.strArea} value={area.strArea}>\n                  {area.strArea}\n                </option>\n              ))}\n            </Select>\n          </Skeleton>\n\n          <Skeleton isLoaded={!isLoadingIngredients}>\n            <Select\n              placeholder=\"Виберіть інгредієнт\"\n              value={selectedIngredient}\n              onChange={handleIngredientChange}\n              bg={bgColor}\n              borderColor={borderColor}\n              _hover={{ borderColor: \"blue.500\" }}\n              _focus={{ borderColor: \"blue.500\" }}\n            >\n              {ingredientsData?.meals?.map((ingredient) => (\n                <option\n                  key={ingredient.strIngredient}\n                  value={ingredient.strIngredient}\n                >\n                  {ingredient.strIngredient}\n                </option>\n              ))}\n            </Select>\n          </Skeleton>\n        </Grid>\n\n        {isLoadingRecipes ? (\n          <Grid\n            templateColumns={{\n              base: \"1fr\",\n              md: \"repeat(2, 1fr)\",\n              lg: \"repeat(3, 1fr)\",\n            }}\n            gap={6}\n            width=\"100%\"\n          >\n            {Array(6)\n              .fill(null)\n              .map((_, index) => (\n                <Skeleton key={index} height=\"300px\" borderRadius=\"lg\" />\n              ))}\n          </Grid>\n        ) : recipes.length === 0 ? (\n          <Text textAlign=\"center\" fontSize=\"lg\" color=\"gray.500\">\n            Рецептів не знайдено\n          </Text>\n        ) : (\n          <Grid\n            templateColumns={{\n              base: \"1fr\",\n              md: \"repeat(2, 1fr)\",\n              lg: \"repeat(3, 1fr)\",\n            }}\n            gap={6}\n            width=\"100%\"\n          >\n            {paginatedRecipes.map((recipe) => (\n              <RecipeCard key={recipe.idMeal} recipe={recipe} />\n            ))}\n          </Grid>\n        )}\n\n        {totalPages > 1 && (\n          <Pagination\n            currentPage={currentPage}\n            totalPages={totalPages}\n            onPageChange={setCurrentPage}\n          />\n        )}\n      </VStack>\n    </Container>\n  );\n};\n","import { useEffect, useState } from \"react\";\n\nexport function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n","import { useParams } from \"@tanstack/react-router\";\nimport {\n  Container,\n  VStack,\n  Heading,\n  Image,\n  Text,\n  Grid,\n  Box,\n  List,\n  ListItem,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { api } from \"../services/api\";\nimport { useSelectedRecipes } from \"../hooks/useSelectedRecipes\";\nimport { Recipe } from \"../types/recipe\";\n\nexport const RecipeDetailsPage = () => {\n  const { recipeId } = useParams({ from: \"/recipe/$recipeId\" });\n  const { addRecipe, removeRecipe, selectedRecipes } = useSelectedRecipes();\n  const toast = useToast();\n\n  const { data: recipeData } = useQuery({\n    queryKey: [\"recipe\", recipeId],\n    queryFn: () => api.getRecipeById(recipeId),\n  });\n\n  const recipe = recipeData?.meals?.[0];\n  const isSelected = selectedRecipes.some((r) => r.idMeal === recipe?.idMeal);\n\n  if (!recipe) {\n    return (\n      <Container maxW=\"container.xl\" py={8}>\n        <Heading>Рецепт не знайдено</Heading>\n      </Container>\n    );\n  }\n\n  const ingredients = Object.entries(recipe)\n    .filter(([key, value]) => key.startsWith(\"strIngredient\") && value)\n    .map(([key, value]) => {\n      const measureKey = `strMeasure${key.slice(13)}` as keyof Recipe;\n      return {\n        ingredient: value,\n        measure: recipe[measureKey],\n      };\n    });\n\n  const handleToggleSelect = () => {\n    if (isSelected) {\n      removeRecipe(recipe);\n      toast({\n        title: \"Рецепт видалено\",\n        description: `${recipe.strMeal} видалено з вибраних рецептів`,\n        status: \"info\",\n        duration: 3000,\n        isClosable: true,\n      });\n    } else {\n      addRecipe(recipe);\n      toast({\n        title: \"Рецепт додано\",\n        description: `${recipe.strMeal} додано до вибраних рецептів`,\n        status: \"success\",\n        duration: 3000,\n        isClosable: true,\n      });\n    }\n  };\n\n  return (\n    <Container maxW=\"container.xl\" py={8}>\n      <VStack spacing={8} align=\"stretch\">\n        <Grid templateColumns={{ base: \"1fr\", md: \"1fr 1fr\" }} gap={8}>\n          <Box>\n            <Image\n              src={recipe.strMealThumb}\n              alt={recipe.strMeal}\n              borderRadius=\"lg\"\n              width=\"100%\"\n              objectFit=\"cover\"\n            />\n          </Box>\n\n          <VStack align=\"start\" spacing={4}>\n            <Heading>{recipe.strMeal}</Heading>\n            <Text color=\"gray.600\">Категорія: {recipe.strCategory}</Text>\n            <Text color=\"gray.600\">Кухня: {recipe.strArea}</Text>\n            <Text color=\"gray.600\">Інструкції: {recipe.strInstructions}</Text>\n            <Box\n              as=\"button\"\n              onClick={handleToggleSelect}\n              px={4}\n              py={2}\n              bg={isSelected ? \"red.500\" : \"blue.500\"}\n              color=\"white\"\n              borderRadius=\"md\"\n              _hover={{\n                bg: isSelected ? \"red.600\" : \"blue.600\",\n              }}\n            >\n              {isSelected ? \"Видалити з вибраних\" : \"Додати до вибраних\"}\n            </Box>\n          </VStack>\n        </Grid>\n\n        <Box>\n          <Heading size=\"md\" mb={4}>\n            Інгредієнти\n          </Heading>\n          <List spacing={2}>\n            {ingredients.map((item, index) => (\n              <ListItem key={index}>\n                {item.measure} {item.ingredient}\n              </ListItem>\n            ))}\n          </List>\n        </Box>\n      </VStack>\n    </Container>\n  );\n};\n","import {\n  Container,\n  VStack,\n  Heading,\n  Grid,\n  Box,\n  Text,\n  List,\n  ListItem,\n  useToast,\n  Divider,\n} from \"@chakra-ui/react\";\nimport { useSelectedRecipes } from \"../hooks/useSelectedRecipes\";\nimport { RecipeCard } from \"../components/RecipeCard\";\nimport { Recipe } from \"../types/recipe\";\n\nexport const SelectedRecipesPage = () => {\n  const { selectedRecipes, removeRecipe, getIngredients } =\n    useSelectedRecipes();\n  const toast = useToast();\n\n  const handleRemove = (recipe: Recipe) => {\n    removeRecipe(recipe);\n    toast({\n      title: \"Рецепт видалено\",\n      description: `${recipe.strMeal} видалено з вибраних рецептів`,\n      status: \"info\",\n      duration: 3000,\n      isClosable: true,\n    });\n  };\n\n  if (selectedRecipes.length === 0) {\n    return (\n      <Container maxW=\"container.xl\" py={8}>\n        <VStack spacing={4}>\n          <Heading>Мої вибрані рецепти</Heading>\n          <Text>У вас поки немає вибраних рецептів</Text>\n        </VStack>\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxW=\"container.xl\" py={8}>\n      <VStack spacing={8} align=\"stretch\">\n        <Heading>Мої вибрані рецепти</Heading>\n\n        <Grid\n          templateColumns={{\n            base: \"1fr\",\n            md: \"repeat(2, 1fr)\",\n            lg: \"repeat(3, 1fr)\",\n            xl: \"repeat(4, 1fr)\",\n          }}\n          gap={6}\n        >\n          {selectedRecipes.map((recipe) => (\n            <RecipeCard\n              key={recipe.idMeal}\n              recipe={recipe}\n              onSelect={handleRemove}\n            />\n          ))}\n        </Grid>\n\n        <Divider />\n\n        <Box>\n          <Heading size=\"md\" mb={4}>\n            Список інгредієнтів:\n          </Heading>\n          <List spacing={2}>\n            {getIngredients().map((ingredient) => (\n              <ListItem key={ingredient.name}>\n                • {ingredient.name} - {ingredient.measure}\n              </ListItem>\n            ))}\n          </List>\n        </Box>\n\n        <Divider />\n\n        <Box>\n          <Heading size=\"md\" mb={4}>\n            Інструкції по приготуванню:\n          </Heading>\n          {selectedRecipes.map((recipe) => (\n            <Box key={recipe.idMeal} mb={6}>\n              <Heading size=\"sm\" mb={2}>\n                {recipe.strMeal}\n              </Heading>\n              <Text whiteSpace=\"pre-line\">{recipe.strInstructions}</Text>\n            </Box>\n          ))}\n        </Box>\n      </VStack>\n    </Container>\n  );\n};\n","import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport './index.css'\nimport App from './App.tsx'\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n)\n"],"names":["jsx","type","props","key","hasOwn","call","ReactJSXRuntime.jsx","Emotion","createEmotionProps","jsxs","ReactJSXRuntime.jsxs","m","require$$0","createRoot","hydrateRoot","BASE_URL","api","async","query","axios","get","data","id","category","area","ingredient","getSmallImageUrl","imageUrl","replace","useSelectedRecipes","create","set","selectedRecipes","addRecipe","state","recipe","removeRecipe","filter","r","idMeal","getIngredients","ingredientsMap","Map","Array","forEach","entries","value","startsWith","measureKey","slice","measure","from","map","name","RecipeCard","onSelect","toast","useToast","bgColor","useColorModeValue","borderColor","textColor","isSelected","some","recipeLink","Box","bg","borderWidth","borderRadius","overflow","transition","_hover","transform","shadow","position","children","ChakraLink","as","Link","to","fontSize","fontWeight","cursor","textDecoration","color","paddingTop","Image","src","strMealThumb","alt","strMeal","top","left","width","height","objectFit","VStack","p","align","spacing","HStack","flexWrap","Badge","colorScheme","px","py","strCategory","strArea","Text","noOfLines","strInstructions","Tooltip","label","placement","Button","onClick","handleSelect","title","description","status","duration","isClosable","leftIcon","Icon","StarIcon","variant","Pagination","currentPage","totalPages","onPageChange","activeColor","inactiveColor","justify","mt","mb","isDisabled","ChevronLeftIcon","size","_disabled","opacity","getPageNumbers","pages","i","push","page","index","minW","h","_active","rightIcon","ChevronRightIcon","queryClient","QueryClient","rootRoute","createRootRoute","component","Root","router","useRouter","activeLinkColor","inactiveLinkColor","minH","Flex","wrap","padding","boxShadow","mr","gap","location","pathname","Outlet","recipesRoute","createRoute","getParentRoute","path","RecipesPage","searchQuery","setSearchQuery","useState","selectedArea","setSelectedArea","selectedIngredient","setSelectedIngredient","setCurrentPage","debouncedSearch","useDebounce","delay","debouncedValue","setDebouncedValue","useEffect","timer","setTimeout","clearTimeout","areasData","isLoading","isLoadingAreas","useQuery","queryKey","queryFn","getAllAreas","ingredientsData","isLoadingIngredients","getAllIngredients","recipesData","isLoadingRecipes","searchRecipes","getRecipesByArea","getRecipesByIngredient","meals","Promise","all","fill","getRandomMeal","flatMap","meal","recipes","useMemo","Math","ceil","length","paginatedRecipes","Container","maxW","Heading","textAlign","InputGroup","InputLeftElement","pointerEvents","SearchIcon","Input","placeholder","onChange","e","target","_focus","Grid","templateColumns","Skeleton","isLoaded","Select","strIngredient","base","md","lg","_","recipeDetailsRoute","RecipeDetailsPage","recipeId","useParams","recipeData","getRecipeById","_a","ingredients","Object","handleToggleSelect","List","item","ListItem","selectedRecipesRoute","SelectedRecipesPage","handleRemove","xl","Divider","whiteSpace","createRouter","routeTree","addChildren","App","QueryClientProvider","client","ChakraProvider","RouterProvider","document","getElementById","render","StrictMode"],"mappings":"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","x_google_ignoreList":[0,1]}